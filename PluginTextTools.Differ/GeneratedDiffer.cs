using Mutagen.Bethesda.Skyrim;
using System.Collections.Generic;
namespace PluginTextTools.Differ {
  public partial class Differ {
    public (Result, object?) Diff(IRaceGetter? a, IRaceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ExportingExtraNam2, b?.ExportingExtraNam2);
      if (result is Result.Modified or Result.Added) {ret["ExportingExtraNam2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExportingExtraNam2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorEffect, b?.ActorEffect);
      if (result is Result.Modified or Result.Added) {ret["ActorEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Skin, b?.Skin);
      if (result is Result.Modified or Result.Added) {ret["Skin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Skin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BodyTemplate, b?.BodyTemplate);
      if (result is Result.Modified or Result.Added) {ret["BodyTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BodyTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost0, b?.SkillBoost0);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost0"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost0"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost1, b?.SkillBoost1);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost2, b?.SkillBoost2);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost3, b?.SkillBoost3);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost4, b?.SkillBoost4);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost4"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost4"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost5, b?.SkillBoost5);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost5"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost5"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillBoost6, b?.SkillBoost6);
      if (result is Result.Modified or Result.Added) {ret["SkillBoost6"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillBoost6"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Height, b?.Height);
      if (result is Result.Modified or Result.Added) {ret["Height"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Height"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Starting, b?.Starting);
      if (result is Result.Modified or Result.Added) {ret["Starting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Starting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseCarryWeight, b?.BaseCarryWeight);
      if (result is Result.Modified or Result.Added) {ret["BaseCarryWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseCarryWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMass, b?.BaseMass);
      if (result is Result.Modified or Result.Added) {ret["BaseMass"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMass"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AccelerationRate, b?.AccelerationRate);
      if (result is Result.Modified or Result.Added) {ret["AccelerationRate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AccelerationRate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DecelerationRate, b?.DecelerationRate);
      if (result is Result.Modified or Result.Added) {ret["DecelerationRate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DecelerationRate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Size, b?.Size);
      if (result is Result.Modified or Result.Added) {ret["Size"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Size"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadBipedObject, b?.HeadBipedObject);
      if (result is Result.Modified or Result.Added) {ret["HeadBipedObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadBipedObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HairBipedObject, b?.HairBipedObject);
      if (result is Result.Modified or Result.Added) {ret["HairBipedObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HairBipedObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InjuredHealthPercent, b?.InjuredHealthPercent);
      if (result is Result.Modified or Result.Added) {ret["InjuredHealthPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InjuredHealthPercent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ShieldBipedObject, b?.ShieldBipedObject);
      if (result is Result.Modified or Result.Added) {ret["ShieldBipedObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ShieldBipedObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Regen, b?.Regen);
      if (result is Result.Modified or Result.Added) {ret["Regen"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Regen"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnarmedDamage, b?.UnarmedDamage);
      if (result is Result.Modified or Result.Added) {ret["UnarmedDamage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnarmedDamage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnarmedReach, b?.UnarmedReach);
      if (result is Result.Modified or Result.Added) {ret["UnarmedReach"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnarmedReach"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BodyBipedObject, b?.BodyBipedObject);
      if (result is Result.Modified or Result.Added) {ret["BodyBipedObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BodyBipedObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AimAngleTolerance, b?.AimAngleTolerance);
      if (result is Result.Modified or Result.Added) {ret["AimAngleTolerance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AimAngleTolerance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlightRadius, b?.FlightRadius);
      if (result is Result.Modified or Result.Added) {ret["FlightRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlightRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AngularAccelerationRate, b?.AngularAccelerationRate);
      if (result is Result.Modified or Result.Added) {ret["AngularAccelerationRate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AngularAccelerationRate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AngularTolerance, b?.AngularTolerance);
      if (result is Result.Modified or Result.Added) {ret["AngularTolerance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AngularTolerance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MountData, b?.MountData);
      if (result is Result.Modified or Result.Added) {ret["MountData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MountData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkeletalModel, b?.SkeletalModel);
      if (result is Result.Modified or Result.Added) {ret["SkeletalModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkeletalModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MovementTypeNames, b?.MovementTypeNames);
      if (result is Result.Modified or Result.Added) {ret["MovementTypeNames"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MovementTypeNames"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Voices, b?.Voices);
      if (result is Result.Modified or Result.Added) {ret["Voices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Voices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DecapitateArmors, b?.DecapitateArmors);
      if (result is Result.Modified or Result.Added) {ret["DecapitateArmors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DecapitateArmors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultHairColors, b?.DefaultHairColors);
      if (result is Result.Modified or Result.Added) {ret["DefaultHairColors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultHairColors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NumberOfTintsInList, b?.NumberOfTintsInList);
      if (result is Result.Modified or Result.Added) {ret["NumberOfTintsInList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NumberOfTintsInList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FacegenMainClamp, b?.FacegenMainClamp);
      if (result is Result.Modified or Result.Added) {ret["FacegenMainClamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FacegenMainClamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FacegenFaceClamp, b?.FacegenFaceClamp);
      if (result is Result.Modified or Result.Added) {ret["FacegenFaceClamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FacegenFaceClamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackRace, b?.AttackRace);
      if (result is Result.Modified or Result.Added) {ret["AttackRace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackRace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Attacks, b?.Attacks);
      if (result is Result.Modified or Result.Added) {ret["Attacks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Attacks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BodyData, b?.BodyData);
      if (result is Result.Modified or Result.Added) {ret["BodyData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BodyData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Hairs, b?.Hairs);
      if (result is Result.Modified or Result.Added) {ret["Hairs"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Hairs"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Eyes, b?.Eyes);
      if (result is Result.Modified or Result.Added) {ret["Eyes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Eyes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BodyPartData, b?.BodyPartData);
      if (result is Result.Modified or Result.Added) {ret["BodyPartData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BodyPartData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BehaviorGraph, b?.BehaviorGraph);
      if (result is Result.Modified or Result.Added) {ret["BehaviorGraph"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BehaviorGraph"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaterialType, b?.MaterialType);
      if (result is Result.Modified or Result.Added) {ret["MaterialType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaterialType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactDataSet, b?.ImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["ImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DecapitationFX, b?.DecapitationFX);
      if (result is Result.Modified or Result.Added) {ret["DecapitationFX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DecapitationFX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OpenLootSound, b?.OpenLootSound);
      if (result is Result.Modified or Result.Added) {ret["OpenLootSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OpenLootSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloseLootSound, b?.CloseLootSound);
      if (result is Result.Modified or Result.Added) {ret["CloseLootSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloseLootSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BipedObjectNames, b?.BipedObjectNames);
      if (result is Result.Modified or Result.Added) {ret["BipedObjectNames"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BipedObjectNames"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MovementTypes, b?.MovementTypes);
      if (result is Result.Modified or Result.Added) {ret["MovementTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MovementTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentFlags, b?.EquipmentFlags);
      if (result is Result.Modified or Result.Added) {ret["EquipmentFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentSlots, b?.EquipmentSlots);
      if (result is Result.Modified or Result.Added) {ret["EquipmentSlots"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentSlots"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnarmedEquipSlot, b?.UnarmedEquipSlot);
      if (result is Result.Modified or Result.Added) {ret["UnarmedEquipSlot"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnarmedEquipSlot"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FaceFxPhonemes, b?.FaceFxPhonemes);
      if (result is Result.Modified or Result.Added) {ret["FaceFxPhonemes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FaceFxPhonemes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMovementDefaultWalk, b?.BaseMovementDefaultWalk);
      if (result is Result.Modified or Result.Added) {ret["BaseMovementDefaultWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMovementDefaultWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMovementDefaultRun, b?.BaseMovementDefaultRun);
      if (result is Result.Modified or Result.Added) {ret["BaseMovementDefaultRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMovementDefaultRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMovementDefaultSwim, b?.BaseMovementDefaultSwim);
      if (result is Result.Modified or Result.Added) {ret["BaseMovementDefaultSwim"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMovementDefaultSwim"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMovementDefaultFly, b?.BaseMovementDefaultFly);
      if (result is Result.Modified or Result.Added) {ret["BaseMovementDefaultFly"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMovementDefaultFly"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMovementDefaultSneak, b?.BaseMovementDefaultSneak);
      if (result is Result.Modified or Result.Added) {ret["BaseMovementDefaultSneak"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMovementDefaultSneak"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseMovementDefaultSprint, b?.BaseMovementDefaultSprint);
      if (result is Result.Modified or Result.Added) {ret["BaseMovementDefaultSprint"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseMovementDefaultSprint"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadData, b?.HeadData);
      if (result is Result.Modified or Result.Added) {ret["HeadData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MorphRace, b?.MorphRace);
      if (result is Result.Modified or Result.Added) {ret["MorphRace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MorphRace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ArmorRace, b?.ArmorRace);
      if (result is Result.Modified or Result.Added) {ret["ArmorRace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ArmorRace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAcousticSpaceGetter? a, IAcousticSpaceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientSound, b?.AmbientSound);
      if (result is Result.Modified or Result.Added) {ret["AmbientSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UseSoundFromRegion, b?.UseSoundFromRegion);
      if (result is Result.Modified or Result.Added) {ret["UseSoundFromRegion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UseSoundFromRegion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnvironmentType, b?.EnvironmentType);
      if (result is Result.Modified or Result.Added) {ret["EnvironmentType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnvironmentType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActionRecordGetter? a, IActionRecordGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActivatorGetter? a, IActivatorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MarkerColor, b?.MarkerColor);
      if (result is Result.Modified or Result.Added) {ret["MarkerColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MarkerColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingSound, b?.LoopingSound);
      if (result is Result.Modified or Result.Added) {ret["LoopingSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivationSound, b?.ActivationSound);
      if (result is Result.Modified or Result.Added) {ret["ActivationSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivationSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterType, b?.WaterType);
      if (result is Result.Modified or Result.Added) {ret["WaterType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateTextOverride, b?.ActivateTextOverride);
      if (result is Result.Modified or Result.Added) {ret["ActivateTextOverride"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateTextOverride"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InteractionKeyword, b?.InteractionKeyword);
      if (result is Result.Modified or Result.Added) {ret["InteractionKeyword"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InteractionKeyword"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActorValueInformationGetter? a, IActorValueInformationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Abbreviation, b?.Abbreviation);
      if (result is Result.Modified or Result.Added) {ret["Abbreviation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Abbreviation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CNAM, b?.CNAM);
      if (result is Result.Modified or Result.Added) {ret["CNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Skill, b?.Skill);
      if (result is Result.Modified or Result.Added) {ret["Skill"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Skill"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PerkTree, b?.PerkTree);
      if (result is Result.Modified or Result.Added) {ret["PerkTree"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PerkTree"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAddonNodeGetter? a, IAddonNodeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NodeIndex, b?.NodeIndex);
      if (result is Result.Modified or Result.Added) {ret["NodeIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NodeIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MasterParticleSystemCap, b?.MasterParticleSystemCap);
      if (result is Result.Modified or Result.Added) {ret["MasterParticleSystemCap"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MasterParticleSystemCap"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AlwaysLoaded, b?.AlwaysLoaded);
      if (result is Result.Modified or Result.Added) {ret["AlwaysLoaded"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AlwaysLoaded"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMDataTypeState, b?.DNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAlchemicalApparatusGetter? a, IAlchemicalApparatusGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Quality, b?.Quality);
      if (result is Result.Modified or Result.Added) {ret["Quality"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quality"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAmmunitionGetter? a, IAmmunitionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Damage, b?.Damage);
      if (result is Result.Modified or Result.Added) {ret["Damage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Damage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ShortName, b?.ShortName);
      if (result is Result.Modified or Result.Added) {ret["ShortName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ShortName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAnimatedObjectGetter? a, IAnimatedObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnloadEvent, b?.UnloadEvent);
      if (result is Result.Modified or Result.Added) {ret["UnloadEvent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnloadEvent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IArmorGetter? a, IArmorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectEffect, b?.ObjectEffect);
      if (result is Result.Modified or Result.Added) {ret["ObjectEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantmentAmount, b?.EnchantmentAmount);
      if (result is Result.Modified or Result.Added) {ret["EnchantmentAmount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantmentAmount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WorldModel, b?.WorldModel);
      if (result is Result.Modified or Result.Added) {ret["WorldModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WorldModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BodyTemplate, b?.BodyTemplate);
      if (result is Result.Modified or Result.Added) {ret["BodyTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BodyTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RagdollConstraintTemplate, b?.RagdollConstraintTemplate);
      if (result is Result.Modified or Result.Added) {ret["RagdollConstraintTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RagdollConstraintTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentType, b?.EquipmentType);
      if (result is Result.Modified or Result.Added) {ret["EquipmentType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BashImpactDataSet, b?.BashImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["BashImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BashImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AlternateBlockMaterial, b?.AlternateBlockMaterial);
      if (result is Result.Modified or Result.Added) {ret["AlternateBlockMaterial"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AlternateBlockMaterial"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Race, b?.Race);
      if (result is Result.Modified or Result.Added) {ret["Race"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Race"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Armature, b?.Armature);
      if (result is Result.Modified or Result.Added) {ret["Armature"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Armature"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ArmorRating, b?.ArmorRating);
      if (result is Result.Modified or Result.Added) {ret["ArmorRating"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ArmorRating"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TemplateArmor, b?.TemplateArmor);
      if (result is Result.Modified or Result.Added) {ret["TemplateArmor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TemplateArmor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IArmorAddonGetter? a, IArmorAddonGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BodyTemplate, b?.BodyTemplate);
      if (result is Result.Modified or Result.Added) {ret["BodyTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BodyTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Race, b?.Race);
      if (result is Result.Modified or Result.Added) {ret["Race"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Race"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WeightSliderEnabled, b?.WeightSliderEnabled);
      if (result is Result.Modified or Result.Added) {ret["WeightSliderEnabled"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WeightSliderEnabled"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DetectionSoundValue, b?.DetectionSoundValue);
      if (result is Result.Modified or Result.Added) {ret["DetectionSoundValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DetectionSoundValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WeaponAdjust, b?.WeaponAdjust);
      if (result is Result.Modified or Result.Added) {ret["WeaponAdjust"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WeaponAdjust"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WorldModel, b?.WorldModel);
      if (result is Result.Modified or Result.Added) {ret["WorldModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WorldModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FirstPersonModel, b?.FirstPersonModel);
      if (result is Result.Modified or Result.Added) {ret["FirstPersonModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FirstPersonModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkinTexture, b?.SkinTexture);
      if (result is Result.Modified or Result.Added) {ret["SkinTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkinTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureSwapList, b?.TextureSwapList);
      if (result is Result.Modified or Result.Added) {ret["TextureSwapList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureSwapList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AdditionalRaces, b?.AdditionalRaces);
      if (result is Result.Modified or Result.Added) {ret["AdditionalRaces"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AdditionalRaces"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FootstepSound, b?.FootstepSound);
      if (result is Result.Modified or Result.Added) {ret["FootstepSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FootstepSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ArtObject, b?.ArtObject);
      if (result is Result.Modified or Result.Added) {ret["ArtObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ArtObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMDataTypeState, b?.DNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IArtObjectGetter? a, IArtObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBodyPartDataGetter? a, IBodyPartDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parts, b?.Parts);
      if (result is Result.Modified or Result.Added) {ret["Parts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parts"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBookGetter? a, IBookGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BookText, b?.BookText);
      if (result is Result.Modified or Result.Added) {ret["BookText"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BookText"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Teaches, b?.Teaches);
      if (result is Result.Modified or Result.Added) {ret["Teaches"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Teaches"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InventoryArt, b?.InventoryArt);
      if (result is Result.Modified or Result.Added) {ret["InventoryArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InventoryArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICameraPathGetter? a, ICameraPathGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RelatedPaths, b?.RelatedPaths);
      if (result is Result.Modified or Result.Added) {ret["RelatedPaths"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RelatedPaths"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Zoom, b?.Zoom);
      if (result is Result.Modified or Result.Added) {ret["Zoom"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Zoom"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ZoomMustHaveCameraShots, b?.ZoomMustHaveCameraShots);
      if (result is Result.Modified or Result.Added) {ret["ZoomMustHaveCameraShots"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ZoomMustHaveCameraShots"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Shots, b?.Shots);
      if (result is Result.Modified or Result.Added) {ret["Shots"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Shots"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICameraShotGetter? a, ICameraShotGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Action, b?.Action);
      if (result is Result.Modified or Result.Added) {ret["Action"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Action"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Target, b?.Target);
      if (result is Result.Modified or Result.Added) {ret["Target"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Target"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TimeMultiplierPlayer, b?.TimeMultiplierPlayer);
      if (result is Result.Modified or Result.Added) {ret["TimeMultiplierPlayer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TimeMultiplierPlayer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TimeMultiplierTarget, b?.TimeMultiplierTarget);
      if (result is Result.Modified or Result.Added) {ret["TimeMultiplierTarget"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TimeMultiplierTarget"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TimeMultiplierGlobal, b?.TimeMultiplierGlobal);
      if (result is Result.Modified or Result.Added) {ret["TimeMultiplierGlobal"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TimeMultiplierGlobal"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxTime, b?.MaxTime);
      if (result is Result.Modified or Result.Added) {ret["MaxTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinTime, b?.MinTime);
      if (result is Result.Modified or Result.Added) {ret["MinTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TargetPercentBetweenActors, b?.TargetPercentBetweenActors);
      if (result is Result.Modified or Result.Added) {ret["TargetPercentBetweenActors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TargetPercentBetweenActors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NearTargetDistance, b?.NearTargetDistance);
      if (result is Result.Modified or Result.Added) {ret["NearTargetDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NearTargetDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpaceModifier, b?.ImageSpaceModifier);
      if (result is Result.Modified or Result.Added) {ret["ImageSpaceModifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpaceModifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICellGetter? a, ICellGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Grid, b?.Grid);
      if (result is Result.Modified or Result.Added) {ret["Grid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grid"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Lighting, b?.Lighting);
      if (result is Result.Modified or Result.Added) {ret["Lighting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Lighting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OcclusionData, b?.OcclusionData);
      if (result is Result.Modified or Result.Added) {ret["OcclusionData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OcclusionData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxHeightData, b?.MaxHeightData);
      if (result is Result.Modified or Result.Added) {ret["MaxHeightData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxHeightData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightingTemplate, b?.LightingTemplate);
      if (result is Result.Modified or Result.Added) {ret["LightingTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightingTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LNAM, b?.LNAM);
      if (result is Result.Modified or Result.Added) {ret["LNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterHeight, b?.WaterHeight);
      if (result is Result.Modified or Result.Added) {ret["WaterHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterNoiseTexture, b?.WaterNoiseTexture);
      if (result is Result.Modified or Result.Added) {ret["WaterNoiseTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterNoiseTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Regions, b?.Regions);
      if (result is Result.Modified or Result.Added) {ret["Regions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Regions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XWCN, b?.XWCN);
      if (result is Result.Modified or Result.Added) {ret["XWCN"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XWCN"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XWCS, b?.XWCS);
      if (result is Result.Modified or Result.Added) {ret["XWCS"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XWCS"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterVelocity, b?.WaterVelocity);
      if (result is Result.Modified or Result.Added) {ret["WaterVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Water, b?.Water);
      if (result is Result.Modified or Result.Added) {ret["Water"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Water"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LockList, b?.LockList);
      if (result is Result.Modified or Result.Added) {ret["LockList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LockList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterEnvironmentMap, b?.WaterEnvironmentMap);
      if (result is Result.Modified or Result.Added) {ret["WaterEnvironmentMap"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterEnvironmentMap"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkyAndWeatherFromRegion, b?.SkyAndWeatherFromRegion);
      if (result is Result.Modified or Result.Added) {ret["SkyAndWeatherFromRegion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkyAndWeatherFromRegion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AcousticSpace, b?.AcousticSpace);
      if (result is Result.Modified or Result.Added) {ret["AcousticSpace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AcousticSpace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Music, b?.Music);
      if (result is Result.Modified or Result.Added) {ret["Music"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Music"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpace, b?.ImageSpace);
      if (result is Result.Modified or Result.Added) {ret["ImageSpace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Landscape, b?.Landscape);
      if (result is Result.Modified or Result.Added) {ret["Landscape"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Landscape"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavigationMeshes, b?.NavigationMeshes);
      if (result is Result.Modified or Result.Added) {ret["NavigationMeshes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavigationMeshes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Timestamp, b?.Timestamp);
      if (result is Result.Modified or Result.Added) {ret["Timestamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Timestamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnknownGroupData, b?.UnknownGroupData);
      if (result is Result.Modified or Result.Added) {ret["UnknownGroupData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnknownGroupData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PersistentTimestamp, b?.PersistentTimestamp);
      if (result is Result.Modified or Result.Added) {ret["PersistentTimestamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PersistentTimestamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PersistentUnknownGroupData, b?.PersistentUnknownGroupData);
      if (result is Result.Modified or Result.Added) {ret["PersistentUnknownGroupData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PersistentUnknownGroupData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Persistent, b?.Persistent);
      if (result is Result.Modified or Result.Added) {ret["Persistent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Persistent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TemporaryTimestamp, b?.TemporaryTimestamp);
      if (result is Result.Modified or Result.Added) {ret["TemporaryTimestamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TemporaryTimestamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TemporaryUnknownGroupData, b?.TemporaryUnknownGroupData);
      if (result is Result.Modified or Result.Added) {ret["TemporaryUnknownGroupData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TemporaryUnknownGroupData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Temporary, b?.Temporary);
      if (result is Result.Modified or Result.Added) {ret["Temporary"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Temporary"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IClassGetter? a, IClassGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icon, b?.Icon);
      if (result is Result.Modified or Result.Added) {ret["Icon"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icon"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Teaches, b?.Teaches);
      if (result is Result.Modified or Result.Added) {ret["Teaches"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Teaches"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxTrainingLevel, b?.MaxTrainingLevel);
      if (result is Result.Modified or Result.Added) {ret["MaxTrainingLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxTrainingLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillWeights, b?.SkillWeights);
      if (result is Result.Modified or Result.Added) {ret["SkillWeights"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillWeights"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BleedoutDefault, b?.BleedoutDefault);
      if (result is Result.Modified or Result.Added) {ret["BleedoutDefault"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BleedoutDefault"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VoicePoints, b?.VoicePoints);
      if (result is Result.Modified or Result.Added) {ret["VoicePoints"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VoicePoints"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StatWeights, b?.StatWeights);
      if (result is Result.Modified or Result.Added) {ret["StatWeights"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StatWeights"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IClimateGetter? a, IClimateGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.WeatherTypes, b?.WeatherTypes);
      if (result is Result.Modified or Result.Added) {ret["WeatherTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WeatherTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunTexture, b?.SunTexture);
      if (result is Result.Modified or Result.Added) {ret["SunTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunGlareTexture, b?.SunGlareTexture);
      if (result is Result.Modified or Result.Added) {ret["SunGlareTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunGlareTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunriseBeginRaw, b?.SunriseBeginRaw);
      if (result is Result.Modified or Result.Added) {ret["SunriseBeginRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunriseBeginRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunriseEndRaw, b?.SunriseEndRaw);
      if (result is Result.Modified or Result.Added) {ret["SunriseEndRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunriseEndRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunsetBeginRaw, b?.SunsetBeginRaw);
      if (result is Result.Modified or Result.Added) {ret["SunsetBeginRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunsetBeginRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunsetEndRaw, b?.SunsetEndRaw);
      if (result is Result.Modified or Result.Added) {ret["SunsetEndRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunsetEndRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Volatility, b?.Volatility);
      if (result is Result.Modified or Result.Added) {ret["Volatility"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Volatility"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Moons, b?.Moons);
      if (result is Result.Modified or Result.Added) {ret["Moons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Moons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PhaseLength, b?.PhaseLength);
      if (result is Result.Modified or Result.Added) {ret["PhaseLength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PhaseLength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TNAMDataTypeState, b?.TNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["TNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICollisionLayerGetter? a, ICollisionLayerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DebugColor, b?.DebugColor);
      if (result is Result.Modified or Result.Added) {ret["DebugColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DebugColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CollidesWith, b?.CollidesWith);
      if (result is Result.Modified or Result.Added) {ret["CollidesWith"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CollidesWith"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IColorRecordGetter? a, IColorRecordGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Playable, b?.Playable);
      if (result is Result.Modified or Result.Added) {ret["Playable"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Playable"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICombatStyleGetter? a, ICombatStyleGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.OffensiveMult, b?.OffensiveMult);
      if (result is Result.Modified or Result.Added) {ret["OffensiveMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OffensiveMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefensiveMult, b?.DefensiveMult);
      if (result is Result.Modified or Result.Added) {ret["DefensiveMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefensiveMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GroupOffensiveMult, b?.GroupOffensiveMult);
      if (result is Result.Modified or Result.Added) {ret["GroupOffensiveMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GroupOffensiveMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentScoreMultMelee, b?.EquipmentScoreMultMelee);
      if (result is Result.Modified or Result.Added) {ret["EquipmentScoreMultMelee"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentScoreMultMelee"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentScoreMultMagic, b?.EquipmentScoreMultMagic);
      if (result is Result.Modified or Result.Added) {ret["EquipmentScoreMultMagic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentScoreMultMagic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentScoreMultRanged, b?.EquipmentScoreMultRanged);
      if (result is Result.Modified or Result.Added) {ret["EquipmentScoreMultRanged"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentScoreMultRanged"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentScoreMultShout, b?.EquipmentScoreMultShout);
      if (result is Result.Modified or Result.Added) {ret["EquipmentScoreMultShout"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentScoreMultShout"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentScoreMultUnarmed, b?.EquipmentScoreMultUnarmed);
      if (result is Result.Modified or Result.Added) {ret["EquipmentScoreMultUnarmed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentScoreMultUnarmed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentScoreMultStaff, b?.EquipmentScoreMultStaff);
      if (result is Result.Modified or Result.Added) {ret["EquipmentScoreMultStaff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentScoreMultStaff"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AvoidThreatChance, b?.AvoidThreatChance);
      if (result is Result.Modified or Result.Added) {ret["AvoidThreatChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AvoidThreatChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CSMD, b?.CSMD);
      if (result is Result.Modified or Result.Added) {ret["CSMD"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CSMD"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Melee, b?.Melee);
      if (result is Result.Modified or Result.Added) {ret["Melee"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Melee"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloseRange, b?.CloseRange);
      if (result is Result.Modified or Result.Added) {ret["CloseRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloseRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LongRangeStrafeMult, b?.LongRangeStrafeMult);
      if (result is Result.Modified or Result.Added) {ret["LongRangeStrafeMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LongRangeStrafeMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flight, b?.Flight);
      if (result is Result.Modified or Result.Added) {ret["Flight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CSGDDataTypeState, b?.CSGDDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["CSGDDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CSGDDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IConstructibleObjectGetter? a, IConstructibleObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CreatedObject, b?.CreatedObject);
      if (result is Result.Modified or Result.Added) {ret["CreatedObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CreatedObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WorkbenchKeyword, b?.WorkbenchKeyword);
      if (result is Result.Modified or Result.Added) {ret["WorkbenchKeyword"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WorkbenchKeyword"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CreatedObjectCount, b?.CreatedObjectCount);
      if (result is Result.Modified or Result.Added) {ret["CreatedObjectCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CreatedObjectCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IContainerGetter? a, IContainerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OpenSound, b?.OpenSound);
      if (result is Result.Modified or Result.Added) {ret["OpenSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OpenSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloseSound, b?.CloseSound);
      if (result is Result.Modified or Result.Added) {ret["CloseSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloseSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDebrisGetter? a, IDebrisGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Models, b?.Models);
      if (result is Result.Modified or Result.Added) {ret["Models"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Models"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDefaultObjectManagerGetter? a, IDefaultObjectManagerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Objects, b?.Objects);
      if (result is Result.Modified or Result.Added) {ret["Objects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Objects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogBranchGetter? a, IDialogBranchGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TNAM, b?.TNAM);
      if (result is Result.Modified or Result.Added) {ret["TNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StartingTopic, b?.StartingTopic);
      if (result is Result.Modified or Result.Added) {ret["StartingTopic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StartingTopic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogResponsesGetter? a, IDialogResponsesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATA, b?.DATA);
      if (result is Result.Modified or Result.Added) {ret["DATA"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATA"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Topic, b?.Topic);
      if (result is Result.Modified or Result.Added) {ret["Topic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Topic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreviousDialog, b?.PreviousDialog);
      if (result is Result.Modified or Result.Added) {ret["PreviousDialog"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreviousDialog"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorLevel, b?.FavorLevel);
      if (result is Result.Modified or Result.Added) {ret["FavorLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkTo, b?.LinkTo);
      if (result is Result.Modified or Result.Added) {ret["LinkTo"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkTo"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ResponseData, b?.ResponseData);
      if (result is Result.Modified or Result.Added) {ret["ResponseData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ResponseData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Responses, b?.Responses);
      if (result is Result.Modified or Result.Added) {ret["Responses"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Responses"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnknownData, b?.UnknownData);
      if (result is Result.Modified or Result.Added) {ret["UnknownData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnknownData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Prompt, b?.Prompt);
      if (result is Result.Modified or Result.Added) {ret["Prompt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Prompt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Speaker, b?.Speaker);
      if (result is Result.Modified or Result.Added) {ret["Speaker"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Speaker"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WalkAwayTopic, b?.WalkAwayTopic);
      if (result is Result.Modified or Result.Added) {ret["WalkAwayTopic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WalkAwayTopic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AudioOutputOverride, b?.AudioOutputOverride);
      if (result is Result.Modified or Result.Added) {ret["AudioOutputOverride"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AudioOutputOverride"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogTopicGetter? a, IDialogTopicGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Branch, b?.Branch);
      if (result is Result.Modified or Result.Added) {ret["Branch"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Branch"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TopicFlags, b?.TopicFlags);
      if (result is Result.Modified or Result.Added) {ret["TopicFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TopicFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Category, b?.Category);
      if (result is Result.Modified or Result.Added) {ret["Category"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Category"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Subtype, b?.Subtype);
      if (result is Result.Modified or Result.Added) {ret["Subtype"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Subtype"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SubtypeName, b?.SubtypeName);
      if (result is Result.Modified or Result.Added) {ret["SubtypeName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SubtypeName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Timestamp, b?.Timestamp);
      if (result is Result.Modified or Result.Added) {ret["Timestamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Timestamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Responses, b?.Responses);
      if (result is Result.Modified or Result.Added) {ret["Responses"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Responses"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDoorGetter? a, IDoorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OpenSound, b?.OpenSound);
      if (result is Result.Modified or Result.Added) {ret["OpenSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OpenSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloseSound, b?.CloseSound);
      if (result is Result.Modified or Result.Added) {ret["CloseSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloseSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopSound, b?.LoopSound);
      if (result is Result.Modified or Result.Added) {ret["LoopSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDualCastDataGetter? a, IDualCastDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Explosion, b?.Explosion);
      if (result is Result.Modified or Result.Added) {ret["Explosion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Explosion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EffectShader, b?.EffectShader);
      if (result is Result.Modified or Result.Added) {ret["EffectShader"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EffectShader"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HitEffectArt, b?.HitEffectArt);
      if (result is Result.Modified or Result.Added) {ret["HitEffectArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HitEffectArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactDataSet, b?.ImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["ImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InheritScale, b?.InheritScale);
      if (result is Result.Modified or Result.Added) {ret["InheritScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InheritScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEffectShaderGetter? a, IEffectShaderGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.FillTexture, b?.FillTexture);
      if (result is Result.Modified or Result.Added) {ret["FillTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleShaderTexture, b?.ParticleShaderTexture);
      if (result is Result.Modified or Result.Added) {ret["ParticleShaderTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleShaderTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HolesTexture, b?.HolesTexture);
      if (result is Result.Modified or Result.Added) {ret["HolesTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HolesTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MembranePaletteTexture, b?.MembranePaletteTexture);
      if (result is Result.Modified or Result.Added) {ret["MembranePaletteTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MembranePaletteTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticlePaletteTexture, b?.ParticlePaletteTexture);
      if (result is Result.Modified or Result.Added) {ret["ParticlePaletteTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticlePaletteTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MembraneSourceBlendMode, b?.MembraneSourceBlendMode);
      if (result is Result.Modified or Result.Added) {ret["MembraneSourceBlendMode"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MembraneSourceBlendMode"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MembraneBlendOperation, b?.MembraneBlendOperation);
      if (result is Result.Modified or Result.Added) {ret["MembraneBlendOperation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MembraneBlendOperation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MembraneZTest, b?.MembraneZTest);
      if (result is Result.Modified or Result.Added) {ret["MembraneZTest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MembraneZTest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey1, b?.FillColorKey1);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillAlphaFadeInTime, b?.FillAlphaFadeInTime);
      if (result is Result.Modified or Result.Added) {ret["FillAlphaFadeInTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillAlphaFadeInTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillFullAlphaTime, b?.FillFullAlphaTime);
      if (result is Result.Modified or Result.Added) {ret["FillFullAlphaTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillFullAlphaTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillFadeOutTime, b?.FillFadeOutTime);
      if (result is Result.Modified or Result.Added) {ret["FillFadeOutTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillFadeOutTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillPersistentAlphaRatio, b?.FillPersistentAlphaRatio);
      if (result is Result.Modified or Result.Added) {ret["FillPersistentAlphaRatio"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillPersistentAlphaRatio"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillAlphaPulseAmplitude, b?.FillAlphaPulseAmplitude);
      if (result is Result.Modified or Result.Added) {ret["FillAlphaPulseAmplitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillAlphaPulseAmplitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillAlphaPulseFrequency, b?.FillAlphaPulseFrequency);
      if (result is Result.Modified or Result.Added) {ret["FillAlphaPulseFrequency"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillAlphaPulseFrequency"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillTextureAnimationSpeedU, b?.FillTextureAnimationSpeedU);
      if (result is Result.Modified or Result.Added) {ret["FillTextureAnimationSpeedU"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillTextureAnimationSpeedU"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillTextureAnimationSpeedV, b?.FillTextureAnimationSpeedV);
      if (result is Result.Modified or Result.Added) {ret["FillTextureAnimationSpeedV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillTextureAnimationSpeedV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectFallOff, b?.EdgeEffectFallOff);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectFallOff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectFallOff"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectColor, b?.EdgeEffectColor);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectAlphaFadeInTime, b?.EdgeEffectAlphaFadeInTime);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectAlphaFadeInTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectAlphaFadeInTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectFullAlphaTime, b?.EdgeEffectFullAlphaTime);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectFullAlphaTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectFullAlphaTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectAlphaFadeOutTime, b?.EdgeEffectAlphaFadeOutTime);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectAlphaFadeOutTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectAlphaFadeOutTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectPersistentAlphaRatio, b?.EdgeEffectPersistentAlphaRatio);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectPersistentAlphaRatio"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectPersistentAlphaRatio"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectAlphaPulseAmplitude, b?.EdgeEffectAlphaPulseAmplitude);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectAlphaPulseAmplitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectAlphaPulseAmplitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectAlphaPulseFrequency, b?.EdgeEffectAlphaPulseFrequency);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectAlphaPulseFrequency"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectAlphaPulseFrequency"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillFullAlphaRatio, b?.FillFullAlphaRatio);
      if (result is Result.Modified or Result.Added) {ret["FillFullAlphaRatio"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillFullAlphaRatio"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeEffectFullAlphaRatio, b?.EdgeEffectFullAlphaRatio);
      if (result is Result.Modified or Result.Added) {ret["EdgeEffectFullAlphaRatio"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeEffectFullAlphaRatio"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MembraneDestBlendMode, b?.MembraneDestBlendMode);
      if (result is Result.Modified or Result.Added) {ret["MembraneDestBlendMode"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MembraneDestBlendMode"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleSourceBlendMode, b?.ParticleSourceBlendMode);
      if (result is Result.Modified or Result.Added) {ret["ParticleSourceBlendMode"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleSourceBlendMode"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleBlendOperation, b?.ParticleBlendOperation);
      if (result is Result.Modified or Result.Added) {ret["ParticleBlendOperation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleBlendOperation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleZTest, b?.ParticleZTest);
      if (result is Result.Modified or Result.Added) {ret["ParticleZTest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleZTest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleDestBlendMode, b?.ParticleDestBlendMode);
      if (result is Result.Modified or Result.Added) {ret["ParticleDestBlendMode"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleDestBlendMode"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleBirthRampUpTime, b?.ParticleBirthRampUpTime);
      if (result is Result.Modified or Result.Added) {ret["ParticleBirthRampUpTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleBirthRampUpTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleFullBirthTime, b?.ParticleFullBirthTime);
      if (result is Result.Modified or Result.Added) {ret["ParticleFullBirthTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleFullBirthTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleBirthRampDownTime, b?.ParticleBirthRampDownTime);
      if (result is Result.Modified or Result.Added) {ret["ParticleBirthRampDownTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleBirthRampDownTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleFullBirthRatio, b?.ParticleFullBirthRatio);
      if (result is Result.Modified or Result.Added) {ret["ParticleFullBirthRatio"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleFullBirthRatio"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticlePeristentCount, b?.ParticlePeristentCount);
      if (result is Result.Modified or Result.Added) {ret["ParticlePeristentCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticlePeristentCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleLifetime, b?.ParticleLifetime);
      if (result is Result.Modified or Result.Added) {ret["ParticleLifetime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleLifetime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleLifetimePlusMinus, b?.ParticleLifetimePlusMinus);
      if (result is Result.Modified or Result.Added) {ret["ParticleLifetimePlusMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleLifetimePlusMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialSpeedAlongNormal, b?.ParticleInitialSpeedAlongNormal);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialSpeedAlongNormal"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialSpeedAlongNormal"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAccelerationAlongNormal, b?.ParticleAccelerationAlongNormal);
      if (result is Result.Modified or Result.Added) {ret["ParticleAccelerationAlongNormal"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAccelerationAlongNormal"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialVelocity1, b?.ParticleInitialVelocity1);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialVelocity1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialVelocity1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialVelocity2, b?.ParticleInitialVelocity2);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialVelocity2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialVelocity2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialVelocity3, b?.ParticleInitialVelocity3);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialVelocity3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialVelocity3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAcceleration1, b?.ParticleAcceleration1);
      if (result is Result.Modified or Result.Added) {ret["ParticleAcceleration1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAcceleration1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAcceleration2, b?.ParticleAcceleration2);
      if (result is Result.Modified or Result.Added) {ret["ParticleAcceleration2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAcceleration2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAcceleration3, b?.ParticleAcceleration3);
      if (result is Result.Modified or Result.Added) {ret["ParticleAcceleration3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAcceleration3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleScaleKey1, b?.ParticleScaleKey1);
      if (result is Result.Modified or Result.Added) {ret["ParticleScaleKey1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleScaleKey1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleScaleKey2, b?.ParticleScaleKey2);
      if (result is Result.Modified or Result.Added) {ret["ParticleScaleKey2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleScaleKey2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleScaleKey1Time, b?.ParticleScaleKey1Time);
      if (result is Result.Modified or Result.Added) {ret["ParticleScaleKey1Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleScaleKey1Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleScaleKey2Time, b?.ParticleScaleKey2Time);
      if (result is Result.Modified or Result.Added) {ret["ParticleScaleKey2Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleScaleKey2Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey1, b?.ColorKey1);
      if (result is Result.Modified or Result.Added) {ret["ColorKey1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey2, b?.ColorKey2);
      if (result is Result.Modified or Result.Added) {ret["ColorKey2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey3, b?.ColorKey3);
      if (result is Result.Modified or Result.Added) {ret["ColorKey3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey1Alpha, b?.ColorKey1Alpha);
      if (result is Result.Modified or Result.Added) {ret["ColorKey1Alpha"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey1Alpha"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey2Alpha, b?.ColorKey2Alpha);
      if (result is Result.Modified or Result.Added) {ret["ColorKey2Alpha"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey2Alpha"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey3Alpha, b?.ColorKey3Alpha);
      if (result is Result.Modified or Result.Added) {ret["ColorKey3Alpha"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey3Alpha"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey1Time, b?.ColorKey1Time);
      if (result is Result.Modified or Result.Added) {ret["ColorKey1Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey1Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey2Time, b?.ColorKey2Time);
      if (result is Result.Modified or Result.Added) {ret["ColorKey2Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey2Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorKey3Time, b?.ColorKey3Time);
      if (result is Result.Modified or Result.Added) {ret["ColorKey3Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorKey3Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialSpeedAlongNormalPlusMinus, b?.ParticleInitialSpeedAlongNormalPlusMinus);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialSpeedAlongNormalPlusMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialSpeedAlongNormalPlusMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialRotationDegree, b?.ParticleInitialRotationDegree);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialRotationDegree"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialRotationDegree"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleInitialRotationDegreePlusMinus, b?.ParticleInitialRotationDegreePlusMinus);
      if (result is Result.Modified or Result.Added) {ret["ParticleInitialRotationDegreePlusMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleInitialRotationDegreePlusMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleRotationSpeedDegreePerSec, b?.ParticleRotationSpeedDegreePerSec);
      if (result is Result.Modified or Result.Added) {ret["ParticleRotationSpeedDegreePerSec"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleRotationSpeedDegreePerSec"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleRotationSpeedDegreePerSecPlusMinus, b?.ParticleRotationSpeedDegreePerSecPlusMinus);
      if (result is Result.Modified or Result.Added) {ret["ParticleRotationSpeedDegreePerSecPlusMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleRotationSpeedDegreePerSecPlusMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModels, b?.AddonModels);
      if (result is Result.Modified or Result.Added) {ret["AddonModels"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModels"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HolesStartTime, b?.HolesStartTime);
      if (result is Result.Modified or Result.Added) {ret["HolesStartTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HolesStartTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HolesEndTime, b?.HolesEndTime);
      if (result is Result.Modified or Result.Added) {ret["HolesEndTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HolesEndTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HolesStartValue, b?.HolesStartValue);
      if (result is Result.Modified or Result.Added) {ret["HolesStartValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HolesStartValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HolesEndValue, b?.HolesEndValue);
      if (result is Result.Modified or Result.Added) {ret["HolesEndValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HolesEndValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeWidth, b?.EdgeWidth);
      if (result is Result.Modified or Result.Added) {ret["EdgeWidth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeWidth"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeColor, b?.EdgeColor);
      if (result is Result.Modified or Result.Added) {ret["EdgeColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplosionWindSpeed, b?.ExplosionWindSpeed);
      if (result is Result.Modified or Result.Added) {ret["ExplosionWindSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplosionWindSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureCountU, b?.TextureCountU);
      if (result is Result.Modified or Result.Added) {ret["TextureCountU"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureCountU"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureCountV, b?.TextureCountV);
      if (result is Result.Modified or Result.Added) {ret["TextureCountV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureCountV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModelsFadeInTime, b?.AddonModelsFadeInTime);
      if (result is Result.Modified or Result.Added) {ret["AddonModelsFadeInTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModelsFadeInTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModelsFadeOutTime, b?.AddonModelsFadeOutTime);
      if (result is Result.Modified or Result.Added) {ret["AddonModelsFadeOutTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModelsFadeOutTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModelsScaleStart, b?.AddonModelsScaleStart);
      if (result is Result.Modified or Result.Added) {ret["AddonModelsScaleStart"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModelsScaleStart"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModelsScaleEnd, b?.AddonModelsScaleEnd);
      if (result is Result.Modified or Result.Added) {ret["AddonModelsScaleEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModelsScaleEnd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModelsScaleInTime, b?.AddonModelsScaleInTime);
      if (result is Result.Modified or Result.Added) {ret["AddonModelsScaleInTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModelsScaleInTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddonModelsScaleOutTime, b?.AddonModelsScaleOutTime);
      if (result is Result.Modified or Result.Added) {ret["AddonModelsScaleOutTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddonModelsScaleOutTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientSound, b?.AmbientSound);
      if (result is Result.Modified or Result.Added) {ret["AmbientSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey2, b?.FillColorKey2);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey3, b?.FillColorKey3);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey1Scale, b?.FillColorKey1Scale);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey1Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey1Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey2Scale, b?.FillColorKey2Scale);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey2Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey2Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey3Scale, b?.FillColorKey3Scale);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey3Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey3Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey1Time, b?.FillColorKey1Time);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey1Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey1Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey2Time, b?.FillColorKey2Time);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey2Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey2Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillColorKey3Time, b?.FillColorKey3Time);
      if (result is Result.Modified or Result.Added) {ret["FillColorKey3Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillColorKey3Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorScale, b?.ColorScale);
      if (result is Result.Modified or Result.Added) {ret["ColorScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BirthPositionOffset, b?.BirthPositionOffset);
      if (result is Result.Modified or Result.Added) {ret["BirthPositionOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BirthPositionOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BirthPositionOffsetRangePlusMinus, b?.BirthPositionOffsetRangePlusMinus);
      if (result is Result.Modified or Result.Added) {ret["BirthPositionOffsetRangePlusMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BirthPositionOffsetRangePlusMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedStartFrame, b?.ParticleAnimatedStartFrame);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedStartFrame"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedStartFrame"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedStartFrameVariation, b?.ParticleAnimatedStartFrameVariation);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedStartFrameVariation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedStartFrameVariation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedEndFrame, b?.ParticleAnimatedEndFrame);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedEndFrame"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedEndFrame"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedLoopStartFrame, b?.ParticleAnimatedLoopStartFrame);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedLoopStartFrame"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedLoopStartFrame"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedLoopStartVariation, b?.ParticleAnimatedLoopStartVariation);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedLoopStartVariation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedLoopStartVariation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedFrameCount, b?.ParticleAnimatedFrameCount);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedFrameCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedFrameCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleAnimatedFrameCountVariation, b?.ParticleAnimatedFrameCountVariation);
      if (result is Result.Modified or Result.Added) {ret["ParticleAnimatedFrameCountVariation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleAnimatedFrameCountVariation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillTextureScaleU, b?.FillTextureScaleU);
      if (result is Result.Modified or Result.Added) {ret["FillTextureScaleU"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillTextureScaleU"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FillTextureScaleV, b?.FillTextureScaleV);
      if (result is Result.Modified or Result.Added) {ret["FillTextureScaleV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FillTextureScaleV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SceneGraphEmitDepthLimit, b?.SceneGraphEmitDepthLimit);
      if (result is Result.Modified or Result.Added) {ret["SceneGraphEmitDepthLimit"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SceneGraphEmitDepthLimit"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEncounterZoneGetter? a, IEncounterZoneGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Owner, b?.Owner);
      if (result is Result.Modified or Result.Added) {ret["Owner"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Owner"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Rank, b?.Rank);
      if (result is Result.Modified or Result.Added) {ret["Rank"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rank"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinLevel, b?.MinLevel);
      if (result is Result.Modified or Result.Added) {ret["MinLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxLevel, b?.MaxLevel);
      if (result is Result.Modified or Result.Added) {ret["MaxLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEquipTypeGetter? a, IEquipTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.SlotParents, b?.SlotParents);
      if (result is Result.Modified or Result.Added) {ret["SlotParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SlotParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UseAllParents, b?.UseAllParents);
      if (result is Result.Modified or Result.Added) {ret["UseAllParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UseAllParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IExplosionGetter? a, IExplosionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectEffect, b?.ObjectEffect);
      if (result is Result.Modified or Result.Added) {ret["ObjectEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpaceModifier, b?.ImageSpaceModifier);
      if (result is Result.Modified or Result.Added) {ret["ImageSpaceModifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpaceModifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Light, b?.Light);
      if (result is Result.Modified or Result.Added) {ret["Light"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Light"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound1, b?.Sound1);
      if (result is Result.Modified or Result.Added) {ret["Sound1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound2, b?.Sound2);
      if (result is Result.Modified or Result.Added) {ret["Sound2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactDataSet, b?.ImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["ImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PlacedObject, b?.PlacedObject);
      if (result is Result.Modified or Result.Added) {ret["PlacedObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PlacedObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpawnProjectile, b?.SpawnProjectile);
      if (result is Result.Modified or Result.Added) {ret["SpawnProjectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpawnProjectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Force, b?.Force);
      if (result is Result.Modified or Result.Added) {ret["Force"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Force"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Damage, b?.Damage);
      if (result is Result.Modified or Result.Added) {ret["Damage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Damage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ISRadius, b?.ISRadius);
      if (result is Result.Modified or Result.Added) {ret["ISRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ISRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VerticalOffsetMult, b?.VerticalOffsetMult);
      if (result is Result.Modified or Result.Added) {ret["VerticalOffsetMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VerticalOffsetMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoundLevel, b?.SoundLevel);
      if (result is Result.Modified or Result.Added) {ret["SoundLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoundLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEyesGetter? a, IEyesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icon, b?.Icon);
      if (result is Result.Modified or Result.Added) {ret["Icon"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icon"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFactionGetter? a, IFactionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Relations, b?.Relations);
      if (result is Result.Modified or Result.Added) {ret["Relations"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Relations"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExteriorJailMarker, b?.ExteriorJailMarker);
      if (result is Result.Modified or Result.Added) {ret["ExteriorJailMarker"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExteriorJailMarker"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FollowerWaitMarker, b?.FollowerWaitMarker);
      if (result is Result.Modified or Result.Added) {ret["FollowerWaitMarker"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FollowerWaitMarker"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StolenGoodsContainer, b?.StolenGoodsContainer);
      if (result is Result.Modified or Result.Added) {ret["StolenGoodsContainer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StolenGoodsContainer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PlayerInventoryContainer, b?.PlayerInventoryContainer);
      if (result is Result.Modified or Result.Added) {ret["PlayerInventoryContainer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PlayerInventoryContainer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SharedCrimeFactionList, b?.SharedCrimeFactionList);
      if (result is Result.Modified or Result.Added) {ret["SharedCrimeFactionList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SharedCrimeFactionList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.JailOutfit, b?.JailOutfit);
      if (result is Result.Modified or Result.Added) {ret["JailOutfit"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["JailOutfit"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CrimeValues, b?.CrimeValues);
      if (result is Result.Modified or Result.Added) {ret["CrimeValues"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CrimeValues"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ranks, b?.Ranks);
      if (result is Result.Modified or Result.Added) {ret["Ranks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ranks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VendorBuySellList, b?.VendorBuySellList);
      if (result is Result.Modified or Result.Added) {ret["VendorBuySellList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VendorBuySellList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MerchantContainer, b?.MerchantContainer);
      if (result is Result.Modified or Result.Added) {ret["MerchantContainer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MerchantContainer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VendorValues, b?.VendorValues);
      if (result is Result.Modified or Result.Added) {ret["VendorValues"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VendorValues"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VendorLocation, b?.VendorLocation);
      if (result is Result.Modified or Result.Added) {ret["VendorLocation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VendorLocation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFloraGetter? a, IFloraGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PNAM, b?.PNAM);
      if (result is Result.Modified or Result.Added) {ret["PNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateTextOverride, b?.ActivateTextOverride);
      if (result is Result.Modified or Result.Added) {ret["ActivateTextOverride"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateTextOverride"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAM, b?.FNAM);
      if (result is Result.Modified or Result.Added) {ret["FNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ingredient, b?.Ingredient);
      if (result is Result.Modified or Result.Added) {ret["Ingredient"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ingredient"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HarvestSound, b?.HarvestSound);
      if (result is Result.Modified or Result.Added) {ret["HarvestSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HarvestSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Production, b?.Production);
      if (result is Result.Modified or Result.Added) {ret["Production"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Production"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFootstepGetter? a, IFootstepGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactDataSet, b?.ImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["ImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Tag, b?.Tag);
      if (result is Result.Modified or Result.Added) {ret["Tag"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Tag"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFootstepSetGetter? a, IFootstepSetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.WalkForwardFootsteps, b?.WalkForwardFootsteps);
      if (result is Result.Modified or Result.Added) {ret["WalkForwardFootsteps"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WalkForwardFootsteps"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RunForwardFootsteps, b?.RunForwardFootsteps);
      if (result is Result.Modified or Result.Added) {ret["RunForwardFootsteps"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RunForwardFootsteps"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WalkForwardAlternateFootsteps, b?.WalkForwardAlternateFootsteps);
      if (result is Result.Modified or Result.Added) {ret["WalkForwardAlternateFootsteps"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WalkForwardAlternateFootsteps"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RunForwardAlternateFootsteps, b?.RunForwardAlternateFootsteps);
      if (result is Result.Modified or Result.Added) {ret["RunForwardAlternateFootsteps"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RunForwardAlternateFootsteps"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WalkForwardAlternateFootsteps2, b?.WalkForwardAlternateFootsteps2);
      if (result is Result.Modified or Result.Added) {ret["WalkForwardAlternateFootsteps2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WalkForwardAlternateFootsteps2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFormListGetter? a, IFormListGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFurnitureGetter? a, IFurnitureGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PNAM, b?.PNAM);
      if (result is Result.Modified or Result.Added) {ret["PNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InteractionKeyword, b?.InteractionKeyword);
      if (result is Result.Modified or Result.Added) {ret["InteractionKeyword"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InteractionKeyword"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WorkbenchData, b?.WorkbenchData);
      if (result is Result.Modified or Result.Added) {ret["WorkbenchData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WorkbenchData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AssociatedSpell, b?.AssociatedSpell);
      if (result is Result.Modified or Result.Added) {ret["AssociatedSpell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AssociatedSpell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Markers, b?.Markers);
      if (result is Result.Modified or Result.Added) {ret["Markers"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Markers"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ModelFilename, b?.ModelFilename);
      if (result is Result.Modified or Result.Added) {ret["ModelFilename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ModelFilename"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGameSettingIntGetter? a, IGameSettingIntGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGameSettingFloatGetter? a, IGameSettingFloatGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGameSettingStringGetter? a, IGameSettingStringGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGameSettingBoolGetter? a, IGameSettingBoolGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGlobalIntGetter? a, IGlobalIntGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TypeChar, b?.TypeChar);
      if (result is Result.Modified or Result.Added) {ret["TypeChar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TypeChar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGlobalShortGetter? a, IGlobalShortGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TypeChar, b?.TypeChar);
      if (result is Result.Modified or Result.Added) {ret["TypeChar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TypeChar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGlobalFloatGetter? a, IGlobalFloatGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TypeChar, b?.TypeChar);
      if (result is Result.Modified or Result.Added) {ret["TypeChar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TypeChar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IGrassGetter? a, IGrassGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Density, b?.Density);
      if (result is Result.Modified or Result.Added) {ret["Density"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Density"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinSlope, b?.MinSlope);
      if (result is Result.Modified or Result.Added) {ret["MinSlope"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinSlope"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxSlope, b?.MaxSlope);
      if (result is Result.Modified or Result.Added) {ret["MaxSlope"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxSlope"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnitsFromWater, b?.UnitsFromWater);
      if (result is Result.Modified or Result.Added) {ret["UnitsFromWater"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnitsFromWater"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnitsFromWaterType, b?.UnitsFromWaterType);
      if (result is Result.Modified or Result.Added) {ret["UnitsFromWaterType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnitsFromWaterType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PositionRange, b?.PositionRange);
      if (result is Result.Modified or Result.Added) {ret["PositionRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PositionRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeightRange, b?.HeightRange);
      if (result is Result.Modified or Result.Added) {ret["HeightRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeightRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorRange, b?.ColorRange);
      if (result is Result.Modified or Result.Added) {ret["ColorRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WavePeriod, b?.WavePeriod);
      if (result is Result.Modified or Result.Added) {ret["WavePeriod"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WavePeriod"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IHairGetter? a, IHairGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IHazardGetter? a, IHazardGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpaceModifier, b?.ImageSpaceModifier);
      if (result is Result.Modified or Result.Added) {ret["ImageSpaceModifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpaceModifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Limit, b?.Limit);
      if (result is Result.Modified or Result.Added) {ret["Limit"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Limit"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Lifetime, b?.Lifetime);
      if (result is Result.Modified or Result.Added) {ret["Lifetime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Lifetime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpaceRadius, b?.ImageSpaceRadius);
      if (result is Result.Modified or Result.Added) {ret["ImageSpaceRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpaceRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TargetInterval, b?.TargetInterval);
      if (result is Result.Modified or Result.Added) {ret["TargetInterval"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TargetInterval"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Spell, b?.Spell);
      if (result is Result.Modified or Result.Added) {ret["Spell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Spell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Light, b?.Light);
      if (result is Result.Modified or Result.Added) {ret["Light"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Light"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactDataSet, b?.ImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["ImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IHeadPartGetter? a, IHeadPartGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExtraParts, b?.ExtraParts);
      if (result is Result.Modified or Result.Added) {ret["ExtraParts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExtraParts"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parts, b?.Parts);
      if (result is Result.Modified or Result.Added) {ret["Parts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parts"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureSet, b?.TextureSet);
      if (result is Result.Modified or Result.Added) {ret["TextureSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ValidRaces, b?.ValidRaces);
      if (result is Result.Modified or Result.Added) {ret["ValidRaces"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ValidRaces"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIdleAnimationGetter? a, IIdleAnimationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Filename, b?.Filename);
      if (result is Result.Modified or Result.Added) {ret["Filename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Filename"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AnimationEvent, b?.AnimationEvent);
      if (result is Result.Modified or Result.Added) {ret["AnimationEvent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AnimationEvent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RelatedIdles, b?.RelatedIdles);
      if (result is Result.Modified or Result.Added) {ret["RelatedIdles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RelatedIdles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingSecondsMin, b?.LoopingSecondsMin);
      if (result is Result.Modified or Result.Added) {ret["LoopingSecondsMin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingSecondsMin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingSecondsMax, b?.LoopingSecondsMax);
      if (result is Result.Modified or Result.Added) {ret["LoopingSecondsMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingSecondsMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AnimationGroupSection, b?.AnimationGroupSection);
      if (result is Result.Modified or Result.Added) {ret["AnimationGroupSection"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AnimationGroupSection"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReplayDelay, b?.ReplayDelay);
      if (result is Result.Modified or Result.Added) {ret["ReplayDelay"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReplayDelay"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIdleMarkerGetter? a, IIdleMarkerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IdleTimer, b?.IdleTimer);
      if (result is Result.Modified or Result.Added) {ret["IdleTimer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IdleTimer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Animations, b?.Animations);
      if (result is Result.Modified or Result.Added) {ret["Animations"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Animations"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImageSpaceGetter? a, IImageSpaceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ENAM, b?.ENAM);
      if (result is Result.Modified or Result.Added) {ret["ENAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ENAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Hdr, b?.Hdr);
      if (result is Result.Modified or Result.Added) {ret["Hdr"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Hdr"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Cinematic, b?.Cinematic);
      if (result is Result.Modified or Result.Added) {ret["Cinematic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Cinematic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Tint, b?.Tint);
      if (result is Result.Modified or Result.Added) {ret["Tint"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Tint"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthOfField, b?.DepthOfField);
      if (result is Result.Modified or Result.Added) {ret["DepthOfField"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthOfField"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImageSpaceAdapterGetter? a, IImageSpaceAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Duration, b?.Duration);
      if (result is Result.Modified or Result.Added) {ret["Duration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Duration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurFlags, b?.RadialBlurFlags);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurCenter, b?.RadialBlurCenter);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurCenter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurCenter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthOfFieldFlags, b?.DepthOfFieldFlags);
      if (result is Result.Modified or Result.Added) {ret["DepthOfFieldFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthOfFieldFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BlurRadius, b?.BlurRadius);
      if (result is Result.Modified or Result.Added) {ret["BlurRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlurRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DoubleVisionStrength, b?.DoubleVisionStrength);
      if (result is Result.Modified or Result.Added) {ret["DoubleVisionStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DoubleVisionStrength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TintColor, b?.TintColor);
      if (result is Result.Modified or Result.Added) {ret["TintColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TintColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FadeColor, b?.FadeColor);
      if (result is Result.Modified or Result.Added) {ret["FadeColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FadeColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurStrength, b?.RadialBlurStrength);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurStrength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurRampUp, b?.RadialBlurRampUp);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurRampUp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurRampUp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurStart, b?.RadialBlurStart);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurStart"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurStart"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurRampDown, b?.RadialBlurRampDown);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurRampDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurRampDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadialBlurDownStart, b?.RadialBlurDownStart);
      if (result is Result.Modified or Result.Added) {ret["RadialBlurDownStart"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadialBlurDownStart"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthOfFieldStrength, b?.DepthOfFieldStrength);
      if (result is Result.Modified or Result.Added) {ret["DepthOfFieldStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthOfFieldStrength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthOfFieldDistance, b?.DepthOfFieldDistance);
      if (result is Result.Modified or Result.Added) {ret["DepthOfFieldDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthOfFieldDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthOfFieldRange, b?.DepthOfFieldRange);
      if (result is Result.Modified or Result.Added) {ret["DepthOfFieldRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthOfFieldRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MotionBlurStrength, b?.MotionBlurStrength);
      if (result is Result.Modified or Result.Added) {ret["MotionBlurStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MotionBlurStrength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrEyeAdaptSpeedMult, b?.HdrEyeAdaptSpeedMult);
      if (result is Result.Modified or Result.Added) {ret["HdrEyeAdaptSpeedMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrEyeAdaptSpeedMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrEyeAdaptSpeedAdd, b?.HdrEyeAdaptSpeedAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrEyeAdaptSpeedAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrEyeAdaptSpeedAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrBloomBlurRadiusMult, b?.HdrBloomBlurRadiusMult);
      if (result is Result.Modified or Result.Added) {ret["HdrBloomBlurRadiusMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrBloomBlurRadiusMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrBloomBlurRadiusAdd, b?.HdrBloomBlurRadiusAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrBloomBlurRadiusAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrBloomBlurRadiusAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrBloomThresholdMult, b?.HdrBloomThresholdMult);
      if (result is Result.Modified or Result.Added) {ret["HdrBloomThresholdMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrBloomThresholdMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrBloomThresholdAdd, b?.HdrBloomThresholdAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrBloomThresholdAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrBloomThresholdAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrBloomScaleMult, b?.HdrBloomScaleMult);
      if (result is Result.Modified or Result.Added) {ret["HdrBloomScaleMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrBloomScaleMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrBloomScaleAdd, b?.HdrBloomScaleAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrBloomScaleAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrBloomScaleAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrTargetLumMinMult, b?.HdrTargetLumMinMult);
      if (result is Result.Modified or Result.Added) {ret["HdrTargetLumMinMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrTargetLumMinMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrTargetLumMinAdd, b?.HdrTargetLumMinAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrTargetLumMinAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrTargetLumMinAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrTargetLumMaxMult, b?.HdrTargetLumMaxMult);
      if (result is Result.Modified or Result.Added) {ret["HdrTargetLumMaxMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrTargetLumMaxMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrTargetLumMaxAdd, b?.HdrTargetLumMaxAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrTargetLumMaxAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrTargetLumMaxAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrSunlightScaleMult, b?.HdrSunlightScaleMult);
      if (result is Result.Modified or Result.Added) {ret["HdrSunlightScaleMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrSunlightScaleMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrSunlightScaleAdd, b?.HdrSunlightScaleAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrSunlightScaleAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrSunlightScaleAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrSkyScaleMult, b?.HdrSkyScaleMult);
      if (result is Result.Modified or Result.Added) {ret["HdrSkyScaleMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrSkyScaleMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdrSkyScaleAdd, b?.HdrSkyScaleAdd);
      if (result is Result.Modified or Result.Added) {ret["HdrSkyScaleAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdrSkyScaleAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown08, b?.Unknown08);
      if (result is Result.Modified or Result.Added) {ret["Unknown08"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown08"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown48, b?.Unknown48);
      if (result is Result.Modified or Result.Added) {ret["Unknown48"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown48"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown09, b?.Unknown09);
      if (result is Result.Modified or Result.Added) {ret["Unknown09"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown09"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown49, b?.Unknown49);
      if (result is Result.Modified or Result.Added) {ret["Unknown49"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown49"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown0A, b?.Unknown0A);
      if (result is Result.Modified or Result.Added) {ret["Unknown0A"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown0A"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4A, b?.Unknown4A);
      if (result is Result.Modified or Result.Added) {ret["Unknown4A"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4A"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown0B, b?.Unknown0B);
      if (result is Result.Modified or Result.Added) {ret["Unknown0B"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown0B"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4B, b?.Unknown4B);
      if (result is Result.Modified or Result.Added) {ret["Unknown4B"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4B"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown0C, b?.Unknown0C);
      if (result is Result.Modified or Result.Added) {ret["Unknown0C"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown0C"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4C, b?.Unknown4C);
      if (result is Result.Modified or Result.Added) {ret["Unknown4C"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4C"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown0D, b?.Unknown0D);
      if (result is Result.Modified or Result.Added) {ret["Unknown0D"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown0D"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4D, b?.Unknown4D);
      if (result is Result.Modified or Result.Added) {ret["Unknown4D"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4D"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown0E, b?.Unknown0E);
      if (result is Result.Modified or Result.Added) {ret["Unknown0E"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown0E"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4E, b?.Unknown4E);
      if (result is Result.Modified or Result.Added) {ret["Unknown4E"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4E"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown0F, b?.Unknown0F);
      if (result is Result.Modified or Result.Added) {ret["Unknown0F"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown0F"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4F, b?.Unknown4F);
      if (result is Result.Modified or Result.Added) {ret["Unknown4F"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4F"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown10, b?.Unknown10);
      if (result is Result.Modified or Result.Added) {ret["Unknown10"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown10"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown50, b?.Unknown50);
      if (result is Result.Modified or Result.Added) {ret["Unknown50"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown50"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CinematicSaturationMult, b?.CinematicSaturationMult);
      if (result is Result.Modified or Result.Added) {ret["CinematicSaturationMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CinematicSaturationMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CinematicSaturationAdd, b?.CinematicSaturationAdd);
      if (result is Result.Modified or Result.Added) {ret["CinematicSaturationAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CinematicSaturationAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CinematicBrightnessMult, b?.CinematicBrightnessMult);
      if (result is Result.Modified or Result.Added) {ret["CinematicBrightnessMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CinematicBrightnessMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CinematicBrightnessAdd, b?.CinematicBrightnessAdd);
      if (result is Result.Modified or Result.Added) {ret["CinematicBrightnessAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CinematicBrightnessAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CinematicContrastMult, b?.CinematicContrastMult);
      if (result is Result.Modified or Result.Added) {ret["CinematicContrastMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CinematicContrastMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CinematicContrastAdd, b?.CinematicContrastAdd);
      if (result is Result.Modified or Result.Added) {ret["CinematicContrastAdd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CinematicContrastAdd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown14, b?.Unknown14);
      if (result is Result.Modified or Result.Added) {ret["Unknown14"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown14"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown54, b?.Unknown54);
      if (result is Result.Modified or Result.Added) {ret["Unknown54"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown54"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMDataTypeState, b?.DNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImpactGetter? a, IImpactGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Duration, b?.Duration);
      if (result is Result.Modified or Result.Added) {ret["Duration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Duration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Orientation, b?.Orientation);
      if (result is Result.Modified or Result.Added) {ret["Orientation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Orientation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AngleThreshold, b?.AngleThreshold);
      if (result is Result.Modified or Result.Added) {ret["AngleThreshold"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AngleThreshold"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PlacementRadius, b?.PlacementRadius);
      if (result is Result.Modified or Result.Added) {ret["PlacementRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PlacementRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoundLevel, b?.SoundLevel);
      if (result is Result.Modified or Result.Added) {ret["SoundLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoundLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Result, b?.Result);
      if (result is Result.Modified or Result.Added) {ret["Result"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Result"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Decal, b?.Decal);
      if (result is Result.Modified or Result.Added) {ret["Decal"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Decal"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureSet, b?.TextureSet);
      if (result is Result.Modified or Result.Added) {ret["TextureSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SecondaryTextureSet, b?.SecondaryTextureSet);
      if (result is Result.Modified or Result.Added) {ret["SecondaryTextureSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SecondaryTextureSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound1, b?.Sound1);
      if (result is Result.Modified or Result.Added) {ret["Sound1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound2, b?.Sound2);
      if (result is Result.Modified or Result.Added) {ret["Sound2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Hazard, b?.Hazard);
      if (result is Result.Modified or Result.Added) {ret["Hazard"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Hazard"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImpactDataSetGetter? a, IImpactDataSetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Impacts, b?.Impacts);
      if (result is Result.Modified or Result.Added) {ret["Impacts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Impacts"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIngestibleGetter? a, IIngestibleGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentType, b?.EquipmentType);
      if (result is Result.Modified or Result.Added) {ret["EquipmentType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Addiction, b?.Addiction);
      if (result is Result.Modified or Result.Added) {ret["Addiction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Addiction"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AddictionChance, b?.AddictionChance);
      if (result is Result.Modified or Result.Added) {ret["AddictionChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AddictionChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ConsumeSound, b?.ConsumeSound);
      if (result is Result.Modified or Result.Added) {ret["ConsumeSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ConsumeSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effects, b?.Effects);
      if (result is Result.Modified or Result.Added) {ret["Effects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ENITDataTypeState, b?.ENITDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["ENITDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ENITDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIngredientGetter? a, IIngredientGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipType, b?.EquipType);
      if (result is Result.Modified or Result.Added) {ret["EquipType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IngredientValue, b?.IngredientValue);
      if (result is Result.Modified or Result.Added) {ret["IngredientValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IngredientValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effects, b?.Effects);
      if (result is Result.Modified or Result.Added) {ret["Effects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ENITDataTypeState, b?.ENITDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["ENITDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ENITDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IKeyGetter? a, IKeyGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IKeywordGetter? a, IKeywordGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILandscapeGetter? a, ILandscapeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.DATA, b?.DATA);
      if (result is Result.Modified or Result.Added) {ret["DATA"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATA"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VertexNormals, b?.VertexNormals);
      if (result is Result.Modified or Result.Added) {ret["VertexNormals"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VertexNormals"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VertexHeightMap, b?.VertexHeightMap);
      if (result is Result.Modified or Result.Added) {ret["VertexHeightMap"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VertexHeightMap"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VertexColors, b?.VertexColors);
      if (result is Result.Modified or Result.Added) {ret["VertexColors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VertexColors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Layers, b?.Layers);
      if (result is Result.Modified or Result.Added) {ret["Layers"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Layers"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Textures, b?.Textures);
      if (result is Result.Modified or Result.Added) {ret["Textures"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Textures"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILandscapeTextureGetter? a, ILandscapeTextureGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.TextureSet, b?.TextureSet);
      if (result is Result.Modified or Result.Added) {ret["TextureSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaterialType, b?.MaterialType);
      if (result is Result.Modified or Result.Added) {ret["MaterialType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaterialType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HavokFriction, b?.HavokFriction);
      if (result is Result.Modified or Result.Added) {ret["HavokFriction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HavokFriction"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HavokRestitution, b?.HavokRestitution);
      if (result is Result.Modified or Result.Added) {ret["HavokRestitution"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HavokRestitution"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureSpecularExponent, b?.TextureSpecularExponent);
      if (result is Result.Modified or Result.Added) {ret["TextureSpecularExponent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureSpecularExponent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Grasses, b?.Grasses);
      if (result is Result.Modified or Result.Added) {ret["Grasses"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grasses"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HNAMDataTypeState, b?.HNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["HNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILensFlareGetter? a, ILensFlareGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledItemGetter? a, ILeveledItemGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChanceNone, b?.ChanceNone);
      if (result is Result.Modified or Result.Added) {ret["ChanceNone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChanceNone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Global, b?.Global);
      if (result is Result.Modified or Result.Added) {ret["Global"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Global"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Entries, b?.Entries);
      if (result is Result.Modified or Result.Added) {ret["Entries"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Entries"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledNpcGetter? a, ILeveledNpcGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChanceNone, b?.ChanceNone);
      if (result is Result.Modified or Result.Added) {ret["ChanceNone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChanceNone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Global, b?.Global);
      if (result is Result.Modified or Result.Added) {ret["Global"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Global"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Entries, b?.Entries);
      if (result is Result.Modified or Result.Added) {ret["Entries"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Entries"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledSpellGetter? a, ILeveledSpellGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChanceNone, b?.ChanceNone);
      if (result is Result.Modified or Result.Added) {ret["ChanceNone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChanceNone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Entries, b?.Entries);
      if (result is Result.Modified or Result.Added) {ret["Entries"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Entries"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILightGetter? a, ILightGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Time, b?.Time);
      if (result is Result.Modified or Result.Added) {ret["Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FalloffExponent, b?.FalloffExponent);
      if (result is Result.Modified or Result.Added) {ret["FalloffExponent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FalloffExponent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FOV, b?.FOV);
      if (result is Result.Modified or Result.Added) {ret["FOV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FOV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NearClip, b?.NearClip);
      if (result is Result.Modified or Result.Added) {ret["NearClip"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NearClip"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlickerPeriod, b?.FlickerPeriod);
      if (result is Result.Modified or Result.Added) {ret["FlickerPeriod"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlickerPeriod"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlickerIntensityAmplitude, b?.FlickerIntensityAmplitude);
      if (result is Result.Modified or Result.Added) {ret["FlickerIntensityAmplitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlickerIntensityAmplitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlickerMovementAmplitude, b?.FlickerMovementAmplitude);
      if (result is Result.Modified or Result.Added) {ret["FlickerMovementAmplitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlickerMovementAmplitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FadeValue, b?.FadeValue);
      if (result is Result.Modified or Result.Added) {ret["FadeValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FadeValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILightingTemplateGetter? a, ILightingTemplateGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientColor, b?.AmbientColor);
      if (result is Result.Modified or Result.Added) {ret["AmbientColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalColor, b?.DirectionalColor);
      if (result is Result.Modified or Result.Added) {ret["DirectionalColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogNearColor, b?.FogNearColor);
      if (result is Result.Modified or Result.Added) {ret["FogNearColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogNearColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogNear, b?.FogNear);
      if (result is Result.Modified or Result.Added) {ret["FogNear"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogNear"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogFar, b?.FogFar);
      if (result is Result.Modified or Result.Added) {ret["FogFar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogFar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalRotationXY, b?.DirectionalRotationXY);
      if (result is Result.Modified or Result.Added) {ret["DirectionalRotationXY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalRotationXY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalRotationZ, b?.DirectionalRotationZ);
      if (result is Result.Modified or Result.Added) {ret["DirectionalRotationZ"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalRotationZ"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalFade, b?.DirectionalFade);
      if (result is Result.Modified or Result.Added) {ret["DirectionalFade"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalFade"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogClipDistance, b?.FogClipDistance);
      if (result is Result.Modified or Result.Added) {ret["FogClipDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogClipDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogPower, b?.FogPower);
      if (result is Result.Modified or Result.Added) {ret["FogPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalXPlus, b?.AmbientDirectionalXPlus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalXPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalXPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalXMinus, b?.AmbientDirectionalXMinus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalXMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalXMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalYPlus, b?.AmbientDirectionalYPlus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalYPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalYPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalYMinus, b?.AmbientDirectionalYMinus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalYMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalYMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalZPlus, b?.AmbientDirectionalZPlus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalZPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalZPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalZMinus, b?.AmbientDirectionalZMinus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalZMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalZMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientSpecular, b?.AmbientSpecular);
      if (result is Result.Modified or Result.Added) {ret["AmbientSpecular"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientSpecular"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientScale, b?.AmbientScale);
      if (result is Result.Modified or Result.Added) {ret["AmbientScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogFarColor, b?.FogFarColor);
      if (result is Result.Modified or Result.Added) {ret["FogFarColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogFarColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogMax, b?.FogMax);
      if (result is Result.Modified or Result.Added) {ret["FogMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightFadeStartDistance, b?.LightFadeStartDistance);
      if (result is Result.Modified or Result.Added) {ret["LightFadeStartDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightFadeStartDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightFadeEndDistance, b?.LightFadeEndDistance);
      if (result is Result.Modified or Result.Added) {ret["LightFadeEndDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightFadeEndDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalAmbientColors, b?.DirectionalAmbientColors);
      if (result is Result.Modified or Result.Added) {ret["DirectionalAmbientColors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalAmbientColors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalXPlus, b?.DirectionalXPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalXPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalXPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalXMinus, b?.DirectionalXMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalXMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalXMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalYPlus, b?.DirectionalYPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalYPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalYPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalYMinus, b?.DirectionalYMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalYMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalYMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalZPlus, b?.DirectionalZPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalZPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalZPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalZMinus, b?.DirectionalZMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalZMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalZMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Specular, b?.Specular);
      if (result is Result.Modified or Result.Added) {ret["Specular"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Specular"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILoadScreenGetter? a, ILoadScreenGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoadingScreenNif, b?.LoadingScreenNif);
      if (result is Result.Modified or Result.Added) {ret["LoadingScreenNif"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoadingScreenNif"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InitialScale, b?.InitialScale);
      if (result is Result.Modified or Result.Added) {ret["InitialScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InitialScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InitialRotation, b?.InitialRotation);
      if (result is Result.Modified or Result.Added) {ret["InitialRotation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InitialRotation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationOffsetConstraints, b?.RotationOffsetConstraints);
      if (result is Result.Modified or Result.Added) {ret["RotationOffsetConstraints"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationOffsetConstraints"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InitialTranslationOffset, b?.InitialTranslationOffset);
      if (result is Result.Modified or Result.Added) {ret["InitialTranslationOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InitialTranslationOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CameraPath, b?.CameraPath);
      if (result is Result.Modified or Result.Added) {ret["CameraPath"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CameraPath"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationGetter? a, ILocationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ActorCellPersistentReferences, b?.ActorCellPersistentReferences);
      if (result is Result.Modified or Result.Added) {ret["ActorCellPersistentReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorCellPersistentReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationCellPersistentReferences, b?.LocationCellPersistentReferences);
      if (result is Result.Modified or Result.Added) {ret["LocationCellPersistentReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationCellPersistentReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReferenceCellPersistentReferences, b?.ReferenceCellPersistentReferences);
      if (result is Result.Modified or Result.Added) {ret["ReferenceCellPersistentReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReferenceCellPersistentReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorCellUniques, b?.ActorCellUniques);
      if (result is Result.Modified or Result.Added) {ret["ActorCellUniques"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorCellUniques"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationCellUniques, b?.LocationCellUniques);
      if (result is Result.Modified or Result.Added) {ret["LocationCellUniques"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationCellUniques"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReferenceCellUnique, b?.ReferenceCellUnique);
      if (result is Result.Modified or Result.Added) {ret["ReferenceCellUnique"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReferenceCellUnique"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorCellStaticReferences, b?.ActorCellStaticReferences);
      if (result is Result.Modified or Result.Added) {ret["ActorCellStaticReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorCellStaticReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationCellStaticReferences, b?.LocationCellStaticReferences);
      if (result is Result.Modified or Result.Added) {ret["LocationCellStaticReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationCellStaticReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReferenceCellStaticReferences, b?.ReferenceCellStaticReferences);
      if (result is Result.Modified or Result.Added) {ret["ReferenceCellStaticReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReferenceCellStaticReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorCellEncounterCell, b?.ActorCellEncounterCell);
      if (result is Result.Modified or Result.Added) {ret["ActorCellEncounterCell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorCellEncounterCell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationCellEncounterCell, b?.LocationCellEncounterCell);
      if (result is Result.Modified or Result.Added) {ret["LocationCellEncounterCell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationCellEncounterCell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReferenceCellEncounterCell, b?.ReferenceCellEncounterCell);
      if (result is Result.Modified or Result.Added) {ret["ReferenceCellEncounterCell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReferenceCellEncounterCell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorCellMarkerReference, b?.ActorCellMarkerReference);
      if (result is Result.Modified or Result.Added) {ret["ActorCellMarkerReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorCellMarkerReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationCellMarkerReference, b?.LocationCellMarkerReference);
      if (result is Result.Modified or Result.Added) {ret["LocationCellMarkerReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationCellMarkerReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorCellEnablePoint, b?.ActorCellEnablePoint);
      if (result is Result.Modified or Result.Added) {ret["ActorCellEnablePoint"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorCellEnablePoint"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationCellEnablePoint, b?.LocationCellEnablePoint);
      if (result is Result.Modified or Result.Added) {ret["LocationCellEnablePoint"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationCellEnablePoint"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParentLocation, b?.ParentLocation);
      if (result is Result.Modified or Result.Added) {ret["ParentLocation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParentLocation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Music, b?.Music);
      if (result is Result.Modified or Result.Added) {ret["Music"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Music"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnreportedCrimeFaction, b?.UnreportedCrimeFaction);
      if (result is Result.Modified or Result.Added) {ret["UnreportedCrimeFaction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnreportedCrimeFaction"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WorldLocationMarkerRef, b?.WorldLocationMarkerRef);
      if (result is Result.Modified or Result.Added) {ret["WorldLocationMarkerRef"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WorldLocationMarkerRef"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WorldLocationRadius, b?.WorldLocationRadius);
      if (result is Result.Modified or Result.Added) {ret["WorldLocationRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WorldLocationRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HorseMarkerRef, b?.HorseMarkerRef);
      if (result is Result.Modified or Result.Added) {ret["HorseMarkerRef"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HorseMarkerRef"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationReferenceTypeGetter? a, ILocationReferenceTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMagicEffectGetter? a, IMagicEffectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MenuDisplayObject, b?.MenuDisplayObject);
      if (result is Result.Modified or Result.Added) {ret["MenuDisplayObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MenuDisplayObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseCost, b?.BaseCost);
      if (result is Result.Modified or Result.Added) {ret["BaseCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MagicSkill, b?.MagicSkill);
      if (result is Result.Modified or Result.Added) {ret["MagicSkill"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MagicSkill"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ResistValue, b?.ResistValue);
      if (result is Result.Modified or Result.Added) {ret["ResistValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ResistValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CounterEffectCount, b?.CounterEffectCount);
      if (result is Result.Modified or Result.Added) {ret["CounterEffectCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CounterEffectCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown1, b?.Unknown1);
      if (result is Result.Modified or Result.Added) {ret["Unknown1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastingLight, b?.CastingLight);
      if (result is Result.Modified or Result.Added) {ret["CastingLight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastingLight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TaperWeight, b?.TaperWeight);
      if (result is Result.Modified or Result.Added) {ret["TaperWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TaperWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HitShader, b?.HitShader);
      if (result is Result.Modified or Result.Added) {ret["HitShader"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HitShader"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantShader, b?.EnchantShader);
      if (result is Result.Modified or Result.Added) {ret["EnchantShader"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantShader"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinimumSkillLevel, b?.MinimumSkillLevel);
      if (result is Result.Modified or Result.Added) {ret["MinimumSkillLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinimumSkillLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpellmakingArea, b?.SpellmakingArea);
      if (result is Result.Modified or Result.Added) {ret["SpellmakingArea"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpellmakingArea"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpellmakingCastingTime, b?.SpellmakingCastingTime);
      if (result is Result.Modified or Result.Added) {ret["SpellmakingCastingTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpellmakingCastingTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TaperCurve, b?.TaperCurve);
      if (result is Result.Modified or Result.Added) {ret["TaperCurve"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TaperCurve"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TaperDuration, b?.TaperDuration);
      if (result is Result.Modified or Result.Added) {ret["TaperDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TaperDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SecondActorValueWeight, b?.SecondActorValueWeight);
      if (result is Result.Modified or Result.Added) {ret["SecondActorValueWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SecondActorValueWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Archetype, b?.Archetype);
      if (result is Result.Modified or Result.Added) {ret["Archetype"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Archetype"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Explosion, b?.Explosion);
      if (result is Result.Modified or Result.Added) {ret["Explosion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Explosion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastType, b?.CastType);
      if (result is Result.Modified or Result.Added) {ret["CastType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TargetType, b?.TargetType);
      if (result is Result.Modified or Result.Added) {ret["TargetType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TargetType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SecondActorValue, b?.SecondActorValue);
      if (result is Result.Modified or Result.Added) {ret["SecondActorValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SecondActorValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastingArt, b?.CastingArt);
      if (result is Result.Modified or Result.Added) {ret["CastingArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastingArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HitEffectArt, b?.HitEffectArt);
      if (result is Result.Modified or Result.Added) {ret["HitEffectArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HitEffectArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactData, b?.ImpactData);
      if (result is Result.Modified or Result.Added) {ret["ImpactData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillUsageMultiplier, b?.SkillUsageMultiplier);
      if (result is Result.Modified or Result.Added) {ret["SkillUsageMultiplier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillUsageMultiplier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DualCastArt, b?.DualCastArt);
      if (result is Result.Modified or Result.Added) {ret["DualCastArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DualCastArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DualCastScale, b?.DualCastScale);
      if (result is Result.Modified or Result.Added) {ret["DualCastScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DualCastScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantArt, b?.EnchantArt);
      if (result is Result.Modified or Result.Added) {ret["EnchantArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipAbility, b?.EquipAbility);
      if (result is Result.Modified or Result.Added) {ret["EquipAbility"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipAbility"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpaceModifier, b?.ImageSpaceModifier);
      if (result is Result.Modified or Result.Added) {ret["ImageSpaceModifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpaceModifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PerkToApply, b?.PerkToApply);
      if (result is Result.Modified or Result.Added) {ret["PerkToApply"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PerkToApply"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastingSoundLevel, b?.CastingSoundLevel);
      if (result is Result.Modified or Result.Added) {ret["CastingSoundLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastingSoundLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptEffectAIScore, b?.ScriptEffectAIScore);
      if (result is Result.Modified or Result.Added) {ret["ScriptEffectAIScore"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptEffectAIScore"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptEffectAIDelayTime, b?.ScriptEffectAIDelayTime);
      if (result is Result.Modified or Result.Added) {ret["ScriptEffectAIDelayTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptEffectAIDelayTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CounterEffects, b?.CounterEffects);
      if (result is Result.Modified or Result.Added) {ret["CounterEffects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CounterEffects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sounds, b?.Sounds);
      if (result is Result.Modified or Result.Added) {ret["Sounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMaterialObjectGetter? a, IMaterialObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMs, b?.DNAMs);
      if (result is Result.Modified or Result.Added) {ret["DNAMs"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMs"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FalloffScale, b?.FalloffScale);
      if (result is Result.Modified or Result.Added) {ret["FalloffScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FalloffScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FalloffBias, b?.FalloffBias);
      if (result is Result.Modified or Result.Added) {ret["FalloffBias"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FalloffBias"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseUvScale, b?.NoiseUvScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseUvScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseUvScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaterialUvScale, b?.MaterialUvScale);
      if (result is Result.Modified or Result.Added) {ret["MaterialUvScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaterialUvScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ProjectionVector, b?.ProjectionVector);
      if (result is Result.Modified or Result.Added) {ret["ProjectionVector"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ProjectionVector"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NormalDampener, b?.NormalDampener);
      if (result is Result.Modified or Result.Added) {ret["NormalDampener"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NormalDampener"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SinglePassColor, b?.SinglePassColor);
      if (result is Result.Modified or Result.Added) {ret["SinglePassColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SinglePassColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HasSnow, b?.HasSnow);
      if (result is Result.Modified or Result.Added) {ret["HasSnow"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HasSnow"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMaterialTypeGetter? a, IMaterialTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HavokDisplayColor, b?.HavokDisplayColor);
      if (result is Result.Modified or Result.Added) {ret["HavokDisplayColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HavokDisplayColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Buoyancy, b?.Buoyancy);
      if (result is Result.Modified or Result.Added) {ret["Buoyancy"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Buoyancy"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HavokImpactDataSet, b?.HavokImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["HavokImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HavokImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMessageGetter? a, IMessageGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.INAM, b?.INAM);
      if (result is Result.Modified or Result.Added) {ret["INAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["INAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplayTime, b?.DisplayTime);
      if (result is Result.Modified or Result.Added) {ret["DisplayTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplayTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MenuButtons, b?.MenuButtons);
      if (result is Result.Modified or Result.Added) {ret["MenuButtons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MenuButtons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMiscItemGetter? a, IMiscItemGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMoveableStaticGetter? a, IMoveableStaticGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingSound, b?.LoopingSound);
      if (result is Result.Modified or Result.Added) {ret["LoopingSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMovementTypeGetter? a, IMovementTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LeftWalk, b?.LeftWalk);
      if (result is Result.Modified or Result.Added) {ret["LeftWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeftWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LeftRun, b?.LeftRun);
      if (result is Result.Modified or Result.Added) {ret["LeftRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeftRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RightWalk, b?.RightWalk);
      if (result is Result.Modified or Result.Added) {ret["RightWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RightWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RightRun, b?.RightRun);
      if (result is Result.Modified or Result.Added) {ret["RightRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RightRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ForwardWalk, b?.ForwardWalk);
      if (result is Result.Modified or Result.Added) {ret["ForwardWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ForwardWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ForwardRun, b?.ForwardRun);
      if (result is Result.Modified or Result.Added) {ret["ForwardRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ForwardRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BackWalk, b?.BackWalk);
      if (result is Result.Modified or Result.Added) {ret["BackWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BackWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BackRun, b?.BackRun);
      if (result is Result.Modified or Result.Added) {ret["BackRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BackRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotateInPlaceWalk, b?.RotateInPlaceWalk);
      if (result is Result.Modified or Result.Added) {ret["RotateInPlaceWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotateInPlaceWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotateInPlaceRun, b?.RotateInPlaceRun);
      if (result is Result.Modified or Result.Added) {ret["RotateInPlaceRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotateInPlaceRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotateWhileMovingRun, b?.RotateWhileMovingRun);
      if (result is Result.Modified or Result.Added) {ret["RotateWhileMovingRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotateWhileMovingRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AnimationChangeThresholds, b?.AnimationChangeThresholds);
      if (result is Result.Modified or Result.Added) {ret["AnimationChangeThresholds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AnimationChangeThresholds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SPEDDataTypeState, b?.SPEDDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["SPEDDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SPEDDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMusicTrackGetter? a, IMusicTrackGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Duration, b?.Duration);
      if (result is Result.Modified or Result.Added) {ret["Duration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Duration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FadeOut, b?.FadeOut);
      if (result is Result.Modified or Result.Added) {ret["FadeOut"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FadeOut"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TrackFilename, b?.TrackFilename);
      if (result is Result.Modified or Result.Added) {ret["TrackFilename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TrackFilename"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FinaleFilename, b?.FinaleFilename);
      if (result is Result.Modified or Result.Added) {ret["FinaleFilename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FinaleFilename"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopData, b?.LoopData);
      if (result is Result.Modified or Result.Added) {ret["LoopData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CuePoints, b?.CuePoints);
      if (result is Result.Modified or Result.Added) {ret["CuePoints"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CuePoints"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Tracks, b?.Tracks);
      if (result is Result.Modified or Result.Added) {ret["Tracks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Tracks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMusicTypeGetter? a, IMusicTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FadeDuration, b?.FadeDuration);
      if (result is Result.Modified or Result.Added) {ret["FadeDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FadeDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Tracks, b?.Tracks);
      if (result is Result.Modified or Result.Added) {ret["Tracks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Tracks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceNavigationMeshGetter? a, IWorldspaceNavigationMeshGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ONAM, b?.ONAM);
      if (result is Result.Modified or Result.Added) {ret["ONAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ONAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PNAM, b?.PNAM);
      if (result is Result.Modified or Result.Added) {ret["PNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NNAM, b?.NNAM);
      if (result is Result.Modified or Result.Added) {ret["NNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICellNavigationMeshGetter? a, ICellNavigationMeshGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ONAM, b?.ONAM);
      if (result is Result.Modified or Result.Added) {ret["ONAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ONAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PNAM, b?.PNAM);
      if (result is Result.Modified or Result.Added) {ret["PNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NNAM, b?.NNAM);
      if (result is Result.Modified or Result.Added) {ret["NNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INavigationMeshInfoMapGetter? a, INavigationMeshInfoMapGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NavMeshVersion, b?.NavMeshVersion);
      if (result is Result.Modified or Result.Added) {ret["NavMeshVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavMeshVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MapInfos, b?.MapInfos);
      if (result is Result.Modified or Result.Added) {ret["MapInfos"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MapInfos"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreferredPathing, b?.PreferredPathing);
      if (result is Result.Modified or Result.Added) {ret["PreferredPathing"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreferredPathing"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NVSI, b?.NVSI);
      if (result is Result.Modified or Result.Added) {ret["NVSI"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NVSI"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INpcGetter? a, INpcGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Configuration, b?.Configuration);
      if (result is Result.Modified or Result.Added) {ret["Configuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Configuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Factions, b?.Factions);
      if (result is Result.Modified or Result.Added) {ret["Factions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Factions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DeathItem, b?.DeathItem);
      if (result is Result.Modified or Result.Added) {ret["DeathItem"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DeathItem"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Voice, b?.Voice);
      if (result is Result.Modified or Result.Added) {ret["Voice"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Voice"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Template, b?.Template);
      if (result is Result.Modified or Result.Added) {ret["Template"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Template"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Race, b?.Race);
      if (result is Result.Modified or Result.Added) {ret["Race"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Race"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorEffect, b?.ActorEffect);
      if (result is Result.Modified or Result.Added) {ret["ActorEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WornArmor, b?.WornArmor);
      if (result is Result.Modified or Result.Added) {ret["WornArmor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WornArmor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FarAwayModel, b?.FarAwayModel);
      if (result is Result.Modified or Result.Added) {ret["FarAwayModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FarAwayModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackRace, b?.AttackRace);
      if (result is Result.Modified or Result.Added) {ret["AttackRace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackRace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Attacks, b?.Attacks);
      if (result is Result.Modified or Result.Added) {ret["Attacks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Attacks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpectatorOverridePackageList, b?.SpectatorOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["SpectatorOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpectatorOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObserveDeadBodyOverridePackageList, b?.ObserveDeadBodyOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["ObserveDeadBodyOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObserveDeadBodyOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GuardWarnOverridePackageList, b?.GuardWarnOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["GuardWarnOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GuardWarnOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CombatOverridePackageList, b?.CombatOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["CombatOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CombatOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Perks, b?.Perks);
      if (result is Result.Modified or Result.Added) {ret["Perks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Perks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AIData, b?.AIData);
      if (result is Result.Modified or Result.Added) {ret["AIData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AIData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Packages, b?.Packages);
      if (result is Result.Modified or Result.Added) {ret["Packages"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Packages"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Class, b?.Class);
      if (result is Result.Modified or Result.Added) {ret["Class"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Class"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ShortName, b?.ShortName);
      if (result is Result.Modified or Result.Added) {ret["ShortName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ShortName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PlayerSkills, b?.PlayerSkills);
      if (result is Result.Modified or Result.Added) {ret["PlayerSkills"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PlayerSkills"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadParts, b?.HeadParts);
      if (result is Result.Modified or Result.Added) {ret["HeadParts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadParts"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HairColor, b?.HairColor);
      if (result is Result.Modified or Result.Added) {ret["HairColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HairColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CombatStyle, b?.CombatStyle);
      if (result is Result.Modified or Result.Added) {ret["CombatStyle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CombatStyle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GiftFilter, b?.GiftFilter);
      if (result is Result.Modified or Result.Added) {ret["GiftFilter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GiftFilter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NAM5, b?.NAM5);
      if (result is Result.Modified or Result.Added) {ret["NAM5"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NAM5"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Height, b?.Height);
      if (result is Result.Modified or Result.Added) {ret["Height"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Height"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoundLevel, b?.SoundLevel);
      if (result is Result.Modified or Result.Added) {ret["SoundLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoundLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultOutfit, b?.DefaultOutfit);
      if (result is Result.Modified or Result.Added) {ret["DefaultOutfit"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultOutfit"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SleepingOutfit, b?.SleepingOutfit);
      if (result is Result.Modified or Result.Added) {ret["SleepingOutfit"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SleepingOutfit"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultPackageList, b?.DefaultPackageList);
      if (result is Result.Modified or Result.Added) {ret["DefaultPackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultPackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CrimeFaction, b?.CrimeFaction);
      if (result is Result.Modified or Result.Added) {ret["CrimeFaction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CrimeFaction"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTexture, b?.HeadTexture);
      if (result is Result.Modified or Result.Added) {ret["HeadTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureLighting, b?.TextureLighting);
      if (result is Result.Modified or Result.Added) {ret["TextureLighting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureLighting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FaceMorph, b?.FaceMorph);
      if (result is Result.Modified or Result.Added) {ret["FaceMorph"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FaceMorph"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FaceParts, b?.FaceParts);
      if (result is Result.Modified or Result.Added) {ret["FaceParts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FaceParts"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TintLayers, b?.TintLayers);
      if (result is Result.Modified or Result.Added) {ret["TintLayers"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TintLayers"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IObjectEffectGetter? a, IObjectEffectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantmentCost, b?.EnchantmentCost);
      if (result is Result.Modified or Result.Added) {ret["EnchantmentCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantmentCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastType, b?.CastType);
      if (result is Result.Modified or Result.Added) {ret["CastType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantmentAmount, b?.EnchantmentAmount);
      if (result is Result.Modified or Result.Added) {ret["EnchantmentAmount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantmentAmount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TargetType, b?.TargetType);
      if (result is Result.Modified or Result.Added) {ret["TargetType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TargetType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantType, b?.EnchantType);
      if (result is Result.Modified or Result.Added) {ret["EnchantType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChargeTime, b?.ChargeTime);
      if (result is Result.Modified or Result.Added) {ret["ChargeTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChargeTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseEnchantment, b?.BaseEnchantment);
      if (result is Result.Modified or Result.Added) {ret["BaseEnchantment"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseEnchantment"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WornRestrictions, b?.WornRestrictions);
      if (result is Result.Modified or Result.Added) {ret["WornRestrictions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WornRestrictions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effects, b?.Effects);
      if (result is Result.Modified or Result.Added) {ret["Effects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ENITDataTypeState, b?.ENITDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["ENITDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ENITDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IOutfitGetter? a, IOutfitGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageGetter? a, IPackageGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InterruptOverride, b?.InterruptOverride);
      if (result is Result.Modified or Result.Added) {ret["InterruptOverride"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InterruptOverride"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreferredSpeed, b?.PreferredSpeed);
      if (result is Result.Modified or Result.Added) {ret["PreferredSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreferredSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InteruptFlags, b?.InteruptFlags);
      if (result is Result.Modified or Result.Added) {ret["InteruptFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InteruptFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScheduleMonth, b?.ScheduleMonth);
      if (result is Result.Modified or Result.Added) {ret["ScheduleMonth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScheduleMonth"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScheduleDayOfWeek, b?.ScheduleDayOfWeek);
      if (result is Result.Modified or Result.Added) {ret["ScheduleDayOfWeek"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScheduleDayOfWeek"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScheduleDate, b?.ScheduleDate);
      if (result is Result.Modified or Result.Added) {ret["ScheduleDate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScheduleDate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScheduleHour, b?.ScheduleHour);
      if (result is Result.Modified or Result.Added) {ret["ScheduleHour"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScheduleHour"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScheduleMinute, b?.ScheduleMinute);
      if (result is Result.Modified or Result.Added) {ret["ScheduleMinute"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScheduleMinute"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScheduleDurationInMinutes, b?.ScheduleDurationInMinutes);
      if (result is Result.Modified or Result.Added) {ret["ScheduleDurationInMinutes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScheduleDurationInMinutes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4, b?.Unknown4);
      if (result is Result.Modified or Result.Added) {ret["Unknown4"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IdleAnimations, b?.IdleAnimations);
      if (result is Result.Modified or Result.Added) {ret["IdleAnimations"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IdleAnimations"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CombatStyle, b?.CombatStyle);
      if (result is Result.Modified or Result.Added) {ret["CombatStyle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CombatStyle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OwnerQuest, b?.OwnerQuest);
      if (result is Result.Modified or Result.Added) {ret["OwnerQuest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OwnerQuest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PackageTemplate, b?.PackageTemplate);
      if (result is Result.Modified or Result.Added) {ret["PackageTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PackageTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DataInputVersion, b?.DataInputVersion);
      if (result is Result.Modified or Result.Added) {ret["DataInputVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DataInputVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XnamMarker, b?.XnamMarker);
      if (result is Result.Modified or Result.Added) {ret["XnamMarker"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XnamMarker"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ProcedureTree, b?.ProcedureTree);
      if (result is Result.Modified or Result.Added) {ret["ProcedureTree"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ProcedureTree"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnBegin, b?.OnBegin);
      if (result is Result.Modified or Result.Added) {ret["OnBegin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnBegin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnEnd, b?.OnEnd);
      if (result is Result.Modified or Result.Added) {ret["OnEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnEnd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnChange, b?.OnChange);
      if (result is Result.Modified or Result.Added) {ret["OnChange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnChange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PKDTDataTypeState, b?.PKDTDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["PKDTDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PKDTDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PSDTDataTypeState, b?.PSDTDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["PSDTDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PSDTDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedNpcGetter? a, IPlacedNpcGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Base, b?.Base);
      if (result is Result.Modified or Result.Added) {ret["Base"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Base"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RagdollData, b?.RagdollData);
      if (result is Result.Modified or Result.Added) {ret["RagdollData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RagdollData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RagdollBipedData, b?.RagdollBipedData);
      if (result is Result.Modified or Result.Added) {ret["RagdollBipedData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RagdollBipedData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Patrol, b?.Patrol);
      if (result is Result.Modified or Result.Added) {ret["Patrol"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Patrol"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LevelModifier, b?.LevelModifier);
      if (result is Result.Modified or Result.Added) {ret["LevelModifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LevelModifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MerchantContainer, b?.MerchantContainer);
      if (result is Result.Modified or Result.Added) {ret["MerchantContainer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MerchantContainer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Count, b?.Count);
      if (result is Result.Modified or Result.Added) {ret["Count"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Count"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Health, b?.Health);
      if (result is Result.Modified or Result.Added) {ret["Health"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Health"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferenceColor, b?.LinkedReferenceColor);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferenceColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferenceColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PersistentLocation, b?.PersistentLocation);
      if (result is Result.Modified or Result.Added) {ret["PersistentLocation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PersistentLocation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Horse, b?.Horse);
      if (result is Result.Modified or Result.Added) {ret["Horse"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Horse"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiboundReference, b?.MultiboundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiboundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiboundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox2, b?.IgnoredBySandbox2);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedObjectGetter? a, IPlacedObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Base, b?.Base);
      if (result is Result.Modified or Result.Added) {ret["Base"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Base"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BoundHalfExtents, b?.BoundHalfExtents);
      if (result is Result.Modified or Result.Added) {ret["BoundHalfExtents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BoundHalfExtents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Primitive, b?.Primitive);
      if (result is Result.Modified or Result.Added) {ret["Primitive"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Primitive"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XORD, b?.XORD);
      if (result is Result.Modified or Result.Added) {ret["XORD"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XORD"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OcclusionPlane, b?.OcclusionPlane);
      if (result is Result.Modified or Result.Added) {ret["OcclusionPlane"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OcclusionPlane"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Portals, b?.Portals);
      if (result is Result.Modified or Result.Added) {ret["Portals"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Portals"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RoomPortal, b?.RoomPortal);
      if (result is Result.Modified or Result.Added) {ret["RoomPortal"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RoomPortal"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightingTemplate, b?.LightingTemplate);
      if (result is Result.Modified or Result.Added) {ret["LightingTemplate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightingTemplate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpace, b?.ImageSpace);
      if (result is Result.Modified or Result.Added) {ret["ImageSpace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedRooms, b?.LinkedRooms);
      if (result is Result.Modified or Result.Added) {ret["LinkedRooms"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedRooms"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundPrimitive, b?.MultiBoundPrimitive);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundPrimitive"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundPrimitive"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RagdollData, b?.RagdollData);
      if (result is Result.Modified or Result.Added) {ret["RagdollData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RagdollData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RagdollBipedData, b?.RagdollBipedData);
      if (result is Result.Modified or Result.Added) {ret["RagdollBipedData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RagdollBipedData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LitWater, b?.LitWater);
      if (result is Result.Modified or Result.Added) {ret["LitWater"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LitWater"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightData, b?.LightData);
      if (result is Result.Modified or Result.Added) {ret["LightData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Alpha, b?.Alpha);
      if (result is Result.Modified or Result.Added) {ret["Alpha"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Alpha"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TeleportDestination, b?.TeleportDestination);
      if (result is Result.Modified or Result.Added) {ret["TeleportDestination"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TeleportDestination"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TeleportMessageBox, b?.TeleportMessageBox);
      if (result is Result.Modified or Result.Added) {ret["TeleportMessageBox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TeleportMessageBox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiboundReference, b?.MultiboundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiboundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiboundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XWCN, b?.XWCN);
      if (result is Result.Modified or Result.Added) {ret["XWCN"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XWCN"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XWCS, b?.XWCS);
      if (result is Result.Modified or Result.Added) {ret["XWCS"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XWCS"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterVelocity, b?.WaterVelocity);
      if (result is Result.Modified or Result.Added) {ret["WaterVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XCVL, b?.XCVL);
      if (result is Result.Modified or Result.Added) {ret["XCVL"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XCVL"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XCZR, b?.XCZR);
      if (result is Result.Modified or Result.Added) {ret["XCZR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XCZR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XCZA, b?.XCZA);
      if (result is Result.Modified or Result.Added) {ret["XCZA"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XCZA"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XCZC, b?.XCZC);
      if (result is Result.Modified or Result.Added) {ret["XCZC"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XCZC"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpawnContainer, b?.SpawnContainer);
      if (result is Result.Modified or Result.Added) {ret["SpawnContainer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpawnContainer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LeveledItemBaseObject, b?.LeveledItemBaseObject);
      if (result is Result.Modified or Result.Added) {ret["LeveledItemBaseObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeveledItemBaseObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LevelModifier, b?.LevelModifier);
      if (result is Result.Modified or Result.Added) {ret["LevelModifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LevelModifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PersistentLocation, b?.PersistentLocation);
      if (result is Result.Modified or Result.Added) {ret["PersistentLocation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PersistentLocation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CollisionLayer, b?.CollisionLayer);
      if (result is Result.Modified or Result.Added) {ret["CollisionLayer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CollisionLayer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Lock, b?.Lock);
      if (result is Result.Modified or Result.Added) {ret["Lock"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Lock"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavigationDoorLink, b?.NavigationDoorLink);
      if (result is Result.Modified or Result.Added) {ret["NavigationDoorLink"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavigationDoorLink"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ItemCount, b?.ItemCount);
      if (result is Result.Modified or Result.Added) {ret["ItemCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ItemCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Charge, b?.Charge);
      if (result is Result.Modified or Result.Added) {ret["Charge"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Charge"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Patrol, b?.Patrol);
      if (result is Result.Modified or Result.Added) {ret["Patrol"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Patrol"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Action, b?.Action);
      if (result is Result.Modified or Result.Added) {ret["Action"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Action"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OpenByDefault, b?.OpenByDefault);
      if (result is Result.Modified or Result.Added) {ret["OpenByDefault"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OpenByDefault"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MapMarker, b?.MapMarker);
      if (result is Result.Modified or Result.Added) {ret["MapMarker"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MapMarker"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttachRef, b?.AttachRef);
      if (result is Result.Modified or Result.Added) {ret["AttachRef"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttachRef"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedArrowGetter? a, IPlacedArrowGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedBeamGetter? a, IPlacedBeamGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedFlameGetter? a, IPlacedFlameGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedConeGetter? a, IPlacedConeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedBarrierGetter? a, IPlacedBarrierGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedTrapGetter? a, IPlacedTrapGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedHazardGetter? a, IPlacedHazardGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Hazard, b?.Hazard);
      if (result is Result.Modified or Result.Added) {ret["Hazard"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Hazard"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedMissileGetter? a, IPlacedMissileGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Projectile, b?.Projectile);
      if (result is Result.Modified or Result.Added) {ret["Projectile"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Projectile"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ownership, b?.Ownership);
      if (result is Result.Modified or Result.Added) {ret["Ownership"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ownership"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadTrackingWeight, b?.HeadTrackingWeight);
      if (result is Result.Modified or Result.Added) {ret["HeadTrackingWeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadTrackingWeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FavorCost, b?.FavorCost);
      if (result is Result.Modified or Result.Added) {ret["FavorCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FavorCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedReferences, b?.LinkedReferences);
      if (result is Result.Modified or Result.Added) {ret["LinkedReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActivateParents, b?.ActivateParents);
      if (result is Result.Modified or Result.Added) {ret["ActivateParents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActivateParents"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emittance, b?.Emittance);
      if (result is Result.Modified or Result.Added) {ret["Emittance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emittance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MultiBoundReference, b?.MultiBoundReference);
      if (result is Result.Modified or Result.Added) {ret["MultiBoundReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MultiBoundReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IgnoredBySandbox, b?.IgnoredBySandbox);
      if (result is Result.Modified or Result.Added) {ret["IgnoredBySandbox"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IgnoredBySandbox"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefTypes, b?.LocationRefTypes);
      if (result is Result.Modified or Result.Added) {ret["LocationRefTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefTypes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LocationReference, b?.LocationReference);
      if (result is Result.Modified or Result.Added) {ret["LocationReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodData, b?.DistantLodData);
      if (result is Result.Modified or Result.Added) {ret["DistantLodData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IProjectileGetter? a, IProjectileGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Gravity, b?.Gravity);
      if (result is Result.Modified or Result.Added) {ret["Gravity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Gravity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Speed, b?.Speed);
      if (result is Result.Modified or Result.Added) {ret["Speed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Speed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Range, b?.Range);
      if (result is Result.Modified or Result.Added) {ret["Range"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Range"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Light, b?.Light);
      if (result is Result.Modified or Result.Added) {ret["Light"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Light"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MuzzleFlash, b?.MuzzleFlash);
      if (result is Result.Modified or Result.Added) {ret["MuzzleFlash"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MuzzleFlash"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TracerChance, b?.TracerChance);
      if (result is Result.Modified or Result.Added) {ret["TracerChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TracerChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplosionAltTriggerProximity, b?.ExplosionAltTriggerProximity);
      if (result is Result.Modified or Result.Added) {ret["ExplosionAltTriggerProximity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplosionAltTriggerProximity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplosionAltTriggerTimer, b?.ExplosionAltTriggerTimer);
      if (result is Result.Modified or Result.Added) {ret["ExplosionAltTriggerTimer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplosionAltTriggerTimer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Explosion, b?.Explosion);
      if (result is Result.Modified or Result.Added) {ret["Explosion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Explosion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MuzzleFlashDuration, b?.MuzzleFlashDuration);
      if (result is Result.Modified or Result.Added) {ret["MuzzleFlashDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MuzzleFlashDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FadeDuration, b?.FadeDuration);
      if (result is Result.Modified or Result.Added) {ret["FadeDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FadeDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactForce, b?.ImpactForce);
      if (result is Result.Modified or Result.Added) {ret["ImpactForce"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactForce"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CountdownSound, b?.CountdownSound);
      if (result is Result.Modified or Result.Added) {ret["CountdownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CountdownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisaleSound, b?.DisaleSound);
      if (result is Result.Modified or Result.Added) {ret["DisaleSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisaleSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultWeaponSource, b?.DefaultWeaponSource);
      if (result is Result.Modified or Result.Added) {ret["DefaultWeaponSource"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultWeaponSource"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ConeSpread, b?.ConeSpread);
      if (result is Result.Modified or Result.Added) {ret["ConeSpread"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ConeSpread"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CollisionRadius, b?.CollisionRadius);
      if (result is Result.Modified or Result.Added) {ret["CollisionRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CollisionRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Lifetime, b?.Lifetime);
      if (result is Result.Modified or Result.Added) {ret["Lifetime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Lifetime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RelaunchInterval, b?.RelaunchInterval);
      if (result is Result.Modified or Result.Added) {ret["RelaunchInterval"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RelaunchInterval"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DecalData, b?.DecalData);
      if (result is Result.Modified or Result.Added) {ret["DecalData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DecalData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CollisionLayer, b?.CollisionLayer);
      if (result is Result.Modified or Result.Added) {ret["CollisionLayer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CollisionLayer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MuzzleFlashModel, b?.MuzzleFlashModel);
      if (result is Result.Modified or Result.Added) {ret["MuzzleFlashModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MuzzleFlashModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureFilesHashes, b?.TextureFilesHashes);
      if (result is Result.Modified or Result.Added) {ret["TextureFilesHashes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureFilesHashes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoundLevel, b?.SoundLevel);
      if (result is Result.Modified or Result.Added) {ret["SoundLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoundLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestGetter? a, IQuestGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.QuestFormVersion, b?.QuestFormVersion);
      if (result is Result.Modified or Result.Added) {ret["QuestFormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["QuestFormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Event, b?.Event);
      if (result is Result.Modified or Result.Added) {ret["Event"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Event"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextDisplayGlobals, b?.TextDisplayGlobals);
      if (result is Result.Modified or Result.Added) {ret["TextDisplayGlobals"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextDisplayGlobals"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectWindowFilter, b?.ObjectWindowFilter);
      if (result is Result.Modified or Result.Added) {ret["ObjectWindowFilter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectWindowFilter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DialogConditions, b?.DialogConditions);
      if (result is Result.Modified or Result.Added) {ret["DialogConditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DialogConditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnusedConditions, b?.UnusedConditions);
      if (result is Result.Modified or Result.Added) {ret["UnusedConditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnusedConditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Stages, b?.Stages);
      if (result is Result.Modified or Result.Added) {ret["Stages"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Stages"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Objectives, b?.Objectives);
      if (result is Result.Modified or Result.Added) {ret["Objectives"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Objectives"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Aliases, b?.Aliases);
      if (result is Result.Modified or Result.Added) {ret["Aliases"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Aliases"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMDataTypeState, b?.DNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionGetter? a, IRegionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.MapColor, b?.MapColor);
      if (result is Result.Modified or Result.Added) {ret["MapColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MapColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Worldspace, b?.Worldspace);
      if (result is Result.Modified or Result.Added) {ret["Worldspace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Worldspace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RegionAreas, b?.RegionAreas);
      if (result is Result.Modified or Result.Added) {ret["RegionAreas"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RegionAreas"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Objects, b?.Objects);
      if (result is Result.Modified or Result.Added) {ret["Objects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Objects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weather, b?.Weather);
      if (result is Result.Modified or Result.Added) {ret["Weather"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weather"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Map, b?.Map);
      if (result is Result.Modified or Result.Added) {ret["Map"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Map"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Land, b?.Land);
      if (result is Result.Modified or Result.Added) {ret["Land"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Land"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Grasses, b?.Grasses);
      if (result is Result.Modified or Result.Added) {ret["Grasses"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grasses"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sounds, b?.Sounds);
      if (result is Result.Modified or Result.Added) {ret["Sounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IReverbParametersGetter? a, IReverbParametersGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.DecayMilliseconds, b?.DecayMilliseconds);
      if (result is Result.Modified or Result.Added) {ret["DecayMilliseconds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DecayMilliseconds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HfReferenceHertz, b?.HfReferenceHertz);
      if (result is Result.Modified or Result.Added) {ret["HfReferenceHertz"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HfReferenceHertz"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RoomFilter, b?.RoomFilter);
      if (result is Result.Modified or Result.Added) {ret["RoomFilter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RoomFilter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RoomHfFilter, b?.RoomHfFilter);
      if (result is Result.Modified or Result.Added) {ret["RoomHfFilter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RoomHfFilter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reflections, b?.Reflections);
      if (result is Result.Modified or Result.Added) {ret["Reflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReverbAmp, b?.ReverbAmp);
      if (result is Result.Modified or Result.Added) {ret["ReverbAmp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReverbAmp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DecayHfRatio, b?.DecayHfRatio);
      if (result is Result.Modified or Result.Added) {ret["DecayHfRatio"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DecayHfRatio"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReflectDelayMS, b?.ReflectDelayMS);
      if (result is Result.Modified or Result.Added) {ret["ReflectDelayMS"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReflectDelayMS"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReverbDelayMS, b?.ReverbDelayMS);
      if (result is Result.Modified or Result.Added) {ret["ReverbDelayMS"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReverbDelayMS"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DiffusionPercent, b?.DiffusionPercent);
      if (result is Result.Modified or Result.Added) {ret["DiffusionPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DiffusionPercent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DensityPercent, b?.DensityPercent);
      if (result is Result.Modified or Result.Added) {ret["DensityPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DensityPercent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScrollGetter? a, IScrollGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MenuDisplayObject, b?.MenuDisplayObject);
      if (result is Result.Modified or Result.Added) {ret["MenuDisplayObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MenuDisplayObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentType, b?.EquipmentType);
      if (result is Result.Modified or Result.Added) {ret["EquipmentType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseCost, b?.BaseCost);
      if (result is Result.Modified or Result.Added) {ret["BaseCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChargeTime, b?.ChargeTime);
      if (result is Result.Modified or Result.Added) {ret["ChargeTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChargeTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastType, b?.CastType);
      if (result is Result.Modified or Result.Added) {ret["CastType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TargetType, b?.TargetType);
      if (result is Result.Modified or Result.Added) {ret["TargetType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TargetType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastDuration, b?.CastDuration);
      if (result is Result.Modified or Result.Added) {ret["CastDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Range, b?.Range);
      if (result is Result.Modified or Result.Added) {ret["Range"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Range"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HalfCostPerk, b?.HalfCostPerk);
      if (result is Result.Modified or Result.Added) {ret["HalfCostPerk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HalfCostPerk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effects, b?.Effects);
      if (result is Result.Modified or Result.Added) {ret["Effects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SPITDataTypeState, b?.SPITDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["SPITDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SPITDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IShaderParticleGeometryGetter? a, IShaderParticleGeometryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.GravityVelocity, b?.GravityVelocity);
      if (result is Result.Modified or Result.Added) {ret["GravityVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GravityVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationVelocity, b?.RotationVelocity);
      if (result is Result.Modified or Result.Added) {ret["RotationVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleSizeX, b?.ParticleSizeX);
      if (result is Result.Modified or Result.Added) {ret["ParticleSizeX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleSizeX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleSizeY, b?.ParticleSizeY);
      if (result is Result.Modified or Result.Added) {ret["ParticleSizeY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleSizeY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CenterOffsetMin, b?.CenterOffsetMin);
      if (result is Result.Modified or Result.Added) {ret["CenterOffsetMin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CenterOffsetMin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CenterOffsetMax, b?.CenterOffsetMax);
      if (result is Result.Modified or Result.Added) {ret["CenterOffsetMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CenterOffsetMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InitialRotationRange, b?.InitialRotationRange);
      if (result is Result.Modified or Result.Added) {ret["InitialRotationRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InitialRotationRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NumSubtexturesX, b?.NumSubtexturesX);
      if (result is Result.Modified or Result.Added) {ret["NumSubtexturesX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NumSubtexturesX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NumSubtexturesY, b?.NumSubtexturesY);
      if (result is Result.Modified or Result.Added) {ret["NumSubtexturesY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NumSubtexturesY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BoxSize, b?.BoxSize);
      if (result is Result.Modified or Result.Added) {ret["BoxSize"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BoxSize"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleDensity, b?.ParticleDensity);
      if (result is Result.Modified or Result.Added) {ret["ParticleDensity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleDensity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParticleTexture, b?.ParticleTexture);
      if (result is Result.Modified or Result.Added) {ret["ParticleTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParticleTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IShoutGetter? a, IShoutGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MenuDisplayObject, b?.MenuDisplayObject);
      if (result is Result.Modified or Result.Added) {ret["MenuDisplayObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MenuDisplayObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WordsOfPower, b?.WordsOfPower);
      if (result is Result.Modified or Result.Added) {ret["WordsOfPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WordsOfPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoulGemGetter? a, ISoulGemGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ContainedSoul, b?.ContainedSoul);
      if (result is Result.Modified or Result.Added) {ret["ContainedSoul"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ContainedSoul"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaximumCapacity, b?.MaximumCapacity);
      if (result is Result.Modified or Result.Added) {ret["MaximumCapacity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaximumCapacity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedTo, b?.LinkedTo);
      if (result is Result.Modified or Result.Added) {ret["LinkedTo"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedTo"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundDescriptorGetter? a, ISoundDescriptorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.CNAM, b?.CNAM);
      if (result is Result.Modified or Result.Added) {ret["CNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Category, b?.Category);
      if (result is Result.Modified or Result.Added) {ret["Category"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Category"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AlternateSoundFor, b?.AlternateSoundFor);
      if (result is Result.Modified or Result.Added) {ret["AlternateSoundFor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AlternateSoundFor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoundFiles, b?.SoundFiles);
      if (result is Result.Modified or Result.Added) {ret["SoundFiles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoundFiles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OutputModel, b?.OutputModel);
      if (result is Result.Modified or Result.Added) {ret["OutputModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OutputModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.String, b?.String);
      if (result is Result.Modified or Result.Added) {ret["String"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["String"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopAndRumble, b?.LoopAndRumble);
      if (result is Result.Modified or Result.Added) {ret["LoopAndRumble"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopAndRumble"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PercentFrequencyShift, b?.PercentFrequencyShift);
      if (result is Result.Modified or Result.Added) {ret["PercentFrequencyShift"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PercentFrequencyShift"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PercentFrequencyVariance, b?.PercentFrequencyVariance);
      if (result is Result.Modified or Result.Added) {ret["PercentFrequencyVariance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PercentFrequencyVariance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Variance, b?.Variance);
      if (result is Result.Modified or Result.Added) {ret["Variance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Variance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StaticAttenuation, b?.StaticAttenuation);
      if (result is Result.Modified or Result.Added) {ret["StaticAttenuation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StaticAttenuation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BNAMDataTypeState, b?.BNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["BNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundMarkerGetter? a, ISoundMarkerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAM, b?.FNAM);
      if (result is Result.Modified or Result.Added) {ret["FNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SNDD, b?.SNDD);
      if (result is Result.Modified or Result.Added) {ret["SNDD"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SNDD"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoundDescriptor, b?.SoundDescriptor);
      if (result is Result.Modified or Result.Added) {ret["SoundDescriptor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoundDescriptor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundOutputModelGetter? a, ISoundOutputModelGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAM, b?.FNAM);
      if (result is Result.Modified or Result.Added) {ret["FNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CNAM, b?.CNAM);
      if (result is Result.Modified or Result.Added) {ret["CNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SNAM, b?.SNAM);
      if (result is Result.Modified or Result.Added) {ret["SNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OutputChannels, b?.OutputChannels);
      if (result is Result.Modified or Result.Added) {ret["OutputChannels"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OutputChannels"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Attenuation, b?.Attenuation);
      if (result is Result.Modified or Result.Added) {ret["Attenuation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Attenuation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISpellGetter? a, ISpellGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MenuDisplayObject, b?.MenuDisplayObject);
      if (result is Result.Modified or Result.Added) {ret["MenuDisplayObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MenuDisplayObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentType, b?.EquipmentType);
      if (result is Result.Modified or Result.Added) {ret["EquipmentType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseCost, b?.BaseCost);
      if (result is Result.Modified or Result.Added) {ret["BaseCost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseCost"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChargeTime, b?.ChargeTime);
      if (result is Result.Modified or Result.Added) {ret["ChargeTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChargeTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastType, b?.CastType);
      if (result is Result.Modified or Result.Added) {ret["CastType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TargetType, b?.TargetType);
      if (result is Result.Modified or Result.Added) {ret["TargetType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TargetType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CastDuration, b?.CastDuration);
      if (result is Result.Modified or Result.Added) {ret["CastDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CastDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Range, b?.Range);
      if (result is Result.Modified or Result.Added) {ret["Range"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Range"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HalfCostPerk, b?.HalfCostPerk);
      if (result is Result.Modified or Result.Added) {ret["HalfCostPerk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HalfCostPerk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effects, b?.Effects);
      if (result is Result.Modified or Result.Added) {ret["Effects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SPITDataTypeState, b?.SPITDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["SPITDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SPITDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IStaticGetter? a, IStaticGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxAngle, b?.MaxAngle);
      if (result is Result.Modified or Result.Added) {ret["MaxAngle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxAngle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Material, b?.Material);
      if (result is Result.Modified or Result.Added) {ret["Material"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Material"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Lod, b?.Lod);
      if (result is Result.Modified or Result.Added) {ret["Lod"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Lod"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMDataTypeState, b?.DNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IStoryManagerBranchNodeGetter? a, IStoryManagerBranchNodeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XNAM, b?.XNAM);
      if (result is Result.Modified or Result.Added) {ret["XNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreviousSibling, b?.PreviousSibling);
      if (result is Result.Modified or Result.Added) {ret["PreviousSibling"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreviousSibling"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IStoryManagerQuestNodeGetter? a, IStoryManagerQuestNodeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxConcurrentQuests, b?.MaxConcurrentQuests);
      if (result is Result.Modified or Result.Added) {ret["MaxConcurrentQuests"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxConcurrentQuests"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxNumQuestsToRun, b?.MaxNumQuestsToRun);
      if (result is Result.Modified or Result.Added) {ret["MaxNumQuestsToRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxNumQuestsToRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Quests, b?.Quests);
      if (result is Result.Modified or Result.Added) {ret["Quests"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quests"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreviousSibling, b?.PreviousSibling);
      if (result is Result.Modified or Result.Added) {ret["PreviousSibling"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreviousSibling"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IStoryManagerEventNodeGetter? a, IStoryManagerEventNodeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.XNAM, b?.XNAM);
      if (result is Result.Modified or Result.Added) {ret["XNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["XNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreviousSibling, b?.PreviousSibling);
      if (result is Result.Modified or Result.Added) {ret["PreviousSibling"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreviousSibling"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ITalkingActivatorGetter? a, ITalkingActivatorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PNAM, b?.PNAM);
      if (result is Result.Modified or Result.Added) {ret["PNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingSound, b?.LoopingSound);
      if (result is Result.Modified or Result.Added) {ret["LoopingSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAM, b?.FNAM);
      if (result is Result.Modified or Result.Added) {ret["FNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VoiceType, b?.VoiceType);
      if (result is Result.Modified or Result.Added) {ret["VoiceType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VoiceType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ITextureSetGetter? a, ITextureSetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Diffuse, b?.Diffuse);
      if (result is Result.Modified or Result.Added) {ret["Diffuse"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Diffuse"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NormalOrGloss, b?.NormalOrGloss);
      if (result is Result.Modified or Result.Added) {ret["NormalOrGloss"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NormalOrGloss"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnvironmentMaskOrSubsurfaceTint, b?.EnvironmentMaskOrSubsurfaceTint);
      if (result is Result.Modified or Result.Added) {ret["EnvironmentMaskOrSubsurfaceTint"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnvironmentMaskOrSubsurfaceTint"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GlowOrDetailMap, b?.GlowOrDetailMap);
      if (result is Result.Modified or Result.Added) {ret["GlowOrDetailMap"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GlowOrDetailMap"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Height, b?.Height);
      if (result is Result.Modified or Result.Added) {ret["Height"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Height"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Environment, b?.Environment);
      if (result is Result.Modified or Result.Added) {ret["Environment"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Environment"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Multilayer, b?.Multilayer);
      if (result is Result.Modified or Result.Added) {ret["Multilayer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Multilayer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BacklightMaskOrSpecular, b?.BacklightMaskOrSpecular);
      if (result is Result.Modified or Result.Added) {ret["BacklightMaskOrSpecular"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BacklightMaskOrSpecular"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Decal, b?.Decal);
      if (result is Result.Modified or Result.Added) {ret["Decal"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Decal"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ITreeGetter? a, ITreeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ingredient, b?.Ingredient);
      if (result is Result.Modified or Result.Added) {ret["Ingredient"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ingredient"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HarvestSound, b?.HarvestSound);
      if (result is Result.Modified or Result.Added) {ret["HarvestSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HarvestSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Production, b?.Production);
      if (result is Result.Modified or Result.Added) {ret["Production"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Production"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TrunkFlexibility, b?.TrunkFlexibility);
      if (result is Result.Modified or Result.Added) {ret["TrunkFlexibility"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TrunkFlexibility"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BranchFlexibility, b?.BranchFlexibility);
      if (result is Result.Modified or Result.Added) {ret["BranchFlexibility"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BranchFlexibility"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LeafAmplitude, b?.LeafAmplitude);
      if (result is Result.Modified or Result.Added) {ret["LeafAmplitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeafAmplitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LeafFrequency, b?.LeafFrequency);
      if (result is Result.Modified or Result.Added) {ret["LeafFrequency"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeafFrequency"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CNAMDataTypeState, b?.CNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["CNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IVisualEffectGetter? a, IVisualEffectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.EffectArt, b?.EffectArt);
      if (result is Result.Modified or Result.Added) {ret["EffectArt"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EffectArt"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Shader, b?.Shader);
      if (result is Result.Modified or Result.Added) {ret["Shader"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Shader"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IVoiceTypeGetter? a, IVoiceTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IVolumetricLightingGetter? a, IVolumetricLightingGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Intensity, b?.Intensity);
      if (result is Result.Modified or Result.Added) {ret["Intensity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Intensity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CustomColorContribution, b?.CustomColorContribution);
      if (result is Result.Modified or Result.Added) {ret["CustomColorContribution"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CustomColorContribution"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorR, b?.ColorR);
      if (result is Result.Modified or Result.Added) {ret["ColorR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorG, b?.ColorG);
      if (result is Result.Modified or Result.Added) {ret["ColorG"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorG"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ColorB, b?.ColorB);
      if (result is Result.Modified or Result.Added) {ret["ColorB"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ColorB"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DensityContribution, b?.DensityContribution);
      if (result is Result.Modified or Result.Added) {ret["DensityContribution"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DensityContribution"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DensitySize, b?.DensitySize);
      if (result is Result.Modified or Result.Added) {ret["DensitySize"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DensitySize"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DensityWindSpeed, b?.DensityWindSpeed);
      if (result is Result.Modified or Result.Added) {ret["DensityWindSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DensityWindSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DensityFallingSpeed, b?.DensityFallingSpeed);
      if (result is Result.Modified or Result.Added) {ret["DensityFallingSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DensityFallingSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PhaseFunctionContribution, b?.PhaseFunctionContribution);
      if (result is Result.Modified or Result.Added) {ret["PhaseFunctionContribution"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PhaseFunctionContribution"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PhaseFunctionScattering, b?.PhaseFunctionScattering);
      if (result is Result.Modified or Result.Added) {ret["PhaseFunctionScattering"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PhaseFunctionScattering"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SamplingRepartitionRangeFactor, b?.SamplingRepartitionRangeFactor);
      if (result is Result.Modified or Result.Added) {ret["SamplingRepartitionRangeFactor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SamplingRepartitionRangeFactor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWaterGetter? a, IWaterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnusedNoisemaps, b?.UnusedNoisemaps);
      if (result is Result.Modified or Result.Added) {ret["UnusedNoisemaps"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnusedNoisemaps"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Opacity, b?.Opacity);
      if (result is Result.Modified or Result.Added) {ret["Opacity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Opacity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MNAM, b?.MNAM);
      if (result is Result.Modified or Result.Added) {ret["MNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Material, b?.Material);
      if (result is Result.Modified or Result.Added) {ret["Material"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Material"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OpenSound, b?.OpenSound);
      if (result is Result.Modified or Result.Added) {ret["OpenSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OpenSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Spell, b?.Spell);
      if (result is Result.Modified or Result.Added) {ret["Spell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Spell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpace, b?.ImageSpace);
      if (result is Result.Modified or Result.Added) {ret["ImageSpace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DamagePerSecond, b?.DamagePerSecond);
      if (result is Result.Modified or Result.Added) {ret["DamagePerSecond"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DamagePerSecond"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularSunPower, b?.SpecularSunPower);
      if (result is Result.Modified or Result.Added) {ret["SpecularSunPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularSunPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterReflectivity, b?.WaterReflectivity);
      if (result is Result.Modified or Result.Added) {ret["WaterReflectivity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterReflectivity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterFresnel, b?.WaterFresnel);
      if (result is Result.Modified or Result.Added) {ret["WaterFresnel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterFresnel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogAboveWaterDistanceNearPlane, b?.FogAboveWaterDistanceNearPlane);
      if (result is Result.Modified or Result.Added) {ret["FogAboveWaterDistanceNearPlane"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogAboveWaterDistanceNearPlane"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogAboveWaterDistanceFarPlane, b?.FogAboveWaterDistanceFarPlane);
      if (result is Result.Modified or Result.Added) {ret["FogAboveWaterDistanceFarPlane"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogAboveWaterDistanceFarPlane"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ShallowColor, b?.ShallowColor);
      if (result is Result.Modified or Result.Added) {ret["ShallowColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ShallowColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DeepColor, b?.DeepColor);
      if (result is Result.Modified or Result.Added) {ret["DeepColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DeepColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReflectionColor, b?.ReflectionColor);
      if (result is Result.Modified or Result.Added) {ret["ReflectionColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReflectionColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplacementStartingSize, b?.DisplacementStartingSize);
      if (result is Result.Modified or Result.Added) {ret["DisplacementStartingSize"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplacementStartingSize"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplacementFoce, b?.DisplacementFoce);
      if (result is Result.Modified or Result.Added) {ret["DisplacementFoce"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplacementFoce"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplacementVelocity, b?.DisplacementVelocity);
      if (result is Result.Modified or Result.Added) {ret["DisplacementVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplacementVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplacementFalloff, b?.DisplacementFalloff);
      if (result is Result.Modified or Result.Added) {ret["DisplacementFalloff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplacementFalloff"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplacementDampner, b?.DisplacementDampner);
      if (result is Result.Modified or Result.Added) {ret["DisplacementDampner"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplacementDampner"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4, b?.Unknown4);
      if (result is Result.Modified or Result.Added) {ret["Unknown4"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseFalloff, b?.NoiseFalloff);
      if (result is Result.Modified or Result.Added) {ret["NoiseFalloff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseFalloff"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerOneWindDirection, b?.NoiseLayerOneWindDirection);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerOneWindDirection"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerOneWindDirection"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerTwoWindDirection, b?.NoiseLayerTwoWindDirection);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerTwoWindDirection"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerTwoWindDirection"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerThreeWindDirection, b?.NoiseLayerThreeWindDirection);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerThreeWindDirection"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerThreeWindDirection"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerOneWindSpeed, b?.NoiseLayerOneWindSpeed);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerOneWindSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerOneWindSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerTwoWindSpeed, b?.NoiseLayerTwoWindSpeed);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerTwoWindSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerTwoWindSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerThreeWindSpeed, b?.NoiseLayerThreeWindSpeed);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerThreeWindSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerThreeWindSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown5, b?.Unknown5);
      if (result is Result.Modified or Result.Added) {ret["Unknown5"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown5"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogAboveWaterAmount, b?.FogAboveWaterAmount);
      if (result is Result.Modified or Result.Added) {ret["FogAboveWaterAmount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogAboveWaterAmount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown6, b?.Unknown6);
      if (result is Result.Modified or Result.Added) {ret["Unknown6"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown6"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogUnderWaterAmount, b?.FogUnderWaterAmount);
      if (result is Result.Modified or Result.Added) {ret["FogUnderWaterAmount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogUnderWaterAmount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogUnderWaterDistanceNearPlane, b?.FogUnderWaterDistanceNearPlane);
      if (result is Result.Modified or Result.Added) {ret["FogUnderWaterDistanceNearPlane"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogUnderWaterDistanceNearPlane"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogUnderWaterDistanceFarPlane, b?.FogUnderWaterDistanceFarPlane);
      if (result is Result.Modified or Result.Added) {ret["FogUnderWaterDistanceFarPlane"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogUnderWaterDistanceFarPlane"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterRefractionMagnitude, b?.WaterRefractionMagnitude);
      if (result is Result.Modified or Result.Added) {ret["WaterRefractionMagnitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterRefractionMagnitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularPower, b?.SpecularPower);
      if (result is Result.Modified or Result.Added) {ret["SpecularPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown7, b?.Unknown7);
      if (result is Result.Modified or Result.Added) {ret["Unknown7"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown7"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularRadius, b?.SpecularRadius);
      if (result is Result.Modified or Result.Added) {ret["SpecularRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularBrightness, b?.SpecularBrightness);
      if (result is Result.Modified or Result.Added) {ret["SpecularBrightness"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularBrightness"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerOneUvScale, b?.NoiseLayerOneUvScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerOneUvScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerOneUvScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerTwoUvScale, b?.NoiseLayerTwoUvScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerTwoUvScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerTwoUvScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerThreeUvScale, b?.NoiseLayerThreeUvScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerThreeUvScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerThreeUvScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerOneAmplitudeScale, b?.NoiseLayerOneAmplitudeScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerOneAmplitudeScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerOneAmplitudeScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerTwoAmplitudeScale, b?.NoiseLayerTwoAmplitudeScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerTwoAmplitudeScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerTwoAmplitudeScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerThreeAmplitudeScale, b?.NoiseLayerThreeAmplitudeScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerThreeAmplitudeScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerThreeAmplitudeScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterReflectionMagnitude, b?.WaterReflectionMagnitude);
      if (result is Result.Modified or Result.Added) {ret["WaterReflectionMagnitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterReflectionMagnitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularSunSparkleMagnitude, b?.SpecularSunSparkleMagnitude);
      if (result is Result.Modified or Result.Added) {ret["SpecularSunSparkleMagnitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularSunSparkleMagnitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularSunSpecularMagnitude, b?.SpecularSunSpecularMagnitude);
      if (result is Result.Modified or Result.Added) {ret["SpecularSunSpecularMagnitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularSunSpecularMagnitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthReflections, b?.DepthReflections);
      if (result is Result.Modified or Result.Added) {ret["DepthReflections"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthReflections"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthRefraction, b?.DepthRefraction);
      if (result is Result.Modified or Result.Added) {ret["DepthRefraction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthRefraction"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthNormals, b?.DepthNormals);
      if (result is Result.Modified or Result.Added) {ret["DepthNormals"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthNormals"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DepthSpecularLighting, b?.DepthSpecularLighting);
      if (result is Result.Modified or Result.Added) {ret["DepthSpecularLighting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DepthSpecularLighting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecularSunSparklePower, b?.SpecularSunSparklePower);
      if (result is Result.Modified or Result.Added) {ret["SpecularSunSparklePower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecularSunSparklePower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseFlowmapScale, b?.NoiseFlowmapScale);
      if (result is Result.Modified or Result.Added) {ret["NoiseFlowmapScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseFlowmapScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GNAM, b?.GNAM);
      if (result is Result.Modified or Result.Added) {ret["GNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinearVelocity, b?.LinearVelocity);
      if (result is Result.Modified or Result.Added) {ret["LinearVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinearVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AngularVelocity, b?.AngularVelocity);
      if (result is Result.Modified or Result.Added) {ret["AngularVelocity"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AngularVelocity"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerOneTexture, b?.NoiseLayerOneTexture);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerOneTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerOneTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerTwoTexture, b?.NoiseLayerTwoTexture);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerTwoTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerTwoTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoiseLayerThreeTexture, b?.NoiseLayerThreeTexture);
      if (result is Result.Modified or Result.Added) {ret["NoiseLayerThreeTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoiseLayerThreeTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlowNormalsNoiseTexture, b?.FlowNormalsNoiseTexture);
      if (result is Result.Modified or Result.Added) {ret["FlowNormalsNoiseTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlowNormalsNoiseTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAMDataTypeState, b?.DNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeaponGetter? a, IWeaponGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectEffect, b?.ObjectEffect);
      if (result is Result.Modified or Result.Added) {ret["ObjectEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnchantmentAmount, b?.EnchantmentAmount);
      if (result is Result.Modified or Result.Added) {ret["EnchantmentAmount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnchantmentAmount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destructible, b?.Destructible);
      if (result is Result.Modified or Result.Added) {ret["Destructible"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destructible"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipmentType, b?.EquipmentType);
      if (result is Result.Modified or Result.Added) {ret["EquipmentType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipmentType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BlockBashImpact, b?.BlockBashImpact);
      if (result is Result.Modified or Result.Added) {ret["BlockBashImpact"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlockBashImpact"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AlternateBlockMaterial, b?.AlternateBlockMaterial);
      if (result is Result.Modified or Result.Added) {ret["AlternateBlockMaterial"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AlternateBlockMaterial"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PickUpSound, b?.PickUpSound);
      if (result is Result.Modified or Result.Added) {ret["PickUpSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PickUpSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PutDownSound, b?.PutDownSound);
      if (result is Result.Modified or Result.Added) {ret["PutDownSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PutDownSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScopeModel, b?.ScopeModel);
      if (result is Result.Modified or Result.Added) {ret["ScopeModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScopeModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImpactDataSet, b?.ImpactDataSet);
      if (result is Result.Modified or Result.Added) {ret["ImpactDataSet"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImpactDataSet"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FirstPersonModel, b?.FirstPersonModel);
      if (result is Result.Modified or Result.Added) {ret["FirstPersonModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FirstPersonModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackSound, b?.AttackSound);
      if (result is Result.Modified or Result.Added) {ret["AttackSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackSound2D, b?.AttackSound2D);
      if (result is Result.Modified or Result.Added) {ret["AttackSound2D"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackSound2D"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackLoopSound, b?.AttackLoopSound);
      if (result is Result.Modified or Result.Added) {ret["AttackLoopSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackLoopSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackFailSound, b?.AttackFailSound);
      if (result is Result.Modified or Result.Added) {ret["AttackFailSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackFailSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IdleSound, b?.IdleSound);
      if (result is Result.Modified or Result.Added) {ret["IdleSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IdleSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EquipSound, b?.EquipSound);
      if (result is Result.Modified or Result.Added) {ret["EquipSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EquipSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnequipSound, b?.UnequipSound);
      if (result is Result.Modified or Result.Added) {ret["UnequipSound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnequipSound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BasicStats, b?.BasicStats);
      if (result is Result.Modified or Result.Added) {ret["BasicStats"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BasicStats"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Critical, b?.Critical);
      if (result is Result.Modified or Result.Added) {ret["Critical"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Critical"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DetectionSoundLevel, b?.DetectionSoundLevel);
      if (result is Result.Modified or Result.Added) {ret["DetectionSoundLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DetectionSoundLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Template, b?.Template);
      if (result is Result.Modified or Result.Added) {ret["Template"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Template"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherGetter? a, IWeatherGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.CloudTextures, b?.CloudTextures);
      if (result is Result.Modified or Result.Added) {ret["CloudTextures"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloudTextures"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAM, b?.DNAM);
      if (result is Result.Modified or Result.Added) {ret["DNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CNAM, b?.CNAM);
      if (result is Result.Modified or Result.Added) {ret["CNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ANAM, b?.ANAM);
      if (result is Result.Modified or Result.Added) {ret["ANAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ANAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BNAM, b?.BNAM);
      if (result is Result.Modified or Result.Added) {ret["BNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LNAM, b?.LNAM);
      if (result is Result.Modified or Result.Added) {ret["LNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Precipitation, b?.Precipitation);
      if (result is Result.Modified or Result.Added) {ret["Precipitation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Precipitation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VisualEffect, b?.VisualEffect);
      if (result is Result.Modified or Result.Added) {ret["VisualEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VisualEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ONAM, b?.ONAM);
      if (result is Result.Modified or Result.Added) {ret["ONAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ONAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Clouds, b?.Clouds);
      if (result is Result.Modified or Result.Added) {ret["Clouds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Clouds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkyUpperColor, b?.SkyUpperColor);
      if (result is Result.Modified or Result.Added) {ret["SkyUpperColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkyUpperColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogNearColor, b?.FogNearColor);
      if (result is Result.Modified or Result.Added) {ret["FogNearColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogNearColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UnknownColor, b?.UnknownColor);
      if (result is Result.Modified or Result.Added) {ret["UnknownColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnknownColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientColor, b?.AmbientColor);
      if (result is Result.Modified or Result.Added) {ret["AmbientColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunlightColor, b?.SunlightColor);
      if (result is Result.Modified or Result.Added) {ret["SunlightColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunlightColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunColor, b?.SunColor);
      if (result is Result.Modified or Result.Added) {ret["SunColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StarsColor, b?.StarsColor);
      if (result is Result.Modified or Result.Added) {ret["StarsColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StarsColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkyLowerColor, b?.SkyLowerColor);
      if (result is Result.Modified or Result.Added) {ret["SkyLowerColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkyLowerColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HorizonColor, b?.HorizonColor);
      if (result is Result.Modified or Result.Added) {ret["HorizonColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HorizonColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EffectLightingColor, b?.EffectLightingColor);
      if (result is Result.Modified or Result.Added) {ret["EffectLightingColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EffectLightingColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloudLodDiffuseColor, b?.CloudLodDiffuseColor);
      if (result is Result.Modified or Result.Added) {ret["CloudLodDiffuseColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloudLodDiffuseColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloudLodAmbientColor, b?.CloudLodAmbientColor);
      if (result is Result.Modified or Result.Added) {ret["CloudLodAmbientColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloudLodAmbientColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogFarColor, b?.FogFarColor);
      if (result is Result.Modified or Result.Added) {ret["FogFarColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogFarColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkyStaticsColor, b?.SkyStaticsColor);
      if (result is Result.Modified or Result.Added) {ret["SkyStaticsColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkyStaticsColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterMultiplierColor, b?.WaterMultiplierColor);
      if (result is Result.Modified or Result.Added) {ret["WaterMultiplierColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterMultiplierColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunGlareColor, b?.SunGlareColor);
      if (result is Result.Modified or Result.Added) {ret["SunGlareColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunGlareColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MoonGlareColor, b?.MoonGlareColor);
      if (result is Result.Modified or Result.Added) {ret["MoonGlareColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MoonGlareColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceDayNear, b?.FogDistanceDayNear);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceDayNear"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceDayNear"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceDayFar, b?.FogDistanceDayFar);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceDayFar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceDayFar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceNightNear, b?.FogDistanceNightNear);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceNightNear"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceNightNear"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceNightFar, b?.FogDistanceNightFar);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceNightFar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceNightFar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceDayPower, b?.FogDistanceDayPower);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceDayPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceDayPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceNightPower, b?.FogDistanceNightPower);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceNightPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceNightPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceDayMax, b?.FogDistanceDayMax);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceDayMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceDayMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogDistanceNightMax, b?.FogDistanceNightMax);
      if (result is Result.Modified or Result.Added) {ret["FogDistanceNightMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogDistanceNightMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WindSpeed, b?.WindSpeed);
      if (result is Result.Modified or Result.Added) {ret["WindSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WindSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TransDelta, b?.TransDelta);
      if (result is Result.Modified or Result.Added) {ret["TransDelta"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TransDelta"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunGlare, b?.SunGlare);
      if (result is Result.Modified or Result.Added) {ret["SunGlare"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunGlare"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunDamage, b?.SunDamage);
      if (result is Result.Modified or Result.Added) {ret["SunDamage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunDamage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PrecipitationBeginFadeIn, b?.PrecipitationBeginFadeIn);
      if (result is Result.Modified or Result.Added) {ret["PrecipitationBeginFadeIn"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PrecipitationBeginFadeIn"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PrecipitationEndFadeOut, b?.PrecipitationEndFadeOut);
      if (result is Result.Modified or Result.Added) {ret["PrecipitationEndFadeOut"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PrecipitationEndFadeOut"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ThunderLightningBeginFadeIn, b?.ThunderLightningBeginFadeIn);
      if (result is Result.Modified or Result.Added) {ret["ThunderLightningBeginFadeIn"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ThunderLightningBeginFadeIn"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ThunderLightningEndFadeOut, b?.ThunderLightningEndFadeOut);
      if (result is Result.Modified or Result.Added) {ret["ThunderLightningEndFadeOut"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ThunderLightningEndFadeOut"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ThunderLightningFrequency, b?.ThunderLightningFrequency);
      if (result is Result.Modified or Result.Added) {ret["ThunderLightningFrequency"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ThunderLightningFrequency"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightningColor, b?.LightningColor);
      if (result is Result.Modified or Result.Added) {ret["LightningColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightningColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VisualEffectBegin, b?.VisualEffectBegin);
      if (result is Result.Modified or Result.Added) {ret["VisualEffectBegin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VisualEffectBegin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VisualEffectEnd, b?.VisualEffectEnd);
      if (result is Result.Modified or Result.Added) {ret["VisualEffectEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VisualEffectEnd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WindDirection, b?.WindDirection);
      if (result is Result.Modified or Result.Added) {ret["WindDirection"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WindDirection"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WindDirectionRange, b?.WindDirectionRange);
      if (result is Result.Modified or Result.Added) {ret["WindDirectionRange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WindDirectionRange"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sounds, b?.Sounds);
      if (result is Result.Modified or Result.Added) {ret["Sounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkyStatics, b?.SkyStatics);
      if (result is Result.Modified or Result.Added) {ret["SkyStatics"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkyStatics"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImageSpaces, b?.ImageSpaces);
      if (result is Result.Modified or Result.Added) {ret["ImageSpaces"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImageSpaces"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VolumetricLighting, b?.VolumetricLighting);
      if (result is Result.Modified or Result.Added) {ret["VolumetricLighting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VolumetricLighting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalAmbientLightingColors, b?.DirectionalAmbientLightingColors);
      if (result is Result.Modified or Result.Added) {ret["DirectionalAmbientLightingColors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalAmbientLightingColors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NAM2, b?.NAM2);
      if (result is Result.Modified or Result.Added) {ret["NAM2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NAM2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NAM3, b?.NAM3);
      if (result is Result.Modified or Result.Added) {ret["NAM3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NAM3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Aurora, b?.Aurora);
      if (result is Result.Modified or Result.Added) {ret["Aurora"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Aurora"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunGlareLensFlare, b?.SunGlareLensFlare);
      if (result is Result.Modified or Result.Added) {ret["SunGlareLensFlare"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunGlareLensFlare"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NAM0DataTypeState, b?.NAM0DataTypeState);
      if (result is Result.Modified or Result.Added) {ret["NAM0DataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NAM0DataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAMDataTypeState, b?.FNAMDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["FNAMDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAMDataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceGetter? a, IWorldspaceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.LargeReferences, b?.LargeReferences);
      if (result is Result.Modified or Result.Added) {ret["LargeReferences"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LargeReferences"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxHeight, b?.MaxHeight);
      if (result is Result.Modified or Result.Added) {ret["MaxHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FixedDimensionsCenterCell, b?.FixedDimensionsCenterCell);
      if (result is Result.Modified or Result.Added) {ret["FixedDimensionsCenterCell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FixedDimensionsCenterCell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InteriorLighting, b?.InteriorLighting);
      if (result is Result.Modified or Result.Added) {ret["InteriorLighting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InteriorLighting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EncounterZone, b?.EncounterZone);
      if (result is Result.Modified or Result.Added) {ret["EncounterZone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EncounterZone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Climate, b?.Climate);
      if (result is Result.Modified or Result.Added) {ret["Climate"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Climate"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Water, b?.Water);
      if (result is Result.Modified or Result.Added) {ret["Water"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Water"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LodWater, b?.LodWater);
      if (result is Result.Modified or Result.Added) {ret["LodWater"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LodWater"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LodWaterHeight, b?.LodWaterHeight);
      if (result is Result.Modified or Result.Added) {ret["LodWaterHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LodWaterHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LandDefaults, b?.LandDefaults);
      if (result is Result.Modified or Result.Added) {ret["LandDefaults"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LandDefaults"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MapImage, b?.MapImage);
      if (result is Result.Modified or Result.Added) {ret["MapImage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MapImage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CloudModel, b?.CloudModel);
      if (result is Result.Modified or Result.Added) {ret["CloudModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CloudModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MapData, b?.MapData);
      if (result is Result.Modified or Result.Added) {ret["MapData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MapData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MapOffset, b?.MapOffset);
      if (result is Result.Modified or Result.Added) {ret["MapOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MapOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DistantLodMultiplier, b?.DistantLodMultiplier);
      if (result is Result.Modified or Result.Added) {ret["DistantLodMultiplier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DistantLodMultiplier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectBounds, b?.ObjectBounds);
      if (result is Result.Modified or Result.Added) {ret["ObjectBounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectBounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Music, b?.Music);
      if (result is Result.Modified or Result.Added) {ret["Music"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Music"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CanopyShadow, b?.CanopyShadow);
      if (result is Result.Modified or Result.Added) {ret["CanopyShadow"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CanopyShadow"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterNoiseTexture, b?.WaterNoiseTexture);
      if (result is Result.Modified or Result.Added) {ret["WaterNoiseTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterNoiseTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdLodDiffuseTexture, b?.HdLodDiffuseTexture);
      if (result is Result.Modified or Result.Added) {ret["HdLodDiffuseTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdLodDiffuseTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HdLodNormalTexture, b?.HdLodNormalTexture);
      if (result is Result.Modified or Result.Added) {ret["HdLodNormalTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HdLodNormalTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WaterEnvironmentMap, b?.WaterEnvironmentMap);
      if (result is Result.Modified or Result.Added) {ret["WaterEnvironmentMap"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WaterEnvironmentMap"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OffsetData, b?.OffsetData);
      if (result is Result.Modified or Result.Added) {ret["OffsetData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OffsetData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TopCell, b?.TopCell);
      if (result is Result.Modified or Result.Added) {ret["TopCell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TopCell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SubCellsTimestamp, b?.SubCellsTimestamp);
      if (result is Result.Modified or Result.Added) {ret["SubCellsTimestamp"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SubCellsTimestamp"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SubCellsUnknown, b?.SubCellsUnknown);
      if (result is Result.Modified or Result.Added) {ret["SubCellsUnknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SubCellsUnknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SubCells, b?.SubCells);
      if (result is Result.Modified or Result.Added) {ret["SubCells"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SubCells"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAssociationTypeGetter? a, IAssociationTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ParentTitle, b?.ParentTitle);
      if (result is Result.Modified or Result.Added) {ret["ParentTitle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParentTitle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Title, b?.Title);
      if (result is Result.Modified or Result.Added) {ret["Title"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Title"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogViewGetter? a, IDialogViewGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Branches, b?.Branches);
      if (result is Result.Modified or Result.Added) {ret["Branches"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Branches"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TNAMs, b?.TNAMs);
      if (result is Result.Modified or Result.Added) {ret["TNAMs"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TNAMs"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ENAM, b?.ENAM);
      if (result is Result.Modified or Result.Added) {ret["ENAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ENAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DNAM, b?.DNAM);
      if (result is Result.Modified or Result.Added) {ret["DNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRelationshipGetter? a, IRelationshipGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Child, b?.Child);
      if (result is Result.Modified or Result.Added) {ret["Child"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Child"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Rank, b?.Rank);
      if (result is Result.Modified or Result.Added) {ret["Rank"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rank"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AssociationType, b?.AssociationType);
      if (result is Result.Modified or Result.Added) {ret["AssociationType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AssociationType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWordOfPowerGetter? a, IWordOfPowerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Translation, b?.Translation);
      if (result is Result.Modified or Result.Added) {ret["Translation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Translation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISceneGetter? a, ISceneGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Phases, b?.Phases);
      if (result is Result.Modified or Result.Added) {ret["Phases"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Phases"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Actors, b?.Actors);
      if (result is Result.Modified or Result.Added) {ret["Actors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Actors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Actions, b?.Actions);
      if (result is Result.Modified or Result.Added) {ret["Actions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Actions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused2, b?.Unused2);
      if (result is Result.Modified or Result.Added) {ret["Unused2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LastActionIndex, b?.LastActionIndex);
      if (result is Result.Modified or Result.Added) {ret["LastActionIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LastActionIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VNAM, b?.VNAM);
      if (result is Result.Modified or Result.Added) {ret["VNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundCategoryGetter? a, ISoundCategoryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StaticVolumeMultiplier, b?.StaticVolumeMultiplier);
      if (result is Result.Modified or Result.Added) {ret["StaticVolumeMultiplier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StaticVolumeMultiplier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultMenuVolume, b?.DefaultMenuVolume);
      if (result is Result.Modified or Result.Added) {ret["DefaultMenuVolume"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultMenuVolume"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPerkGetter? a, IPerkGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.VirtualMachineAdapter, b?.VirtualMachineAdapter);
      if (result is Result.Modified or Result.Added) {ret["VirtualMachineAdapter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VirtualMachineAdapter"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Description, b?.Description);
      if (result is Result.Modified or Result.Added) {ret["Description"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Description"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Trait, b?.Trait);
      if (result is Result.Modified or Result.Added) {ret["Trait"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Trait"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NumRanks, b?.NumRanks);
      if (result is Result.Modified or Result.Added) {ret["NumRanks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NumRanks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Playable, b?.Playable);
      if (result is Result.Modified or Result.Added) {ret["Playable"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Playable"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Hidden, b?.Hidden);
      if (result is Result.Modified or Result.Added) {ret["Hidden"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Hidden"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NextPerk, b?.NextPerk);
      if (result is Result.Modified or Result.Added) {ret["NextPerk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NextPerk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effects, b?.Effects);
      if (result is Result.Modified or Result.Added) {ret["Effects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBodyTemplateGetter? a, IBodyTemplateGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.FirstPersonFlags, b?.FirstPersonFlags);
      if (result is Result.Modified or Result.Added) {ret["FirstPersonFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FirstPersonFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ArmorType, b?.ArmorType);
      if (result is Result.Modified or Result.Added) {ret["ArmorType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ArmorType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActsLike44, b?.ActsLike44);
      if (result is Result.Modified or Result.Added) {ret["ActsLike44"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActsLike44"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISkillBoostGetter? a, ISkillBoostGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Skill, b?.Skill);
      if (result is Result.Modified or Result.Added) {ret["Skill"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Skill"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Boost, b?.Boost);
      if (result is Result.Modified or Result.Added) {ret["Boost"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Boost"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMountDataGetter? a, IMountDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.MountOffset, b?.MountOffset);
      if (result is Result.Modified or Result.Added) {ret["MountOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MountOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DismountOffset, b?.DismountOffset);
      if (result is Result.Modified or Result.Added) {ret["DismountOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DismountOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MountCameraOffset, b?.MountCameraOffset);
      if (result is Result.Modified or Result.Added) {ret["MountCameraOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MountCameraOffset"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAttackGetter? a, IAttackGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AttackData, b?.AttackData);
      if (result is Result.Modified or Result.Added) {ret["AttackData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackEvent, b?.AttackEvent);
      if (result is Result.Modified or Result.Added) {ret["AttackEvent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackEvent"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRaceMovementTypeGetter? a, IRaceMovementTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.MovementType, b?.MovementType);
      if (result is Result.Modified or Result.Added) {ret["MovementType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MovementType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Overrides, b?.Overrides);
      if (result is Result.Modified or Result.Added) {ret["Overrides"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Overrides"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFaceFxPhonemesGetter? a, IFaceFxPhonemesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ForceNames, b?.ForceNames);
      if (result is Result.Modified or Result.Added) {ret["ForceNames"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ForceNames"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Aah_LipBigAah, b?.Aah_LipBigAah);
      if (result is Result.Modified or Result.Added) {ret["Aah_LipBigAah"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Aah_LipBigAah"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BigAah_LipDST, b?.BigAah_LipDST);
      if (result is Result.Modified or Result.Added) {ret["BigAah_LipDST"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BigAah_LipDST"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BMP_LipEee, b?.BMP_LipEee);
      if (result is Result.Modified or Result.Added) {ret["BMP_LipEee"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BMP_LipEee"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChJSh_LipFV, b?.ChJSh_LipFV);
      if (result is Result.Modified or Result.Added) {ret["ChJSh_LipFV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChJSh_LipFV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DST_LipK, b?.DST_LipK);
      if (result is Result.Modified or Result.Added) {ret["DST_LipK"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DST_LipK"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Eee_LipL, b?.Eee_LipL);
      if (result is Result.Modified or Result.Added) {ret["Eee_LipL"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Eee_LipL"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Eh_LipR, b?.Eh_LipR);
      if (result is Result.Modified or Result.Added) {ret["Eh_LipR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Eh_LipR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FV_LipTh, b?.FV_LipTh);
      if (result is Result.Modified or Result.Added) {ret["FV_LipTh"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FV_LipTh"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.I, b?.I);
      if (result is Result.Modified or Result.Added) {ret["I"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["I"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.K, b?.K);
      if (result is Result.Modified or Result.Added) {ret["K"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["K"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.N, b?.N);
      if (result is Result.Modified or Result.Added) {ret["N"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["N"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Oh, b?.Oh);
      if (result is Result.Modified or Result.Added) {ret["Oh"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Oh"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OohQ, b?.OohQ);
      if (result is Result.Modified or Result.Added) {ret["OohQ"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OohQ"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.R, b?.R);
      if (result is Result.Modified or Result.Added) {ret["R"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["R"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Th, b?.Th);
      if (result is Result.Modified or Result.Added) {ret["Th"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Th"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.W, b?.W);
      if (result is Result.Modified or Result.Added) {ret["W"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["W"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IObjectBoundsGetter? a, IObjectBoundsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.First, b?.First);
      if (result is Result.Modified or Result.Added) {ret["First"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["First"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Second, b?.Second);
      if (result is Result.Modified or Result.Added) {ret["Second"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Second"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IVirtualMachineAdapterGetter? a, IVirtualMachineAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IModelGetter? a, IModelGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AlternateTextures, b?.AlternateTextures);
      if (result is Result.Modified or Result.Added) {ret["AlternateTextures"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AlternateTextures"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.File, b?.File);
      if (result is Result.Modified or Result.Added) {ret["File"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["File"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDestructibleGetter? a, IDestructibleGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Stages, b?.Stages);
      if (result is Result.Modified or Result.Added) {ret["Stages"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Stages"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActorValueSkillGetter? a, IActorValueSkillGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.UseMult, b?.UseMult);
      if (result is Result.Modified or Result.Added) {ret["UseMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UseMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OffsetMult, b?.OffsetMult);
      if (result is Result.Modified or Result.Added) {ret["OffsetMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OffsetMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImproveMult, b?.ImproveMult);
      if (result is Result.Modified or Result.Added) {ret["ImproveMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImproveMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ImproveOffset, b?.ImproveOffset);
      if (result is Result.Modified or Result.Added) {ret["ImproveOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ImproveOffset"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActorValuePerkNodeGetter? a, IActorValuePerkNodeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Perk, b?.Perk);
      if (result is Result.Modified or Result.Added) {ret["Perk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Perk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAM, b?.FNAM);
      if (result is Result.Modified or Result.Added) {ret["FNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PerkGridX, b?.PerkGridX);
      if (result is Result.Modified or Result.Added) {ret["PerkGridX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PerkGridX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PerkGridY, b?.PerkGridY);
      if (result is Result.Modified or Result.Added) {ret["PerkGridY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PerkGridY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HorizontalPosition, b?.HorizontalPosition);
      if (result is Result.Modified or Result.Added) {ret["HorizontalPosition"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HorizontalPosition"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VerticalPosition, b?.VerticalPosition);
      if (result is Result.Modified or Result.Added) {ret["VerticalPosition"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VerticalPosition"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AssociatedSkill, b?.AssociatedSkill);
      if (result is Result.Modified or Result.Added) {ret["AssociatedSkill"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AssociatedSkill"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ConnectionLineToIndices, b?.ConnectionLineToIndices);
      if (result is Result.Modified or Result.Added) {ret["ConnectionLineToIndices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ConnectionLineToIndices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIconsGetter? a, IIconsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.LargeIconFilename, b?.LargeIconFilename);
      if (result is Result.Modified or Result.Added) {ret["LargeIconFilename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LargeIconFilename"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SmallIconFilename, b?.SmallIconFilename);
      if (result is Result.Modified or Result.Added) {ret["SmallIconFilename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SmallIconFilename"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBodyPartGetter? a, IBodyPartGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PoseMatching, b?.PoseMatching);
      if (result is Result.Modified or Result.Added) {ret["PoseMatching"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PoseMatching"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PartNode, b?.PartNode);
      if (result is Result.Modified or Result.Added) {ret["PartNode"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PartNode"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VatsTarget, b?.VatsTarget);
      if (result is Result.Modified or Result.Added) {ret["VatsTarget"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VatsTarget"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IkStartNode, b?.IkStartNode);
      if (result is Result.Modified or Result.Added) {ret["IkStartNode"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IkStartNode"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DamageMult, b?.DamageMult);
      if (result is Result.Modified or Result.Added) {ret["DamageMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DamageMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HealthPercent, b?.HealthPercent);
      if (result is Result.Modified or Result.Added) {ret["HealthPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HealthPercent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorValue, b?.ActorValue);
      if (result is Result.Modified or Result.Added) {ret["ActorValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ToHitChance, b?.ToHitChance);
      if (result is Result.Modified or Result.Added) {ret["ToHitChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ToHitChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableExplosionChance, b?.ExplodableExplosionChance);
      if (result is Result.Modified or Result.Added) {ret["ExplodableExplosionChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableExplosionChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableDebrisCount, b?.ExplodableDebrisCount);
      if (result is Result.Modified or Result.Added) {ret["ExplodableDebrisCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableDebrisCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableDebris, b?.ExplodableDebris);
      if (result is Result.Modified or Result.Added) {ret["ExplodableDebris"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableDebris"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableExplosion, b?.ExplodableExplosion);
      if (result is Result.Modified or Result.Added) {ret["ExplodableExplosion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableExplosion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TrackingMaxAngle, b?.TrackingMaxAngle);
      if (result is Result.Modified or Result.Added) {ret["TrackingMaxAngle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TrackingMaxAngle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableDebrisScale, b?.ExplodableDebrisScale);
      if (result is Result.Modified or Result.Added) {ret["ExplodableDebrisScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableDebrisScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SeverableDebrisCount, b?.SeverableDebrisCount);
      if (result is Result.Modified or Result.Added) {ret["SeverableDebrisCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SeverableDebrisCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SeverableDebris, b?.SeverableDebris);
      if (result is Result.Modified or Result.Added) {ret["SeverableDebris"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SeverableDebris"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SeverableExplosion, b?.SeverableExplosion);
      if (result is Result.Modified or Result.Added) {ret["SeverableExplosion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SeverableExplosion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SeverableDebrisScale, b?.SeverableDebrisScale);
      if (result is Result.Modified or Result.Added) {ret["SeverableDebrisScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SeverableDebrisScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GorePositioning, b?.GorePositioning);
      if (result is Result.Modified or Result.Added) {ret["GorePositioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GorePositioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GoreRotation, b?.GoreRotation);
      if (result is Result.Modified or Result.Added) {ret["GoreRotation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GoreRotation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SeverableImpactData, b?.SeverableImpactData);
      if (result is Result.Modified or Result.Added) {ret["SeverableImpactData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SeverableImpactData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableImpactData, b?.ExplodableImpactData);
      if (result is Result.Modified or Result.Added) {ret["ExplodableImpactData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableImpactData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SeverableDecalCount, b?.SeverableDecalCount);
      if (result is Result.Modified or Result.Added) {ret["SeverableDecalCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SeverableDecalCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExplodableDecalCount, b?.ExplodableDecalCount);
      if (result is Result.Modified or Result.Added) {ret["ExplodableDecalCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExplodableDecalCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LimbReplacementScale, b?.LimbReplacementScale);
      if (result is Result.Modified or Result.Added) {ret["LimbReplacementScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LimbReplacementScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LimbReplacementModel, b?.LimbReplacementModel);
      if (result is Result.Modified or Result.Added) {ret["LimbReplacementModel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LimbReplacementModel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GoreTargetBone, b?.GoreTargetBone);
      if (result is Result.Modified or Result.Added) {ret["GoreTargetBone"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GoreTargetBone"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureFilesHashes, b?.TextureFilesHashes);
      if (result is Result.Modified or Result.Added) {ret["TextureFilesHashes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureFilesHashes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BPNDDataTypeState, b?.BPNDDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["BPNDDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BPNDDataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBookTeachTargetGetter? a, IBookTeachTargetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IConditionGetter? a, IConditionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CompareOperator, b?.CompareOperator);
      if (result is Result.Modified or Result.Added) {ret["CompareOperator"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CompareOperator"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown1, b?.Unknown1);
      if (result is Result.Modified or Result.Added) {ret["Unknown1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown1"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICellGridGetter? a, ICellGridGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Point, b?.Point);
      if (result is Result.Modified or Result.Added) {ret["Point"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Point"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICellLightingGetter? a, ICellLightingGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientColor, b?.AmbientColor);
      if (result is Result.Modified or Result.Added) {ret["AmbientColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalColor, b?.DirectionalColor);
      if (result is Result.Modified or Result.Added) {ret["DirectionalColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogNearColor, b?.FogNearColor);
      if (result is Result.Modified or Result.Added) {ret["FogNearColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogNearColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogNear, b?.FogNear);
      if (result is Result.Modified or Result.Added) {ret["FogNear"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogNear"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogFar, b?.FogFar);
      if (result is Result.Modified or Result.Added) {ret["FogFar"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogFar"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalRotationXY, b?.DirectionalRotationXY);
      if (result is Result.Modified or Result.Added) {ret["DirectionalRotationXY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalRotationXY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalRotationZ, b?.DirectionalRotationZ);
      if (result is Result.Modified or Result.Added) {ret["DirectionalRotationZ"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalRotationZ"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalFade, b?.DirectionalFade);
      if (result is Result.Modified or Result.Added) {ret["DirectionalFade"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalFade"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogClipDistance, b?.FogClipDistance);
      if (result is Result.Modified or Result.Added) {ret["FogClipDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogClipDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogPower, b?.FogPower);
      if (result is Result.Modified or Result.Added) {ret["FogPower"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogPower"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalXPlus, b?.AmbientDirectionalXPlus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalXPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalXPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalXMinus, b?.AmbientDirectionalXMinus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalXMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalXMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalYPlus, b?.AmbientDirectionalYPlus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalYPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalYPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalYMinus, b?.AmbientDirectionalYMinus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalYMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalYMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalZPlus, b?.AmbientDirectionalZPlus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalZPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalZPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientDirectionalZMinus, b?.AmbientDirectionalZMinus);
      if (result is Result.Modified or Result.Added) {ret["AmbientDirectionalZMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientDirectionalZMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientSpecular, b?.AmbientSpecular);
      if (result is Result.Modified or Result.Added) {ret["AmbientSpecular"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientSpecular"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AmbientScale, b?.AmbientScale);
      if (result is Result.Modified or Result.Added) {ret["AmbientScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AmbientScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogFarColor, b?.FogFarColor);
      if (result is Result.Modified or Result.Added) {ret["FogFarColor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogFarColor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FogMax, b?.FogMax);
      if (result is Result.Modified or Result.Added) {ret["FogMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FogMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightFadeBegin, b?.LightFadeBegin);
      if (result is Result.Modified or Result.Added) {ret["LightFadeBegin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightFadeBegin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LightFadeEnd, b?.LightFadeEnd);
      if (result is Result.Modified or Result.Added) {ret["LightFadeEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LightFadeEnd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Inherits, b?.Inherits);
      if (result is Result.Modified or Result.Added) {ret["Inherits"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Inherits"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalXPlus, b?.DirectionalXPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalXPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalXPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalXMinus, b?.DirectionalXMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalXMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalXMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalYPlus, b?.DirectionalYPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalYPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalYPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalYMinus, b?.DirectionalYMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalYMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalYMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalZPlus, b?.DirectionalZPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalZPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalZPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalZMinus, b?.DirectionalZMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalZMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalZMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Specular, b?.Specular);
      if (result is Result.Modified or Result.Added) {ret["Specular"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Specular"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICellWaterVelocityGetter? a, ICellWaterVelocityGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Offset, b?.Offset);
      if (result is Result.Modified or Result.Added) {ret["Offset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Offset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Angle, b?.Angle);
      if (result is Result.Modified or Result.Added) {ret["Angle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Angle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IOwnershipGetter? a, IOwnershipGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Owner, b?.Owner);
      if (result is Result.Modified or Result.Added) {ret["Owner"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Owner"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FactionRank, b?.FactionRank);
      if (result is Result.Modified or Result.Added) {ret["FactionRank"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FactionRank"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IANavigationMeshGetter? a, IANavigationMeshGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ONAM, b?.ONAM);
      if (result is Result.Modified or Result.Added) {ret["ONAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ONAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PNAM, b?.PNAM);
      if (result is Result.Modified or Result.Added) {ret["PNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NNAM, b?.NNAM);
      if (result is Result.Modified or Result.Added) {ret["NNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorFlags, b?.MajorFlags);
      if (result is Result.Modified or Result.Added) {ret["MajorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedGetter? a, IPlacedGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Placement, b?.Placement);
      if (result is Result.Modified or Result.Added) {ret["Placement"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Placement"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnableParent, b?.EnableParent);
      if (result is Result.Modified or Result.Added) {ret["EnableParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnableParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormVersion, b?.FormVersion);
      if (result is Result.Modified or Result.Added) {ret["FormVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version2, b?.Version2);
      if (result is Result.Modified or Result.Added) {ret["Version2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MajorRecordFlagsRaw, b?.MajorRecordFlagsRaw);
      if (result is Result.Modified or Result.Added) {ret["MajorRecordFlagsRaw"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MajorRecordFlagsRaw"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FormKey, b?.FormKey);
      if (result is Result.Modified or Result.Added) {ret["FormKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FormKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VersionControl, b?.VersionControl);
      if (result is Result.Modified or Result.Added) {ret["VersionControl"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VersionControl"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorID, b?.EditorID);
      if (result is Result.Modified or Result.Added) {ret["EditorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCompressed, b?.IsCompressed);
      if (result is Result.Modified or Result.Added) {ret["IsCompressed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCompressed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsDeleted, b?.IsDeleted);
      if (result is Result.Modified or Result.Added) {ret["IsDeleted"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsDeleted"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherTypeGetter? a, IWeatherTypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Weather, b?.Weather);
      if (result is Result.Modified or Result.Added) {ret["Weather"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weather"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Chance, b?.Chance);
      if (result is Result.Modified or Result.Added) {ret["Chance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Chance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Global, b?.Global);
      if (result is Result.Modified or Result.Added) {ret["Global"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Global"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICombatStyleMeleeGetter? a, ICombatStyleMeleeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackStaggeredMult, b?.AttackStaggeredMult);
      if (result is Result.Modified or Result.Added) {ret["AttackStaggeredMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackStaggeredMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PowerAttackStaggeredMult, b?.PowerAttackStaggeredMult);
      if (result is Result.Modified or Result.Added) {ret["PowerAttackStaggeredMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PowerAttackStaggeredMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PowerAttackBlockingMult, b?.PowerAttackBlockingMult);
      if (result is Result.Modified or Result.Added) {ret["PowerAttackBlockingMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PowerAttackBlockingMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BashMult, b?.BashMult);
      if (result is Result.Modified or Result.Added) {ret["BashMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BashMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BashRecoilMult, b?.BashRecoilMult);
      if (result is Result.Modified or Result.Added) {ret["BashRecoilMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BashRecoilMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BashAttackMult, b?.BashAttackMult);
      if (result is Result.Modified or Result.Added) {ret["BashAttackMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BashAttackMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BashPowerAttackMult, b?.BashPowerAttackMult);
      if (result is Result.Modified or Result.Added) {ret["BashPowerAttackMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BashPowerAttackMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecialAttackMult, b?.SpecialAttackMult);
      if (result is Result.Modified or Result.Added) {ret["SpecialAttackMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecialAttackMult"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICombatStyleCloseRangeGetter? a, ICombatStyleCloseRangeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CircleMult, b?.CircleMult);
      if (result is Result.Modified or Result.Added) {ret["CircleMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CircleMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FallbackMult, b?.FallbackMult);
      if (result is Result.Modified or Result.Added) {ret["FallbackMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FallbackMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlankDistance, b?.FlankDistance);
      if (result is Result.Modified or Result.Added) {ret["FlankDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlankDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StalkTime, b?.StalkTime);
      if (result is Result.Modified or Result.Added) {ret["StalkTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StalkTime"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICombatStyleFlightGetter? a, ICombatStyleFlightGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HoverChance, b?.HoverChance);
      if (result is Result.Modified or Result.Added) {ret["HoverChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HoverChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DiveBombChance, b?.DiveBombChance);
      if (result is Result.Modified or Result.Added) {ret["DiveBombChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DiveBombChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GroundAttackChance, b?.GroundAttackChance);
      if (result is Result.Modified or Result.Added) {ret["GroundAttackChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GroundAttackChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HoverTime, b?.HoverTime);
      if (result is Result.Modified or Result.Added) {ret["HoverTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HoverTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GroundAttackTime, b?.GroundAttackTime);
      if (result is Result.Modified or Result.Added) {ret["GroundAttackTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GroundAttackTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PerchAttackChance, b?.PerchAttackChance);
      if (result is Result.Modified or Result.Added) {ret["PerchAttackChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PerchAttackChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PerchAttackTime, b?.PerchAttackTime);
      if (result is Result.Modified or Result.Added) {ret["PerchAttackTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PerchAttackTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlyingAttackChance, b?.FlyingAttackChance);
      if (result is Result.Modified or Result.Added) {ret["FlyingAttackChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlyingAttackChance"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IContainerEntryGetter? a, IContainerEntryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Item, b?.Item);
      if (result is Result.Modified or Result.Added) {ret["Item"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Item"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDebrisModelGetter? a, IDebrisModelGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Percentage, b?.Percentage);
      if (result is Result.Modified or Result.Added) {ret["Percentage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Percentage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ModelFilename, b?.ModelFilename);
      if (result is Result.Modified or Result.Added) {ret["ModelFilename"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ModelFilename"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TextureFileHashes, b?.TextureFileHashes);
      if (result is Result.Modified or Result.Added) {ret["TextureFileHashes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TextureFileHashes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DATADataTypeState, b?.DATADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["DATADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DATADataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDefaultObjectGetter? a, IDefaultObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Use, b?.Use);
      if (result is Result.Modified or Result.Added) {ret["Use"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Use"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Object, b?.Object);
      if (result is Result.Modified or Result.Added) {ret["Object"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Object"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogResponsesAdapterGetter? a, IDialogResponsesAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptFragments, b?.ScriptFragments);
      if (result is Result.Modified or Result.Added) {ret["ScriptFragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptFragments"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogResponseFlagsGetter? a, IDialogResponseFlagsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ResetHours, b?.ResetHours);
      if (result is Result.Modified or Result.Added) {ret["ResetHours"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ResetHours"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogResponseGetter? a, IDialogResponseGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Emotion, b?.Emotion);
      if (result is Result.Modified or Result.Added) {ret["Emotion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emotion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EmotionValue, b?.EmotionValue);
      if (result is Result.Modified or Result.Added) {ret["EmotionValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EmotionValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ResponseNumber, b?.ResponseNumber);
      if (result is Result.Modified or Result.Added) {ret["ResponseNumber"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ResponseNumber"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Text, b?.Text);
      if (result is Result.Modified or Result.Added) {ret["Text"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Text"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptNotes, b?.ScriptNotes);
      if (result is Result.Modified or Result.Added) {ret["ScriptNotes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptNotes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Edits, b?.Edits);
      if (result is Result.Modified or Result.Added) {ret["Edits"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Edits"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpeakerIdleAnimation, b?.SpeakerIdleAnimation);
      if (result is Result.Modified or Result.Added) {ret["SpeakerIdleAnimation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpeakerIdleAnimation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ListenerIdleAnimation, b?.ListenerIdleAnimation);
      if (result is Result.Modified or Result.Added) {ret["ListenerIdleAnimation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ListenerIdleAnimation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TRDTDataTypeState, b?.TRDTDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["TRDTDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TRDTDataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDialogResponsesUnknownDataGetter? a, IDialogResponsesUnknownDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.SCHR, b?.SCHR);
      if (result is Result.Modified or Result.Added) {ret["SCHR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCHR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.QNAM, b?.QNAM);
      if (result is Result.Modified or Result.Added) {ret["QNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["QNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NEXT, b?.NEXT);
      if (result is Result.Modified or Result.Added) {ret["NEXT"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NEXT"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRelationGetter? a, IRelationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Target, b?.Target);
      if (result is Result.Modified or Result.Added) {ret["Target"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Target"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Modifier, b?.Modifier);
      if (result is Result.Modified or Result.Added) {ret["Modifier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Modifier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reaction, b?.Reaction);
      if (result is Result.Modified or Result.Added) {ret["Reaction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reaction"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICrimeValuesGetter? a, ICrimeValuesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Arrest, b?.Arrest);
      if (result is Result.Modified or Result.Added) {ret["Arrest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Arrest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackOnSight, b?.AttackOnSight);
      if (result is Result.Modified or Result.Added) {ret["AttackOnSight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackOnSight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Murder, b?.Murder);
      if (result is Result.Modified or Result.Added) {ret["Murder"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Murder"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Assault, b?.Assault);
      if (result is Result.Modified or Result.Added) {ret["Assault"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Assault"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Trespass, b?.Trespass);
      if (result is Result.Modified or Result.Added) {ret["Trespass"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Trespass"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Pickpocket, b?.Pickpocket);
      if (result is Result.Modified or Result.Added) {ret["Pickpocket"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Pickpocket"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StealMult, b?.StealMult);
      if (result is Result.Modified or Result.Added) {ret["StealMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StealMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Escape, b?.Escape);
      if (result is Result.Modified or Result.Added) {ret["Escape"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Escape"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Werewolf, b?.Werewolf);
      if (result is Result.Modified or Result.Added) {ret["Werewolf"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Werewolf"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRankGetter? a, IRankGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Number, b?.Number);
      if (result is Result.Modified or Result.Added) {ret["Number"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Number"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Title, b?.Title);
      if (result is Result.Modified or Result.Added) {ret["Title"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Title"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Insignia, b?.Insignia);
      if (result is Result.Modified or Result.Added) {ret["Insignia"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Insignia"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IVendorValuesGetter? a, IVendorValuesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.StartHour, b?.StartHour);
      if (result is Result.Modified or Result.Added) {ret["StartHour"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StartHour"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EndHour, b?.EndHour);
      if (result is Result.Modified or Result.Added) {ret["EndHour"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EndHour"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnlyBuysStolenItems, b?.OnlyBuysStolenItems);
      if (result is Result.Modified or Result.Added) {ret["OnlyBuysStolenItems"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnlyBuysStolenItems"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NotSellBuy, b?.NotSellBuy);
      if (result is Result.Modified or Result.Added) {ret["NotSellBuy"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NotSellBuy"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationTargetRadiusGetter? a, ILocationTargetRadiusGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Target, b?.Target);
      if (result is Result.Modified or Result.Added) {ret["Target"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Target"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISeasonalIngredientProductionGetter? a, ISeasonalIngredientProductionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Spring, b?.Spring);
      if (result is Result.Modified or Result.Added) {ret["Spring"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Spring"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Summer, b?.Summer);
      if (result is Result.Modified or Result.Added) {ret["Summer"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Summer"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Fall, b?.Fall);
      if (result is Result.Modified or Result.Added) {ret["Fall"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Fall"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Winter, b?.Winter);
      if (result is Result.Modified or Result.Added) {ret["Winter"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Winter"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorkbenchDataGetter? a, IWorkbenchDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BenchType, b?.BenchType);
      if (result is Result.Modified or Result.Added) {ret["BenchType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BenchType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UsesSkill, b?.UsesSkill);
      if (result is Result.Modified or Result.Added) {ret["UsesSkill"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UsesSkill"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFurnitureMarkerGetter? a, IFurnitureMarkerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Enabled, b?.Enabled);
      if (result is Result.Modified or Result.Added) {ret["Enabled"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Enabled"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisabledEntryPoints, b?.DisabledEntryPoints);
      if (result is Result.Modified or Result.Added) {ret["DisabledEntryPoints"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisabledEntryPoints"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MarkerKeyword, b?.MarkerKeyword);
      if (result is Result.Modified or Result.Added) {ret["MarkerKeyword"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MarkerKeyword"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EntryPoints, b?.EntryPoints);
      if (result is Result.Modified or Result.Added) {ret["EntryPoints"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EntryPoints"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPartGetter? a, IPartGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.PartType, b?.PartType);
      if (result is Result.Modified or Result.Added) {ret["PartType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PartType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FileName, b?.FileName);
      if (result is Result.Modified or Result.Added) {ret["FileName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FileName"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImageSpaceHdrGetter? a, IImageSpaceHdrGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.EyeAdaptSpeed, b?.EyeAdaptSpeed);
      if (result is Result.Modified or Result.Added) {ret["EyeAdaptSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EyeAdaptSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BloomBlurRadius, b?.BloomBlurRadius);
      if (result is Result.Modified or Result.Added) {ret["BloomBlurRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BloomBlurRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BloomThreshold, b?.BloomThreshold);
      if (result is Result.Modified or Result.Added) {ret["BloomThreshold"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BloomThreshold"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BloomScale, b?.BloomScale);
      if (result is Result.Modified or Result.Added) {ret["BloomScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BloomScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReceiveBloomThreshold, b?.ReceiveBloomThreshold);
      if (result is Result.Modified or Result.Added) {ret["ReceiveBloomThreshold"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReceiveBloomThreshold"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.White, b?.White);
      if (result is Result.Modified or Result.Added) {ret["White"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["White"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SunlightScale, b?.SunlightScale);
      if (result is Result.Modified or Result.Added) {ret["SunlightScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SunlightScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkyScale, b?.SkyScale);
      if (result is Result.Modified or Result.Added) {ret["SkyScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkyScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EyeAdaptStrength, b?.EyeAdaptStrength);
      if (result is Result.Modified or Result.Added) {ret["EyeAdaptStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EyeAdaptStrength"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImageSpaceCinematicGetter? a, IImageSpaceCinematicGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Saturation, b?.Saturation);
      if (result is Result.Modified or Result.Added) {ret["Saturation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Saturation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Brightness, b?.Brightness);
      if (result is Result.Modified or Result.Added) {ret["Brightness"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Brightness"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Contrast, b?.Contrast);
      if (result is Result.Modified or Result.Added) {ret["Contrast"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Contrast"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImageSpaceTintGetter? a, IImageSpaceTintGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Amount, b?.Amount);
      if (result is Result.Modified or Result.Added) {ret["Amount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Amount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImageSpaceDepthOfFieldGetter? a, IImageSpaceDepthOfFieldGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Strength, b?.Strength);
      if (result is Result.Modified or Result.Added) {ret["Strength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Strength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Distance, b?.Distance);
      if (result is Result.Modified or Result.Added) {ret["Distance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Distance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Range, b?.Range);
      if (result is Result.Modified or Result.Added) {ret["Range"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Range"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BlurRadius, b?.BlurRadius);
      if (result is Result.Modified or Result.Added) {ret["BlurRadius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlurRadius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sky, b?.Sky);
      if (result is Result.Modified or Result.Added) {ret["Sky"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sky"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IKeyFrameGetter? a, IKeyFrameGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Time, b?.Time);
      if (result is Result.Modified or Result.Added) {ret["Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IColorFrameGetter? a, IColorFrameGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Time, b?.Time);
      if (result is Result.Modified or Result.Added) {ret["Time"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Time"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDecalGetter? a, IDecalGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.MinWidth, b?.MinWidth);
      if (result is Result.Modified or Result.Added) {ret["MinWidth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinWidth"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxWidth, b?.MaxWidth);
      if (result is Result.Modified or Result.Added) {ret["MaxWidth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxWidth"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinHeight, b?.MinHeight);
      if (result is Result.Modified or Result.Added) {ret["MinHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxHeight, b?.MaxHeight);
      if (result is Result.Modified or Result.Added) {ret["MaxHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Depth, b?.Depth);
      if (result is Result.Modified or Result.Added) {ret["Depth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Depth"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Shininess, b?.Shininess);
      if (result is Result.Modified or Result.Added) {ret["Shininess"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Shininess"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParallaxScale, b?.ParallaxScale);
      if (result is Result.Modified or Result.Added) {ret["ParallaxScale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParallaxScale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParallaxPasses, b?.ParallaxPasses);
      if (result is Result.Modified or Result.Added) {ret["ParallaxPasses"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParallaxPasses"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IImpactDataGetter? a, IImpactDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Material, b?.Material);
      if (result is Result.Modified or Result.Added) {ret["Material"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Material"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Impact, b?.Impact);
      if (result is Result.Modified or Result.Added) {ret["Impact"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Impact"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEffectGetter? a, IEffectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BaseEffect, b?.BaseEffect);
      if (result is Result.Modified or Result.Added) {ret["BaseEffect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseEffect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBaseLayerGetter? a, IBaseLayerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledItemEntryGetter? a, ILeveledItemEntryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExtraData, b?.ExtraData);
      if (result is Result.Modified or Result.Added) {ret["ExtraData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExtraData"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledNpcEntryGetter? a, ILeveledNpcEntryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExtraData, b?.ExtraData);
      if (result is Result.Modified or Result.Added) {ret["ExtraData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExtraData"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledSpellEntryGetter? a, ILeveledSpellEntryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ExtraData, b?.ExtraData);
      if (result is Result.Modified or Result.Added) {ret["ExtraData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ExtraData"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAmbientColorsGetter? a, IAmbientColorsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalXPlus, b?.DirectionalXPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalXPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalXPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalXMinus, b?.DirectionalXMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalXMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalXMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalYPlus, b?.DirectionalYPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalYPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalYPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalYMinus, b?.DirectionalYMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalYMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalYMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalZPlus, b?.DirectionalZPlus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalZPlus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalZPlus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DirectionalZMinus, b?.DirectionalZMinus);
      if (result is Result.Modified or Result.Added) {ret["DirectionalZMinus"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DirectionalZMinus"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Specular, b?.Specular);
      if (result is Result.Modified or Result.Added) {ret["Specular"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Specular"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IInt16MinMaxGetter? a, IInt16MinMaxGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationReferenceGetter? a, ILocationReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Actor, b?.Actor);
      if (result is Result.Modified or Result.Added) {ret["Actor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Actor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Grid, b?.Grid);
      if (result is Result.Modified or Result.Added) {ret["Grid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grid"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationCellStaticReferenceGetter? a, ILocationCellStaticReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.LocationRefType, b?.LocationRefType);
      if (result is Result.Modified or Result.Added) {ret["LocationRefType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LocationRefType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Marker, b?.Marker);
      if (result is Result.Modified or Result.Added) {ret["Marker"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Marker"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Grid, b?.Grid);
      if (result is Result.Modified or Result.Added) {ret["Grid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grid"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationCoordinateGetter? a, ILocationCoordinateGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Coordinates, b?.Coordinates);
      if (result is Result.Modified or Result.Added) {ret["Coordinates"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Coordinates"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationCellEnablePointGetter? a, ILocationCellEnablePointGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Actor, b?.Actor);
      if (result is Result.Modified or Result.Added) {ret["Actor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Actor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ref, b?.Ref);
      if (result is Result.Modified or Result.Added) {ret["Ref"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ref"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Grid, b?.Grid);
      if (result is Result.Modified or Result.Added) {ret["Grid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grid"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMagicEffectArchetypeGetter? a, IMagicEffectArchetypeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AssociationKey, b?.AssociationKey);
      if (result is Result.Modified or Result.Added) {ret["AssociationKey"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AssociationKey"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorValue, b?.ActorValue);
      if (result is Result.Modified or Result.Added) {ret["ActorValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorValue"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMagicEffectSoundGetter? a, IMagicEffectSoundGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMessageButtonGetter? a, IMessageButtonGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Text, b?.Text);
      if (result is Result.Modified or Result.Added) {ret["Text"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Text"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAnimationChangeThresholdsGetter? a, IAnimationChangeThresholdsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Directional, b?.Directional);
      if (result is Result.Modified or Result.Added) {ret["Directional"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Directional"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MovementSpeed, b?.MovementSpeed);
      if (result is Result.Modified or Result.Added) {ret["MovementSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MovementSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationSpeed, b?.RotationSpeed);
      if (result is Result.Modified or Result.Added) {ret["RotationSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationSpeed"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMusicTrackLoopDataGetter? a, IMusicTrackLoopDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Begins, b?.Begins);
      if (result is Result.Modified or Result.Added) {ret["Begins"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Begins"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Ends, b?.Ends);
      if (result is Result.Modified or Result.Added) {ret["Ends"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Ends"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Count, b?.Count);
      if (result is Result.Modified or Result.Added) {ret["Count"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Count"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMusicTypeDataGetter? a, IMusicTypeDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DuckingDecibel, b?.DuckingDecibel);
      if (result is Result.Modified or Result.Added) {ret["DuckingDecibel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DuckingDecibel"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceNavigationMeshDataGetter? a, IWorldspaceNavigationMeshDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Coordinates, b?.Coordinates);
      if (result is Result.Modified or Result.Added) {ret["Coordinates"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Coordinates"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshVersion, b?.NavmeshVersion);
      if (result is Result.Modified or Result.Added) {ret["NavmeshVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Magic, b?.Magic);
      if (result is Result.Modified or Result.Added) {ret["Magic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Magic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Vertices, b?.Vertices);
      if (result is Result.Modified or Result.Added) {ret["Vertices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Vertices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Triangles, b?.Triangles);
      if (result is Result.Modified or Result.Added) {ret["Triangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Triangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeLinks, b?.EdgeLinks);
      if (result is Result.Modified or Result.Added) {ret["EdgeLinks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeLinks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DoorTriangles, b?.DoorTriangles);
      if (result is Result.Modified or Result.Added) {ret["DoorTriangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DoorTriangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshGridDivisor, b?.NavmeshGridDivisor);
      if (result is Result.Modified or Result.Added) {ret["NavmeshGridDivisor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshGridDivisor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistanceX, b?.MaxDistanceX);
      if (result is Result.Modified or Result.Added) {ret["MaxDistanceX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistanceX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistanceY, b?.MaxDistanceY);
      if (result is Result.Modified or Result.Added) {ret["MaxDistanceY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistanceY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshGrid, b?.NavmeshGrid);
      if (result is Result.Modified or Result.Added) {ret["NavmeshGrid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshGrid"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICellNavigationMeshDataGetter? a, ICellNavigationMeshDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.UnusedWorldspaceParent, b?.UnusedWorldspaceParent);
      if (result is Result.Modified or Result.Added) {ret["UnusedWorldspaceParent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UnusedWorldspaceParent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parent, b?.Parent);
      if (result is Result.Modified or Result.Added) {ret["Parent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshVersion, b?.NavmeshVersion);
      if (result is Result.Modified or Result.Added) {ret["NavmeshVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Magic, b?.Magic);
      if (result is Result.Modified or Result.Added) {ret["Magic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Magic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Vertices, b?.Vertices);
      if (result is Result.Modified or Result.Added) {ret["Vertices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Vertices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Triangles, b?.Triangles);
      if (result is Result.Modified or Result.Added) {ret["Triangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Triangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeLinks, b?.EdgeLinks);
      if (result is Result.Modified or Result.Added) {ret["EdgeLinks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeLinks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DoorTriangles, b?.DoorTriangles);
      if (result is Result.Modified or Result.Added) {ret["DoorTriangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DoorTriangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshGridDivisor, b?.NavmeshGridDivisor);
      if (result is Result.Modified or Result.Added) {ret["NavmeshGridDivisor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshGridDivisor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistanceX, b?.MaxDistanceX);
      if (result is Result.Modified or Result.Added) {ret["MaxDistanceX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistanceX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistanceY, b?.MaxDistanceY);
      if (result is Result.Modified or Result.Added) {ret["MaxDistanceY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistanceY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshGrid, b?.NavmeshGrid);
      if (result is Result.Modified or Result.Added) {ret["NavmeshGrid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshGrid"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INavigationMapInfoGetter? a, INavigationMapInfoGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NavigationMesh, b?.NavigationMesh);
      if (result is Result.Modified or Result.Added) {ret["NavigationMesh"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavigationMesh"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Point, b?.Point);
      if (result is Result.Modified or Result.Added) {ret["Point"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Point"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreferredMergesFlag, b?.PreferredMergesFlag);
      if (result is Result.Modified or Result.Added) {ret["PreferredMergesFlag"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreferredMergesFlag"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MergedTo, b?.MergedTo);
      if (result is Result.Modified or Result.Added) {ret["MergedTo"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MergedTo"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreferredMerges, b?.PreferredMerges);
      if (result is Result.Modified or Result.Added) {ret["PreferredMerges"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreferredMerges"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LinkedDoors, b?.LinkedDoors);
      if (result is Result.Modified or Result.Added) {ret["LinkedDoors"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LinkedDoors"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Island, b?.Island);
      if (result is Result.Modified or Result.Added) {ret["Island"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Island"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParentWorldspace, b?.ParentWorldspace);
      if (result is Result.Modified or Result.Added) {ret["ParentWorldspace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParentWorldspace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParentWorldspaceCoord, b?.ParentWorldspaceCoord);
      if (result is Result.Modified or Result.Added) {ret["ParentWorldspaceCoord"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParentWorldspaceCoord"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParentCell, b?.ParentCell);
      if (result is Result.Modified or Result.Added) {ret["ParentCell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParentCell"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPreferredPathingGetter? a, IPreferredPathingGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshSets, b?.NavmeshSets);
      if (result is Result.Modified or Result.Added) {ret["NavmeshSets"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshSets"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshTree, b?.NavmeshTree);
      if (result is Result.Modified or Result.Added) {ret["NavmeshTree"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshTree"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INpcConfigurationGetter? a, INpcConfigurationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MagickaOffset, b?.MagickaOffset);
      if (result is Result.Modified or Result.Added) {ret["MagickaOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MagickaOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StaminaOffset, b?.StaminaOffset);
      if (result is Result.Modified or Result.Added) {ret["StaminaOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StaminaOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CalcMinLevel, b?.CalcMinLevel);
      if (result is Result.Modified or Result.Added) {ret["CalcMinLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CalcMinLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CalcMaxLevel, b?.CalcMaxLevel);
      if (result is Result.Modified or Result.Added) {ret["CalcMaxLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CalcMaxLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpeedMultiplier, b?.SpeedMultiplier);
      if (result is Result.Modified or Result.Added) {ret["SpeedMultiplier"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpeedMultiplier"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DispositionBase, b?.DispositionBase);
      if (result is Result.Modified or Result.Added) {ret["DispositionBase"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DispositionBase"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TemplateFlags, b?.TemplateFlags);
      if (result is Result.Modified or Result.Added) {ret["TemplateFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TemplateFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HealthOffset, b?.HealthOffset);
      if (result is Result.Modified or Result.Added) {ret["HealthOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HealthOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BleedoutOverride, b?.BleedoutOverride);
      if (result is Result.Modified or Result.Added) {ret["BleedoutOverride"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BleedoutOverride"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRankPlacementGetter? a, IRankPlacementGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Faction, b?.Faction);
      if (result is Result.Modified or Result.Added) {ret["Faction"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Faction"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Rank, b?.Rank);
      if (result is Result.Modified or Result.Added) {ret["Rank"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rank"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Fluff, b?.Fluff);
      if (result is Result.Modified or Result.Added) {ret["Fluff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Fluff"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPerkPlacementGetter? a, IPerkPlacementGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Perk, b?.Perk);
      if (result is Result.Modified or Result.Added) {ret["Perk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Perk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Rank, b?.Rank);
      if (result is Result.Modified or Result.Added) {ret["Rank"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rank"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Fluff, b?.Fluff);
      if (result is Result.Modified or Result.Added) {ret["Fluff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Fluff"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAIDataGetter? a, IAIDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Aggression, b?.Aggression);
      if (result is Result.Modified or Result.Added) {ret["Aggression"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Aggression"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Confidence, b?.Confidence);
      if (result is Result.Modified or Result.Added) {ret["Confidence"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Confidence"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EnergyLevel, b?.EnergyLevel);
      if (result is Result.Modified or Result.Added) {ret["EnergyLevel"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EnergyLevel"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Responsibility, b?.Responsibility);
      if (result is Result.Modified or Result.Added) {ret["Responsibility"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Responsibility"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Mood, b?.Mood);
      if (result is Result.Modified or Result.Added) {ret["Mood"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Mood"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Assistance, b?.Assistance);
      if (result is Result.Modified or Result.Added) {ret["Assistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Assistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AggroRadiusBehavior, b?.AggroRadiusBehavior);
      if (result is Result.Modified or Result.Added) {ret["AggroRadiusBehavior"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AggroRadiusBehavior"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Warn, b?.Warn);
      if (result is Result.Modified or Result.Added) {ret["Warn"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Warn"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.WarnOrAttack, b?.WarnOrAttack);
      if (result is Result.Modified or Result.Added) {ret["WarnOrAttack"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["WarnOrAttack"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Attack, b?.Attack);
      if (result is Result.Modified or Result.Added) {ret["Attack"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Attack"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlayerSkillsGetter? a, IPlayerSkillsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.SkillValues, b?.SkillValues);
      if (result is Result.Modified or Result.Added) {ret["SkillValues"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillValues"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SkillOffsets, b?.SkillOffsets);
      if (result is Result.Modified or Result.Added) {ret["SkillOffsets"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SkillOffsets"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Health, b?.Health);
      if (result is Result.Modified or Result.Added) {ret["Health"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Health"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Magicka, b?.Magicka);
      if (result is Result.Modified or Result.Added) {ret["Magicka"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Magicka"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Stamina, b?.Stamina);
      if (result is Result.Modified or Result.Added) {ret["Stamina"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Stamina"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FarAwayModelDistance, b?.FarAwayModelDistance);
      if (result is Result.Modified or Result.Added) {ret["FarAwayModelDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FarAwayModelDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GearedUpWeapons, b?.GearedUpWeapons);
      if (result is Result.Modified or Result.Added) {ret["GearedUpWeapons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GearedUpWeapons"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused2, b?.Unused2);
      if (result is Result.Modified or Result.Added) {ret["Unused2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IANpcSoundDefinitionGetter? a, IANpcSoundDefinitionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INpcFaceMorphGetter? a, INpcFaceMorphGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NoseLongVsShort, b?.NoseLongVsShort);
      if (result is Result.Modified or Result.Added) {ret["NoseLongVsShort"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoseLongVsShort"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NoseUpVsDown, b?.NoseUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["NoseUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NoseUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.JawUpVsDown, b?.JawUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["JawUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["JawUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.JawNarrowVsWide, b?.JawNarrowVsWide);
      if (result is Result.Modified or Result.Added) {ret["JawNarrowVsWide"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["JawNarrowVsWide"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.JawForwardVsBack, b?.JawForwardVsBack);
      if (result is Result.Modified or Result.Added) {ret["JawForwardVsBack"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["JawForwardVsBack"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CheeksUpVsDown, b?.CheeksUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["CheeksUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CheeksUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CheeksForwardVsBack, b?.CheeksForwardVsBack);
      if (result is Result.Modified or Result.Added) {ret["CheeksForwardVsBack"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CheeksForwardVsBack"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EyesUpVsDown, b?.EyesUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["EyesUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EyesUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EyesInVsOut, b?.EyesInVsOut);
      if (result is Result.Modified or Result.Added) {ret["EyesInVsOut"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EyesInVsOut"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BrowsUpVsDown, b?.BrowsUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["BrowsUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BrowsUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BrowsInVsOut, b?.BrowsInVsOut);
      if (result is Result.Modified or Result.Added) {ret["BrowsInVsOut"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BrowsInVsOut"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BrowsForwardVsBack, b?.BrowsForwardVsBack);
      if (result is Result.Modified or Result.Added) {ret["BrowsForwardVsBack"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BrowsForwardVsBack"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LipsUpVsDown, b?.LipsUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["LipsUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LipsUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LipsInVsOut, b?.LipsInVsOut);
      if (result is Result.Modified or Result.Added) {ret["LipsInVsOut"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LipsInVsOut"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChinNarrowVsWide, b?.ChinNarrowVsWide);
      if (result is Result.Modified or Result.Added) {ret["ChinNarrowVsWide"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChinNarrowVsWide"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChinUpVsDown, b?.ChinUpVsDown);
      if (result is Result.Modified or Result.Added) {ret["ChinUpVsDown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChinUpVsDown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ChinUnderbiteVsOverbite, b?.ChinUnderbiteVsOverbite);
      if (result is Result.Modified or Result.Added) {ret["ChinUnderbiteVsOverbite"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ChinUnderbiteVsOverbite"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EyesForwardVsBack, b?.EyesForwardVsBack);
      if (result is Result.Modified or Result.Added) {ret["EyesForwardVsBack"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EyesForwardVsBack"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INpcFacePartsGetter? a, INpcFacePartsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Nose, b?.Nose);
      if (result is Result.Modified or Result.Added) {ret["Nose"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Nose"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Eyes, b?.Eyes);
      if (result is Result.Modified or Result.Added) {ret["Eyes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Eyes"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Mouth, b?.Mouth);
      if (result is Result.Modified or Result.Added) {ret["Mouth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Mouth"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ITintLayerGetter? a, ITintLayerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.InterpolationValue, b?.InterpolationValue);
      if (result is Result.Modified or Result.Added) {ret["InterpolationValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["InterpolationValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Preset, b?.Preset);
      if (result is Result.Modified or Result.Added) {ret["Preset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Preset"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageAdapterGetter? a, IPackageAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptFragments, b?.ScriptFragments);
      if (result is Result.Modified or Result.Added) {ret["ScriptFragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptFragments"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageIdlesGetter? a, IPackageIdlesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TimerSetting, b?.TimerSetting);
      if (result is Result.Modified or Result.Added) {ret["TimerSetting"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TimerSetting"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Animations, b?.Animations);
      if (result is Result.Modified or Result.Added) {ret["Animations"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Animations"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageBranchGetter? a, IPackageBranchGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BranchType, b?.BranchType);
      if (result is Result.Modified or Result.Added) {ret["BranchType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BranchType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Root, b?.Root);
      if (result is Result.Modified or Result.Added) {ret["Root"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Root"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ProcedureType, b?.ProcedureType);
      if (result is Result.Modified or Result.Added) {ret["ProcedureType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ProcedureType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DataInputIndices, b?.DataInputIndices);
      if (result is Result.Modified or Result.Added) {ret["DataInputIndices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DataInputIndices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlagsOverride, b?.FlagsOverride);
      if (result is Result.Modified or Result.Added) {ret["FlagsOverride"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlagsOverride"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FlagsOverrideUnused, b?.FlagsOverrideUnused);
      if (result is Result.Modified or Result.Added) {ret["FlagsOverrideUnused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FlagsOverrideUnused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageEventGetter? a, IPackageEventGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Idle, b?.Idle);
      if (result is Result.Modified or Result.Added) {ret["Idle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Idle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCHR, b?.SCHR);
      if (result is Result.Modified or Result.Added) {ret["SCHR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCHR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCDA, b?.SCDA);
      if (result is Result.Modified or Result.Added) {ret["SCDA"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCDA"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCTX, b?.SCTX);
      if (result is Result.Modified or Result.Added) {ret["SCTX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCTX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.QNAM, b?.QNAM);
      if (result is Result.Modified or Result.Added) {ret["QNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["QNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TNAM, b?.TNAM);
      if (result is Result.Modified or Result.Added) {ret["TNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Topics, b?.Topics);
      if (result is Result.Modified or Result.Added) {ret["Topics"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Topics"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPatrolGetter? a, IPatrolGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.IdleTime, b?.IdleTime);
      if (result is Result.Modified or Result.Added) {ret["IdleTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IdleTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Idle, b?.Idle);
      if (result is Result.Modified or Result.Added) {ret["Idle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Idle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCHR, b?.SCHR);
      if (result is Result.Modified or Result.Added) {ret["SCHR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCHR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCTX, b?.SCTX);
      if (result is Result.Modified or Result.Added) {ret["SCTX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCTX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Topics, b?.Topics);
      if (result is Result.Modified or Result.Added) {ret["Topics"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Topics"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILinkedReferencesGetter? a, ILinkedReferencesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.KeywordOrReference, b?.KeywordOrReference);
      if (result is Result.Modified or Result.Added) {ret["KeywordOrReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["KeywordOrReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActivateParentsGetter? a, IActivateParentsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Parents, b?.Parents);
      if (result is Result.Modified or Result.Added) {ret["Parents"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Parents"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILinkedReferenceColorGetter? a, ILinkedReferenceColorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Start, b?.Start);
      if (result is Result.Modified or Result.Added) {ret["Start"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Start"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.End, b?.End);
      if (result is Result.Modified or Result.Added) {ret["End"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["End"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEnableParentGetter? a, IEnableParentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacementGetter? a, IPlacementGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Position, b?.Position);
      if (result is Result.Modified or Result.Added) {ret["Position"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Position"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Rotation, b?.Rotation);
      if (result is Result.Modified or Result.Added) {ret["Rotation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rotation"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPlacedPrimitiveGetter? a, IPlacedPrimitiveGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Bounds, b?.Bounds);
      if (result is Result.Modified or Result.Added) {ret["Bounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Bounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Color, b?.Color);
      if (result is Result.Modified or Result.Added) {ret["Color"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Color"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IBoundingGetter? a, IBoundingGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Width, b?.Width);
      if (result is Result.Modified or Result.Added) {ret["Width"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Width"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Height, b?.Height);
      if (result is Result.Modified or Result.Added) {ret["Height"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Height"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Position, b?.Position);
      if (result is Result.Modified or Result.Added) {ret["Position"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Position"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationQ1, b?.RotationQ1);
      if (result is Result.Modified or Result.Added) {ret["RotationQ1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationQ1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationQ2, b?.RotationQ2);
      if (result is Result.Modified or Result.Added) {ret["RotationQ2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationQ2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationQ3, b?.RotationQ3);
      if (result is Result.Modified or Result.Added) {ret["RotationQ3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationQ3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotationQ4, b?.RotationQ4);
      if (result is Result.Modified or Result.Added) {ret["RotationQ4"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotationQ4"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPortalGetter? a, IPortalGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Origin, b?.Origin);
      if (result is Result.Modified or Result.Added) {ret["Origin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Origin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Destination, b?.Destination);
      if (result is Result.Modified or Result.Added) {ret["Destination"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Destination"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWaterReflectionGetter? a, IWaterReflectionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Water, b?.Water);
      if (result is Result.Modified or Result.Added) {ret["Water"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Water"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILightDataGetter? a, ILightDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FovOffset, b?.FovOffset);
      if (result is Result.Modified or Result.Added) {ret["FovOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FovOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FadeOffset, b?.FadeOffset);
      if (result is Result.Modified or Result.Added) {ret["FadeOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FadeOffset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EndDistanceCap, b?.EndDistanceCap);
      if (result is Result.Modified or Result.Added) {ret["EndDistanceCap"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EndDistanceCap"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ShadowDepthBias, b?.ShadowDepthBias);
      if (result is Result.Modified or Result.Added) {ret["ShadowDepthBias"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ShadowDepthBias"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAlphaGetter? a, IAlphaGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Cutoff, b?.Cutoff);
      if (result is Result.Modified or Result.Added) {ret["Cutoff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Cutoff"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Base, b?.Base);
      if (result is Result.Modified or Result.Added) {ret["Base"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Base"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ITeleportDestinationGetter? a, ITeleportDestinationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Door, b?.Door);
      if (result is Result.Modified or Result.Added) {ret["Door"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Door"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Position, b?.Position);
      if (result is Result.Modified or Result.Added) {ret["Position"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Position"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Rotation, b?.Rotation);
      if (result is Result.Modified or Result.Added) {ret["Rotation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rotation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWaterVelocityGetter? a, IWaterVelocityGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Offset, b?.Offset);
      if (result is Result.Modified or Result.Added) {ret["Offset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Offset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Angle, b?.Angle);
      if (result is Result.Modified or Result.Added) {ret["Angle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Angle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILockDataGetter? a, ILockDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Key, b?.Key);
      if (result is Result.Modified or Result.Added) {ret["Key"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Key"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused2, b?.Unused2);
      if (result is Result.Modified or Result.Added) {ret["Unused2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INavigationDoorLinkGetter? a, INavigationDoorLinkGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NavMesh, b?.NavMesh);
      if (result is Result.Modified or Result.Added) {ret["NavMesh"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavMesh"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavMeshTriangleIndex, b?.NavMeshTriangleIndex);
      if (result is Result.Modified or Result.Added) {ret["NavMeshTriangleIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavMeshTriangleIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IMapMarkerGetter? a, IMapMarkerGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestAdapterGetter? a, IQuestAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FileName, b?.FileName);
      if (result is Result.Modified or Result.Added) {ret["FileName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FileName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Fragments, b?.Fragments);
      if (result is Result.Modified or Result.Added) {ret["Fragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Fragments"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Aliases, b?.Aliases);
      if (result is Result.Modified or Result.Added) {ret["Aliases"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Aliases"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestStageGetter? a, IQuestStageGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LogEntries, b?.LogEntries);
      if (result is Result.Modified or Result.Added) {ret["LogEntries"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LogEntries"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.INDXDataTypeState, b?.INDXDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["INDXDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["INDXDataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestObjectiveGetter? a, IQuestObjectiveGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplayText, b?.DisplayText);
      if (result is Result.Modified or Result.Added) {ret["DisplayText"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplayText"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Targets, b?.Targets);
      if (result is Result.Modified or Result.Added) {ret["Targets"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Targets"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestAliasGetter? a, IQuestAliasGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ID, b?.ID);
      if (result is Result.Modified or Result.Added) {ret["ID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AliasIndexToForceIntoWhenFilled, b?.AliasIndexToForceIntoWhenFilled);
      if (result is Result.Modified or Result.Added) {ret["AliasIndexToForceIntoWhenFilled"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AliasIndexToForceIntoWhenFilled"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpecificLocation, b?.SpecificLocation);
      if (result is Result.Modified or Result.Added) {ret["SpecificLocation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpecificLocation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ForcedReference, b?.ForcedReference);
      if (result is Result.Modified or Result.Added) {ret["ForcedReference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ForcedReference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UniqueActor, b?.UniqueActor);
      if (result is Result.Modified or Result.Added) {ret["UniqueActor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UniqueActor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Location, b?.Location);
      if (result is Result.Modified or Result.Added) {ret["Location"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Location"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.External, b?.External);
      if (result is Result.Modified or Result.Added) {ret["External"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["External"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CreateReferenceToObject, b?.CreateReferenceToObject);
      if (result is Result.Modified or Result.Added) {ret["CreateReferenceToObject"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CreateReferenceToObject"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FindMatchingRefNearAlias, b?.FindMatchingRefNearAlias);
      if (result is Result.Modified or Result.Added) {ret["FindMatchingRefNearAlias"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FindMatchingRefNearAlias"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FindMatchingRefFromEvent, b?.FindMatchingRefFromEvent);
      if (result is Result.Modified or Result.Added) {ret["FindMatchingRefFromEvent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FindMatchingRefFromEvent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keywords, b?.Keywords);
      if (result is Result.Modified or Result.Added) {ret["Keywords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keywords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SpectatorOverridePackageList, b?.SpectatorOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["SpectatorOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SpectatorOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObserveDeadBodyOverridePackageList, b?.ObserveDeadBodyOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["ObserveDeadBodyOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObserveDeadBodyOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GuardWarnOverridePackageList, b?.GuardWarnOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["GuardWarnOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GuardWarnOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CombatOverridePackageList, b?.CombatOverridePackageList);
      if (result is Result.Modified or Result.Added) {ret["CombatOverridePackageList"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CombatOverridePackageList"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DisplayName, b?.DisplayName);
      if (result is Result.Modified or Result.Added) {ret["DisplayName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DisplayName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Spells, b?.Spells);
      if (result is Result.Modified or Result.Added) {ret["Spells"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Spells"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Factions, b?.Factions);
      if (result is Result.Modified or Result.Added) {ret["Factions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Factions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PackageData, b?.PackageData);
      if (result is Result.Modified or Result.Added) {ret["PackageData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PackageData"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VoiceTypes, b?.VoiceTypes);
      if (result is Result.Modified or Result.Added) {ret["VoiceTypes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VoiceTypes"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionAreaGetter? a, IRegionAreaGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeFallOff, b?.EdgeFallOff);
      if (result is Result.Modified or Result.Added) {ret["EdgeFallOff"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeFallOff"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RegionPointListData, b?.RegionPointListData);
      if (result is Result.Modified or Result.Added) {ret["RegionPointListData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RegionPointListData"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionObjectsGetter? a, IRegionObjectsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Objects, b?.Objects);
      if (result is Result.Modified or Result.Added) {ret["Objects"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Objects"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionWeatherGetter? a, IRegionWeatherGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Weathers, b?.Weathers);
      if (result is Result.Modified or Result.Added) {ret["Weathers"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weathers"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionMapGetter? a, IRegionMapGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionLandGetter? a, IRegionLandGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionGrassesGetter? a, IRegionGrassesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Grasses, b?.Grasses);
      if (result is Result.Modified or Result.Added) {ret["Grasses"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grasses"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionSoundsGetter? a, IRegionSoundsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Music, b?.Music);
      if (result is Result.Modified or Result.Added) {ret["Music"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Music"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sounds, b?.Sounds);
      if (result is Result.Modified or Result.Added) {ret["Sounds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sounds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Header, b?.Header);
      if (result is Result.Modified or Result.Added) {ret["Header"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Header"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Icons, b?.Icons);
      if (result is Result.Modified or Result.Added) {ret["Icons"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Icons"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IShoutWordGetter? a, IShoutWordGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Word, b?.Word);
      if (result is Result.Modified or Result.Added) {ret["Word"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Word"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Spell, b?.Spell);
      if (result is Result.Modified or Result.Added) {ret["Spell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Spell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RecoveryTime, b?.RecoveryTime);
      if (result is Result.Modified or Result.Added) {ret["RecoveryTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RecoveryTime"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundLoopAndRumbleGetter? a, ISoundLoopAndRumbleGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Loop, b?.Loop);
      if (result is Result.Modified or Result.Added) {ret["Loop"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Loop"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RumbleValues, b?.RumbleValues);
      if (result is Result.Modified or Result.Added) {ret["RumbleValues"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RumbleValues"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundOutputDataGetter? a, ISoundOutputDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ReverbSendPercent, b?.ReverbSendPercent);
      if (result is Result.Modified or Result.Added) {ret["ReverbSendPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ReverbSendPercent"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundOutputChannelsGetter? a, ISoundOutputChannelsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Channel0, b?.Channel0);
      if (result is Result.Modified or Result.Added) {ret["Channel0"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Channel0"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Channel1, b?.Channel1);
      if (result is Result.Modified or Result.Added) {ret["Channel1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Channel1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Channel2, b?.Channel2);
      if (result is Result.Modified or Result.Added) {ret["Channel2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Channel2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundOutputAttenuationGetter? a, ISoundOutputAttenuationGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinDistance, b?.MinDistance);
      if (result is Result.Modified or Result.Added) {ret["MinDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistance, b?.MaxDistance);
      if (result is Result.Modified or Result.Added) {ret["MaxDistance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Curve, b?.Curve);
      if (result is Result.Modified or Result.Added) {ret["Curve"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Curve"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILodGetter? a, ILodGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Level0, b?.Level0);
      if (result is Result.Modified or Result.Added) {ret["Level0"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level0"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level0Extra, b?.Level0Extra);
      if (result is Result.Modified or Result.Added) {ret["Level0Extra"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level0Extra"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level1, b?.Level1);
      if (result is Result.Modified or Result.Added) {ret["Level1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level1Extra, b?.Level1Extra);
      if (result is Result.Modified or Result.Added) {ret["Level1Extra"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level1Extra"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level2, b?.Level2);
      if (result is Result.Modified or Result.Added) {ret["Level2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level2Extra, b?.Level2Extra);
      if (result is Result.Modified or Result.Added) {ret["Level2Extra"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level2Extra"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level3, b?.Level3);
      if (result is Result.Modified or Result.Added) {ret["Level3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level3Extra, b?.Level3Extra);
      if (result is Result.Modified or Result.Added) {ret["Level3Extra"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level3Extra"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IStoryManagerQuestGetter? a, IStoryManagerQuestGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FNAM, b?.FNAM);
      if (result is Result.Modified or Result.Added) {ret["FNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HoursUntilReset, b?.HoursUntilReset);
      if (result is Result.Modified or Result.Added) {ret["HoursUntilReset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HoursUntilReset"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeaponBasicStatsGetter? a, IWeaponBasicStatsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Value, b?.Value);
      if (result is Result.Modified or Result.Added) {ret["Value"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Value"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Weight, b?.Weight);
      if (result is Result.Modified or Result.Added) {ret["Weight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Weight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Damage, b?.Damage);
      if (result is Result.Modified or Result.Added) {ret["Damage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Damage"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeaponDataGetter? a, IWeaponDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AnimationType, b?.AnimationType);
      if (result is Result.Modified or Result.Added) {ret["AnimationType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AnimationType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Speed, b?.Speed);
      if (result is Result.Modified or Result.Added) {ret["Speed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Speed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reach, b?.Reach);
      if (result is Result.Modified or Result.Added) {ret["Reach"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reach"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused2, b?.Unused2);
      if (result is Result.Modified or Result.Added) {ret["Unused2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SightFOV, b?.SightFOV);
      if (result is Result.Modified or Result.Added) {ret["SightFOV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SightFOV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BaseVATStoHitChance, b?.BaseVATStoHitChance);
      if (result is Result.Modified or Result.Added) {ret["BaseVATStoHitChance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BaseVATStoHitChance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackAnimation, b?.AttackAnimation);
      if (result is Result.Modified or Result.Added) {ret["AttackAnimation"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackAnimation"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NumProjectiles, b?.NumProjectiles);
      if (result is Result.Modified or Result.Added) {ret["NumProjectiles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NumProjectiles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EmbeddedWeaponAV, b?.EmbeddedWeaponAV);
      if (result is Result.Modified or Result.Added) {ret["EmbeddedWeaponAV"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EmbeddedWeaponAV"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RangeMin, b?.RangeMin);
      if (result is Result.Modified or Result.Added) {ret["RangeMin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RangeMin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RangeMax, b?.RangeMax);
      if (result is Result.Modified or Result.Added) {ret["RangeMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RangeMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnHit, b?.OnHit);
      if (result is Result.Modified or Result.Added) {ret["OnHit"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnHit"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AnimationAttackMult, b?.AnimationAttackMult);
      if (result is Result.Modified or Result.Added) {ret["AnimationAttackMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AnimationAttackMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RumbleLeftMotorStrength, b?.RumbleLeftMotorStrength);
      if (result is Result.Modified or Result.Added) {ret["RumbleLeftMotorStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RumbleLeftMotorStrength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RumbleRightMotorStrength, b?.RumbleRightMotorStrength);
      if (result is Result.Modified or Result.Added) {ret["RumbleRightMotorStrength"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RumbleRightMotorStrength"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RumbleDuration, b?.RumbleDuration);
      if (result is Result.Modified or Result.Added) {ret["RumbleDuration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RumbleDuration"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Skill, b?.Skill);
      if (result is Result.Modified or Result.Added) {ret["Skill"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Skill"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown4, b?.Unknown4);
      if (result is Result.Modified or Result.Added) {ret["Unknown4"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown4"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Resist, b?.Resist);
      if (result is Result.Modified or Result.Added) {ret["Resist"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Resist"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown5, b?.Unknown5);
      if (result is Result.Modified or Result.Added) {ret["Unknown5"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown5"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Stagger, b?.Stagger);
      if (result is Result.Modified or Result.Added) {ret["Stagger"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Stagger"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICriticalDataGetter? a, ICriticalDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Damage, b?.Damage);
      if (result is Result.Modified or Result.Added) {ret["Damage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Damage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PercentMult, b?.PercentMult);
      if (result is Result.Modified or Result.Added) {ret["PercentMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PercentMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused2, b?.Unused2);
      if (result is Result.Modified or Result.Added) {ret["Unused2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused3, b?.Unused3);
      if (result is Result.Modified or Result.Added) {ret["Unused3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused3"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Effect, b?.Effect);
      if (result is Result.Modified or Result.Added) {ret["Effect"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Effect"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused4, b?.Unused4);
      if (result is Result.Modified or Result.Added) {ret["Unused4"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused4"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherColorGetter? a, IWeatherColorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Sunrise, b?.Sunrise);
      if (result is Result.Modified or Result.Added) {ret["Sunrise"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunrise"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Day, b?.Day);
      if (result is Result.Modified or Result.Added) {ret["Day"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Day"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sunset, b?.Sunset);
      if (result is Result.Modified or Result.Added) {ret["Sunset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Night, b?.Night);
      if (result is Result.Modified or Result.Added) {ret["Night"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Night"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherSoundGetter? a, IWeatherSoundGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherImageSpacesGetter? a, IWeatherImageSpacesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Sunrise, b?.Sunrise);
      if (result is Result.Modified or Result.Added) {ret["Sunrise"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunrise"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Day, b?.Day);
      if (result is Result.Modified or Result.Added) {ret["Day"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Day"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sunset, b?.Sunset);
      if (result is Result.Modified or Result.Added) {ret["Sunset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Night, b?.Night);
      if (result is Result.Modified or Result.Added) {ret["Night"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Night"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherVolumetricLightingGetter? a, IWeatherVolumetricLightingGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Sunrise, b?.Sunrise);
      if (result is Result.Modified or Result.Added) {ret["Sunrise"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunrise"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Day, b?.Day);
      if (result is Result.Modified or Result.Added) {ret["Day"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Day"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sunset, b?.Sunset);
      if (result is Result.Modified or Result.Added) {ret["Sunset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Night, b?.Night);
      if (result is Result.Modified or Result.Added) {ret["Night"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Night"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWeatherAmbientColorSetGetter? a, IWeatherAmbientColorSetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Sunrise, b?.Sunrise);
      if (result is Result.Modified or Result.Added) {ret["Sunrise"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunrise"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Day, b?.Day);
      if (result is Result.Modified or Result.Added) {ret["Day"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Day"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sunset, b?.Sunset);
      if (result is Result.Modified or Result.Added) {ret["Sunset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sunset"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Night, b?.Night);
      if (result is Result.Modified or Result.Added) {ret["Night"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Night"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceGridReferenceGetter? a, IWorldspaceGridReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.GridPosition, b?.GridPosition);
      if (result is Result.Modified or Result.Added) {ret["GridPosition"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GridPosition"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.References, b?.References);
      if (result is Result.Modified or Result.Added) {ret["References"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["References"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceMaxHeightGetter? a, IWorldspaceMaxHeightGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CellData, b?.CellData);
      if (result is Result.Modified or Result.Added) {ret["CellData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CellData"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceParentGetter? a, IWorldspaceParentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Worldspace, b?.Worldspace);
      if (result is Result.Modified or Result.Added) {ret["Worldspace"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Worldspace"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceLandDefaultsGetter? a, IWorldspaceLandDefaultsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultLandHeight, b?.DefaultLandHeight);
      if (result is Result.Modified or Result.Added) {ret["DefaultLandHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultLandHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DefaultWaterHeight, b?.DefaultWaterHeight);
      if (result is Result.Modified or Result.Added) {ret["DefaultWaterHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DefaultWaterHeight"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceMapGetter? a, IWorldspaceMapGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Versioning, b?.Versioning);
      if (result is Result.Modified or Result.Added) {ret["Versioning"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Versioning"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UsableDimensions, b?.UsableDimensions);
      if (result is Result.Modified or Result.Added) {ret["UsableDimensions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UsableDimensions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NorthwestCellCoords, b?.NorthwestCellCoords);
      if (result is Result.Modified or Result.Added) {ret["NorthwestCellCoords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NorthwestCellCoords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SoutheastCellCoords, b?.SoutheastCellCoords);
      if (result is Result.Modified or Result.Added) {ret["SoutheastCellCoords"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SoutheastCellCoords"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CameraMinHeight, b?.CameraMinHeight);
      if (result is Result.Modified or Result.Added) {ret["CameraMinHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CameraMinHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CameraMaxHeight, b?.CameraMaxHeight);
      if (result is Result.Modified or Result.Added) {ret["CameraMaxHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CameraMaxHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CameraInitialPitch, b?.CameraInitialPitch);
      if (result is Result.Modified or Result.Added) {ret["CameraInitialPitch"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CameraInitialPitch"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceMapOffsetGetter? a, IWorldspaceMapOffsetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Scale, b?.Scale);
      if (result is Result.Modified or Result.Added) {ret["Scale"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scale"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CellOffset, b?.CellOffset);
      if (result is Result.Modified or Result.Added) {ret["CellOffset"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CellOffset"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceObjectBoundsGetter? a, IWorldspaceObjectBoundsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceBlockGetter? a, IWorldspaceBlockGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BlockNumberY, b?.BlockNumberY);
      if (result is Result.Modified or Result.Added) {ret["BlockNumberY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlockNumberY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BlockNumberX, b?.BlockNumberX);
      if (result is Result.Modified or Result.Added) {ret["BlockNumberX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlockNumberX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GroupType, b?.GroupType);
      if (result is Result.Modified or Result.Added) {ret["GroupType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GroupType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LastModified, b?.LastModified);
      if (result is Result.Modified or Result.Added) {ret["LastModified"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LastModified"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISceneAdapterGetter? a, ISceneAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptFragments, b?.ScriptFragments);
      if (result is Result.Modified or Result.Added) {ret["ScriptFragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptFragments"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScenePhaseGetter? a, IScenePhaseGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StartConditions, b?.StartConditions);
      if (result is Result.Modified or Result.Added) {ret["StartConditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StartConditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CompletionConditions, b?.CompletionConditions);
      if (result is Result.Modified or Result.Added) {ret["CompletionConditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CompletionConditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused2, b?.Unused2);
      if (result is Result.Modified or Result.Added) {ret["Unused2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EditorWidth, b?.EditorWidth);
      if (result is Result.Modified or Result.Added) {ret["EditorWidth"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EditorWidth"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISceneActorGetter? a, ISceneActorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ID, b?.ID);
      if (result is Result.Modified or Result.Added) {ret["ID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BehaviorFlags, b?.BehaviorFlags);
      if (result is Result.Modified or Result.Added) {ret["BehaviorFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BehaviorFlags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISceneActionGetter? a, ISceneActionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ActorID, b?.ActorID);
      if (result is Result.Modified or Result.Added) {ret["ActorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ActorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LNAM, b?.LNAM);
      if (result is Result.Modified or Result.Added) {ret["LNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StartPhase, b?.StartPhase);
      if (result is Result.Modified or Result.Added) {ret["StartPhase"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StartPhase"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EndPhase, b?.EndPhase);
      if (result is Result.Modified or Result.Added) {ret["EndPhase"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EndPhase"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TimerSeconds, b?.TimerSeconds);
      if (result is Result.Modified or Result.Added) {ret["TimerSeconds"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TimerSeconds"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Packages, b?.Packages);
      if (result is Result.Modified or Result.Added) {ret["Packages"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Packages"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Topic, b?.Topic);
      if (result is Result.Modified or Result.Added) {ret["Topic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Topic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HeadtrackActorID, b?.HeadtrackActorID);
      if (result is Result.Modified or Result.Added) {ret["HeadtrackActorID"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HeadtrackActorID"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingMax, b?.LoopingMax);
      if (result is Result.Modified or Result.Added) {ret["LoopingMax"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingMax"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LoopingMin, b?.LoopingMin);
      if (result is Result.Modified or Result.Added) {ret["LoopingMin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LoopingMin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Emotion, b?.Emotion);
      if (result is Result.Modified or Result.Added) {ret["Emotion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Emotion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EmotionValue, b?.EmotionValue);
      if (result is Result.Modified or Result.Added) {ret["EmotionValue"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EmotionValue"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScenePhaseUnusedDataGetter? a, IScenePhaseUnusedDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.SCHR, b?.SCHR);
      if (result is Result.Modified or Result.Added) {ret["SCHR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCHR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCDA, b?.SCDA);
      if (result is Result.Modified or Result.Added) {ret["SCDA"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCDA"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCTX, b?.SCTX);
      if (result is Result.Modified or Result.Added) {ret["SCTX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCTX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.QNAM, b?.QNAM);
      if (result is Result.Modified or Result.Added) {ret["QNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["QNAM"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCRO, b?.SCRO);
      if (result is Result.Modified or Result.Added) {ret["SCRO"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCRO"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPerkAdapterGetter? a, IPerkAdapterGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptFragments, b?.ScriptFragments);
      if (result is Result.Modified or Result.Added) {ret["ScriptFragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptFragments"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAPerkEffectGetter? a, IAPerkEffectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Rank, b?.Rank);
      if (result is Result.Modified or Result.Added) {ret["Rank"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Rank"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PRKEDataTypeState, b?.PRKEDataTypeState);
      if (result is Result.Modified or Result.Added) {ret["PRKEDataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PRKEDataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAttackDataGetter? a, IAttackDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.DamageMult, b?.DamageMult);
      if (result is Result.Modified or Result.Added) {ret["DamageMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DamageMult"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Chance, b?.Chance);
      if (result is Result.Modified or Result.Added) {ret["Chance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Chance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Spell, b?.Spell);
      if (result is Result.Modified or Result.Added) {ret["Spell"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Spell"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackAngle, b?.AttackAngle);
      if (result is Result.Modified or Result.Added) {ret["AttackAngle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackAngle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StrikeAngle, b?.StrikeAngle);
      if (result is Result.Modified or Result.Added) {ret["StrikeAngle"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StrikeAngle"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Stagger, b?.Stagger);
      if (result is Result.Modified or Result.Added) {ret["Stagger"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Stagger"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AttackType, b?.AttackType);
      if (result is Result.Modified or Result.Added) {ret["AttackType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AttackType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Knockdown, b?.Knockdown);
      if (result is Result.Modified or Result.Added) {ret["Knockdown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Knockdown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RecoveryTime, b?.RecoveryTime);
      if (result is Result.Modified or Result.Added) {ret["RecoveryTime"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RecoveryTime"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StaminaMult, b?.StaminaMult);
      if (result is Result.Modified or Result.Added) {ret["StaminaMult"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StaminaMult"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISpeedOverridesGetter? a, ISpeedOverridesGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.LeftWalk, b?.LeftWalk);
      if (result is Result.Modified or Result.Added) {ret["LeftWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeftWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LeftRun, b?.LeftRun);
      if (result is Result.Modified or Result.Added) {ret["LeftRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LeftRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RightWalk, b?.RightWalk);
      if (result is Result.Modified or Result.Added) {ret["RightWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RightWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RightRun, b?.RightRun);
      if (result is Result.Modified or Result.Added) {ret["RightRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RightRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ForwardWalk, b?.ForwardWalk);
      if (result is Result.Modified or Result.Added) {ret["ForwardWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ForwardWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ForwardRun, b?.ForwardRun);
      if (result is Result.Modified or Result.Added) {ret["ForwardRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ForwardRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BackWalk, b?.BackWalk);
      if (result is Result.Modified or Result.Added) {ret["BackWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BackWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BackRun, b?.BackRun);
      if (result is Result.Modified or Result.Added) {ret["BackRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BackRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotateWalk, b?.RotateWalk);
      if (result is Result.Modified or Result.Added) {ret["RotateWalk"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotateWalk"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RotateRun, b?.RotateRun);
      if (result is Result.Modified or Result.Added) {ret["RotateRun"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RotateRun"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPhonemeGetter? a, IPhonemeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IY, b?.IY);
      if (result is Result.Modified or Result.Added) {ret["IY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IH, b?.IH);
      if (result is Result.Modified or Result.Added) {ret["IH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EH, b?.EH);
      if (result is Result.Modified or Result.Added) {ret["EH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EY, b?.EY);
      if (result is Result.Modified or Result.Added) {ret["EY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AE, b?.AE);
      if (result is Result.Modified or Result.Added) {ret["AE"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AE"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AA, b?.AA);
      if (result is Result.Modified or Result.Added) {ret["AA"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AA"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AW, b?.AW);
      if (result is Result.Modified or Result.Added) {ret["AW"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AW"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AY, b?.AY);
      if (result is Result.Modified or Result.Added) {ret["AY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AH, b?.AH);
      if (result is Result.Modified or Result.Added) {ret["AH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AO, b?.AO);
      if (result is Result.Modified or Result.Added) {ret["AO"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AO"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OY, b?.OY);
      if (result is Result.Modified or Result.Added) {ret["OY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OW, b?.OW);
      if (result is Result.Modified or Result.Added) {ret["OW"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OW"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UH, b?.UH);
      if (result is Result.Modified or Result.Added) {ret["UH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.UW, b?.UW);
      if (result is Result.Modified or Result.Added) {ret["UW"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["UW"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ER, b?.ER);
      if (result is Result.Modified or Result.Added) {ret["ER"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ER"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AX, b?.AX);
      if (result is Result.Modified or Result.Added) {ret["AX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.S, b?.S);
      if (result is Result.Modified or Result.Added) {ret["S"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["S"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SH, b?.SH);
      if (result is Result.Modified or Result.Added) {ret["SH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Z, b?.Z);
      if (result is Result.Modified or Result.Added) {ret["Z"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Z"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ZH, b?.ZH);
      if (result is Result.Modified or Result.Added) {ret["ZH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ZH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.F, b?.F);
      if (result is Result.Modified or Result.Added) {ret["F"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["F"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TH, b?.TH);
      if (result is Result.Modified or Result.Added) {ret["TH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.V, b?.V);
      if (result is Result.Modified or Result.Added) {ret["V"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["V"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DH, b?.DH);
      if (result is Result.Modified or Result.Added) {ret["DH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.M, b?.M);
      if (result is Result.Modified or Result.Added) {ret["M"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["M"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.N, b?.N);
      if (result is Result.Modified or Result.Added) {ret["N"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["N"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NG, b?.NG);
      if (result is Result.Modified or Result.Added) {ret["NG"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NG"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.L, b?.L);
      if (result is Result.Modified or Result.Added) {ret["L"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["L"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.R, b?.R);
      if (result is Result.Modified or Result.Added) {ret["R"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["R"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.W, b?.W);
      if (result is Result.Modified or Result.Added) {ret["W"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["W"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Y, b?.Y);
      if (result is Result.Modified or Result.Added) {ret["Y"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Y"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.HH, b?.HH);
      if (result is Result.Modified or Result.Added) {ret["HH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.B, b?.B);
      if (result is Result.Modified or Result.Added) {ret["B"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["B"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.D, b?.D);
      if (result is Result.Modified or Result.Added) {ret["D"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["D"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.JH, b?.JH);
      if (result is Result.Modified or Result.Added) {ret["JH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["JH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.G, b?.G);
      if (result is Result.Modified or Result.Added) {ret["G"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["G"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.P, b?.P);
      if (result is Result.Modified or Result.Added) {ret["P"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["P"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.T, b?.T);
      if (result is Result.Modified or Result.Added) {ret["T"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["T"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.K, b?.K);
      if (result is Result.Modified or Result.Added) {ret["K"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["K"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CH, b?.CH);
      if (result is Result.Modified or Result.Added) {ret["CH"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CH"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SIL, b?.SIL);
      if (result is Result.Modified or Result.Added) {ret["SIL"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SIL"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SHOTSIL, b?.SHOTSIL);
      if (result is Result.Modified or Result.Added) {ret["SHOTSIL"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SHOTSIL"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FLAP, b?.FLAP);
      if (result is Result.Modified or Result.Added) {ret["FLAP"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FLAP"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScriptEntryGetter? a, IScriptEntryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Properties, b?.Properties);
      if (result is Result.Modified or Result.Added) {ret["Properties"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Properties"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IAlternateTextureGetter? a, IAlternateTextureGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NewTexture, b?.NewTexture);
      if (result is Result.Modified or Result.Added) {ret["NewTexture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NewTexture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDestructableDataGetter? a, IDestructableDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Health, b?.Health);
      if (result is Result.Modified or Result.Added) {ret["Health"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Health"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DESTCount, b?.DESTCount);
      if (result is Result.Modified or Result.Added) {ret["DESTCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DESTCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.VATSTargetable, b?.VATSTargetable);
      if (result is Result.Modified or Result.Added) {ret["VATSTargetable"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["VATSTargetable"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDestructionStageGetter? a, IDestructionStageGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Data, b?.Data);
      if (result is Result.Modified or Result.Added) {ret["Data"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Data"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Model, b?.Model);
      if (result is Result.Modified or Result.Added) {ret["Model"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Model"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IConditionDataGetter? a, IConditionDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.RunOnType, b?.RunOnType);
      if (result is Result.Modified or Result.Added) {ret["RunOnType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RunOnType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown3, b?.Unknown3);
      if (result is Result.Modified or Result.Added) {ret["Unknown3"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown3"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IANavigationMeshDataGetter? a, IANavigationMeshDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshVersion, b?.NavmeshVersion);
      if (result is Result.Modified or Result.Added) {ret["NavmeshVersion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshVersion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Magic, b?.Magic);
      if (result is Result.Modified or Result.Added) {ret["Magic"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Magic"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Vertices, b?.Vertices);
      if (result is Result.Modified or Result.Added) {ret["Vertices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Vertices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Triangles, b?.Triangles);
      if (result is Result.Modified or Result.Added) {ret["Triangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Triangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeLinks, b?.EdgeLinks);
      if (result is Result.Modified or Result.Added) {ret["EdgeLinks"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeLinks"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DoorTriangles, b?.DoorTriangles);
      if (result is Result.Modified or Result.Added) {ret["DoorTriangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DoorTriangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshGridDivisor, b?.NavmeshGridDivisor);
      if (result is Result.Modified or Result.Added) {ret["NavmeshGridDivisor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshGridDivisor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistanceX, b?.MaxDistanceX);
      if (result is Result.Modified or Result.Added) {ret["MaxDistanceX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistanceX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxDistanceY, b?.MaxDistanceY);
      if (result is Result.Modified or Result.Added) {ret["MaxDistanceY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxDistanceY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NavmeshGrid, b?.NavmeshGrid);
      if (result is Result.Modified or Result.Added) {ret["NavmeshGrid"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavmeshGrid"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IContainerItemGetter? a, IContainerItemGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Item, b?.Item);
      if (result is Result.Modified or Result.Added) {ret["Item"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Item"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Count, b?.Count);
      if (result is Result.Modified or Result.Added) {ret["Count"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Count"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IExtraDataGetter? a, IExtraDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Owner, b?.Owner);
      if (result is Result.Modified or Result.Added) {ret["Owner"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Owner"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ItemCondition, b?.ItemCondition);
      if (result is Result.Modified or Result.Added) {ret["ItemCondition"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ItemCondition"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScriptFragmentsGetter? a, IScriptFragmentsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FileName, b?.FileName);
      if (result is Result.Modified or Result.Added) {ret["FileName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FileName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnBegin, b?.OnBegin);
      if (result is Result.Modified or Result.Added) {ret["OnBegin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnBegin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnEnd, b?.OnEnd);
      if (result is Result.Modified or Result.Added) {ret["OnEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnEnd"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IALocationTargetGetter? a, IALocationTargetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEntryPointsGetter? a, IEntryPointsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Points, b?.Points);
      if (result is Result.Modified or Result.Added) {ret["Points"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Points"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEffectDataGetter? a, IEffectDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Magnitude, b?.Magnitude);
      if (result is Result.Modified or Result.Added) {ret["Magnitude"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Magnitude"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Area, b?.Area);
      if (result is Result.Modified or Result.Added) {ret["Area"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Area"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Duration, b?.Duration);
      if (result is Result.Modified or Result.Added) {ret["Duration"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Duration"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILayerHeaderGetter? a, ILayerHeaderGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Texture, b?.Texture);
      if (result is Result.Modified or Result.Added) {ret["Texture"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Texture"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Quadrant, b?.Quadrant);
      if (result is Result.Modified or Result.Added) {ret["Quadrant"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quadrant"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LayerNumber, b?.LayerNumber);
      if (result is Result.Modified or Result.Added) {ret["LayerNumber"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LayerNumber"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledItemEntryDataGetter? a, ILeveledItemEntryDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Count, b?.Count);
      if (result is Result.Modified or Result.Added) {ret["Count"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Count"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledNpcEntryDataGetter? a, ILeveledNpcEntryDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Count, b?.Count);
      if (result is Result.Modified or Result.Added) {ret["Count"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Count"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILeveledSpellEntryDataGetter? a, ILeveledSpellEntryDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Count, b?.Count);
      if (result is Result.Modified or Result.Added) {ret["Count"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Count"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INavmeshTriangleGetter? a, INavmeshTriangleGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Vertices, b?.Vertices);
      if (result is Result.Modified or Result.Added) {ret["Vertices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Vertices"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeLink_0_1, b?.EdgeLink_0_1);
      if (result is Result.Modified or Result.Added) {ret["EdgeLink_0_1"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeLink_0_1"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeLink_1_2, b?.EdgeLink_1_2);
      if (result is Result.Modified or Result.Added) {ret["EdgeLink_1_2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeLink_1_2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EdgeLink_2_0, b?.EdgeLink_2_0);
      if (result is Result.Modified or Result.Added) {ret["EdgeLink_2_0"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EdgeLink_2_0"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.CoverFlags, b?.CoverFlags);
      if (result is Result.Modified or Result.Added) {ret["CoverFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["CoverFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.IsCover, b?.IsCover);
      if (result is Result.Modified or Result.Added) {ret["IsCover"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["IsCover"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IEdgeLinkGetter? a, IEdgeLinkGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Mesh, b?.Mesh);
      if (result is Result.Modified or Result.Added) {ret["Mesh"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Mesh"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.TriangleIndex, b?.TriangleIndex);
      if (result is Result.Modified or Result.Added) {ret["TriangleIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TriangleIndex"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDoorTriangleGetter? a, IDoorTriangleGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.TriangleBeforeDoor, b?.TriangleBeforeDoor);
      if (result is Result.Modified or Result.Added) {ret["TriangleBeforeDoor"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["TriangleBeforeDoor"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Door, b?.Door);
      if (result is Result.Modified or Result.Added) {ret["Door"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Door"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILinkedDoorGetter? a, ILinkedDoorGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Door, b?.Door);
      if (result is Result.Modified or Result.Added) {ret["Door"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Door"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIslandDataGetter? a, IIslandDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Min, b?.Min);
      if (result is Result.Modified or Result.Added) {ret["Min"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Min"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Max, b?.Max);
      if (result is Result.Modified or Result.Added) {ret["Max"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Max"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Triangles, b?.Triangles);
      if (result is Result.Modified or Result.Added) {ret["Triangles"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Triangles"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Vertices, b?.Vertices);
      if (result is Result.Modified or Result.Added) {ret["Vertices"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Vertices"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INavmeshSetGetter? a, INavmeshSetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Navmeshes, b?.Navmeshes);
      if (result is Result.Modified or Result.Added) {ret["Navmeshes"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Navmeshes"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(INavmeshNodeGetter? a, INavmeshNodeGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.NavMesh, b?.NavMesh);
      if (result is Result.Modified or Result.Added) {ret["NavMesh"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NavMesh"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NodeIndex, b?.NodeIndex);
      if (result is Result.Modified or Result.Added) {ret["NodeIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NodeIndex"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IANpcLevelGetter? a, IANpcLevelGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageScriptFragmentsGetter? a, IPackageScriptFragmentsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FileName, b?.FileName);
      if (result is Result.Modified or Result.Added) {ret["FileName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FileName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnBegin, b?.OnBegin);
      if (result is Result.Modified or Result.Added) {ret["OnBegin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnBegin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnEnd, b?.OnEnd);
      if (result is Result.Modified or Result.Added) {ret["OnEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnEnd"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnChange, b?.OnChange);
      if (result is Result.Modified or Result.Added) {ret["OnChange"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnChange"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageRootGetter? a, IPackageRootGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BranchCount, b?.BranchCount);
      if (result is Result.Modified or Result.Added) {ret["BranchCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BranchCount"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPackageFlagsOverrideGetter? a, IPackageFlagsOverrideGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.SetFlags, b?.SetFlags);
      if (result is Result.Modified or Result.Added) {ret["SetFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SetFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ClearFlags, b?.ClearFlags);
      if (result is Result.Modified or Result.Added) {ret["ClearFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ClearFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SetInterruptFlags, b?.SetInterruptFlags);
      if (result is Result.Modified or Result.Added) {ret["SetInterruptFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SetInterruptFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ClearInterruptFlags, b?.ClearInterruptFlags);
      if (result is Result.Modified or Result.Added) {ret["ClearInterruptFlags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ClearInterruptFlags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.PreferredSpeed, b?.PreferredSpeed);
      if (result is Result.Modified or Result.Added) {ret["PreferredSpeed"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PreferredSpeed"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IATopicReferenceGetter? a, IATopicReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IActivateParentGetter? a, IActivateParentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Delay, b?.Delay);
      if (result is Result.Modified or Result.Added) {ret["Delay"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Delay"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestScriptFragmentGetter? a, IQuestScriptFragmentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Stage, b?.Stage);
      if (result is Result.Modified or Result.Added) {ret["Stage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Stage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.StageIndex, b?.StageIndex);
      if (result is Result.Modified or Result.Added) {ret["StageIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["StageIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptName, b?.ScriptName);
      if (result is Result.Modified or Result.Added) {ret["ScriptName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FragmentName, b?.FragmentName);
      if (result is Result.Modified or Result.Added) {ret["FragmentName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FragmentName"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestFragmentAliasGetter? a, IQuestFragmentAliasGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Property, b?.Property);
      if (result is Result.Modified or Result.Added) {ret["Property"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Property"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Version, b?.Version);
      if (result is Result.Modified or Result.Added) {ret["Version"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Version"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ObjectFormat, b?.ObjectFormat);
      if (result is Result.Modified or Result.Added) {ret["ObjectFormat"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ObjectFormat"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Scripts, b?.Scripts);
      if (result is Result.Modified or Result.Added) {ret["Scripts"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Scripts"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestLogEntryGetter? a, IQuestLogEntryGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Entry, b?.Entry);
      if (result is Result.Modified or Result.Added) {ret["Entry"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Entry"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.NextQuest, b?.NextQuest);
      if (result is Result.Modified or Result.Added) {ret["NextQuest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["NextQuest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCHR, b?.SCHR);
      if (result is Result.Modified or Result.Added) {ret["SCHR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCHR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SCTX, b?.SCTX);
      if (result is Result.Modified or Result.Added) {ret["SCTX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SCTX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.QNAM, b?.QNAM);
      if (result is Result.Modified or Result.Added) {ret["QNAM"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["QNAM"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IQuestObjectiveTargetGetter? a, IQuestObjectiveTargetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AliasIndex, b?.AliasIndex);
      if (result is Result.Modified or Result.Added) {ret["AliasIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AliasIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.QSTADataTypeState, b?.QSTADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["QSTADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["QSTADataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ILocationAliasReferenceGetter? a, ILocationAliasReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AliasIndex, b?.AliasIndex);
      if (result is Result.Modified or Result.Added) {ret["AliasIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AliasIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Keyword, b?.Keyword);
      if (result is Result.Modified or Result.Added) {ret["Keyword"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Keyword"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RefType, b?.RefType);
      if (result is Result.Modified or Result.Added) {ret["RefType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RefType"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IExternalAliasReferenceGetter? a, IExternalAliasReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Quest, b?.Quest);
      if (result is Result.Modified or Result.Added) {ret["Quest"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Quest"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AliasIndex, b?.AliasIndex);
      if (result is Result.Modified or Result.Added) {ret["AliasIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AliasIndex"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ICreateReferenceToObjectGetter? a, ICreateReferenceToObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Object, b?.Object);
      if (result is Result.Modified or Result.Added) {ret["Object"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Object"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AliasIndex, b?.AliasIndex);
      if (result is Result.Modified or Result.Added) {ret["AliasIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AliasIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Create, b?.Create);
      if (result is Result.Modified or Result.Added) {ret["Create"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Create"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Level, b?.Level);
      if (result is Result.Modified or Result.Added) {ret["Level"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Level"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ALCADataTypeState, b?.ALCADataTypeState);
      if (result is Result.Modified or Result.Added) {ret["ALCADataTypeState"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ALCADataTypeState"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFindMatchingRefNearAliasGetter? a, IFindMatchingRefNearAliasGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.AliasIndex, b?.AliasIndex);
      if (result is Result.Modified or Result.Added) {ret["AliasIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AliasIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Type, b?.Type);
      if (result is Result.Modified or Result.Added) {ret["Type"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Type"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IFindMatchingRefFromEventGetter? a, IFindMatchingRefFromEventGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.FromEvent, b?.FromEvent);
      if (result is Result.Modified or Result.Added) {ret["FromEvent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FromEvent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.EventData, b?.EventData);
      if (result is Result.Modified or Result.Added) {ret["EventData"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["EventData"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionObjectGetter? a, IRegionObjectGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Object, b?.Object);
      if (result is Result.Modified or Result.Added) {ret["Object"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Object"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ParentIndex, b?.ParentIndex);
      if (result is Result.Modified or Result.Added) {ret["ParentIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ParentIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Density, b?.Density);
      if (result is Result.Modified or Result.Added) {ret["Density"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Density"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Clustering, b?.Clustering);
      if (result is Result.Modified or Result.Added) {ret["Clustering"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Clustering"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinSlope, b?.MinSlope);
      if (result is Result.Modified or Result.Added) {ret["MinSlope"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinSlope"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxSlope, b?.MaxSlope);
      if (result is Result.Modified or Result.Added) {ret["MaxSlope"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxSlope"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RadiusWrtPercent, b?.RadiusWrtPercent);
      if (result is Result.Modified or Result.Added) {ret["RadiusWrtPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RadiusWrtPercent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Radius, b?.Radius);
      if (result is Result.Modified or Result.Added) {ret["Radius"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Radius"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MinHeight, b?.MinHeight);
      if (result is Result.Modified or Result.Added) {ret["MinHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MinHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.MaxHeight, b?.MaxHeight);
      if (result is Result.Modified or Result.Added) {ret["MaxHeight"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["MaxHeight"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Sink, b?.Sink);
      if (result is Result.Modified or Result.Added) {ret["Sink"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sink"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SinkVariance, b?.SinkVariance);
      if (result is Result.Modified or Result.Added) {ret["SinkVariance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SinkVariance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SizeVariance, b?.SizeVariance);
      if (result is Result.Modified or Result.Added) {ret["SizeVariance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SizeVariance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.AngleVariance, b?.AngleVariance);
      if (result is Result.Modified or Result.Added) {ret["AngleVariance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["AngleVariance"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionDataHeaderGetter? a, IRegionDataHeaderGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.DataType, b?.DataType);
      if (result is Result.Modified or Result.Added) {ret["DataType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DataType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Priority, b?.Priority);
      if (result is Result.Modified or Result.Added) {ret["Priority"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Priority"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionGrassGetter? a, IRegionGrassGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Grass, b?.Grass);
      if (result is Result.Modified or Result.Added) {ret["Grass"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Grass"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IRegionSoundGetter? a, IRegionSoundGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Sound, b?.Sound);
      if (result is Result.Modified or Result.Added) {ret["Sound"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Sound"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Chance, b?.Chance);
      if (result is Result.Modified or Result.Added) {ret["Chance"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Chance"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISoundOutputChannelGetter? a, ISoundOutputChannelGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.L, b?.L);
      if (result is Result.Modified or Result.Added) {ret["L"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["L"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.R, b?.R);
      if (result is Result.Modified or Result.Added) {ret["R"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["R"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.C, b?.C);
      if (result is Result.Modified or Result.Added) {ret["C"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["C"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LFE, b?.LFE);
      if (result is Result.Modified or Result.Added) {ret["LFE"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LFE"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RL, b?.RL);
      if (result is Result.Modified or Result.Added) {ret["RL"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RL"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.RR, b?.RR);
      if (result is Result.Modified or Result.Added) {ret["RR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RR"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BL, b?.BL);
      if (result is Result.Modified or Result.Added) {ret["BL"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BL"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BR, b?.BR);
      if (result is Result.Modified or Result.Added) {ret["BR"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BR"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceReferenceGetter? a, IWorldspaceReferenceGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Reference, b?.Reference);
      if (result is Result.Modified or Result.Added) {ret["Reference"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Reference"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Position, b?.Position);
      if (result is Result.Modified or Result.Added) {ret["Position"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Position"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IWorldspaceSubBlockGetter? a, IWorldspaceSubBlockGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.BlockNumberY, b?.BlockNumberY);
      if (result is Result.Modified or Result.Added) {ret["BlockNumberY"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlockNumberY"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.BlockNumberX, b?.BlockNumberX);
      if (result is Result.Modified or Result.Added) {ret["BlockNumberX"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["BlockNumberX"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.GroupType, b?.GroupType);
      if (result is Result.Modified or Result.Added) {ret["GroupType"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["GroupType"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.LastModified, b?.LastModified);
      if (result is Result.Modified or Result.Added) {ret["LastModified"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["LastModified"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Items, b?.Items);
      if (result is Result.Modified or Result.Added) {ret["Items"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Items"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(ISceneScriptFragmentsGetter? a, ISceneScriptFragmentsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.PhaseFragments, b?.PhaseFragments);
      if (result is Result.Modified or Result.Added) {ret["PhaseFragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["PhaseFragments"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FileName, b?.FileName);
      if (result is Result.Modified or Result.Added) {ret["FileName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FileName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnBegin, b?.OnBegin);
      if (result is Result.Modified or Result.Added) {ret["OnBegin"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnBegin"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.OnEnd, b?.OnEnd);
      if (result is Result.Modified or Result.Added) {ret["OnEnd"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["OnEnd"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPerkScriptFragmentsGetter? a, IPerkScriptFragmentsGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FileName, b?.FileName);
      if (result is Result.Modified or Result.Added) {ret["FileName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FileName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Fragments, b?.Fragments);
      if (result is Result.Modified or Result.Added) {ret["Fragments"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Fragments"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IPerkConditionGetter? a, IPerkConditionGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.RunOnTabIndex, b?.RunOnTabIndex);
      if (result is Result.Modified or Result.Added) {ret["RunOnTabIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["RunOnTabIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Conditions, b?.Conditions);
      if (result is Result.Modified or Result.Added) {ret["Conditions"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Conditions"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScriptPropertyGetter? a, IScriptPropertyGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IDestructionStageDataGetter? a, IDestructionStageDataGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.HealthPercent, b?.HealthPercent);
      if (result is Result.Modified or Result.Added) {ret["HealthPercent"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["HealthPercent"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ModelDamageStage, b?.ModelDamageStage);
      if (result is Result.Modified or Result.Added) {ret["ModelDamageStage"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ModelDamageStage"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.SelfDamagePerSecond, b?.SelfDamagePerSecond);
      if (result is Result.Modified or Result.Added) {ret["SelfDamagePerSecond"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["SelfDamagePerSecond"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Explosion, b?.Explosion);
      if (result is Result.Modified or Result.Added) {ret["Explosion"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Explosion"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Debris, b?.Debris);
      if (result is Result.Modified or Result.Added) {ret["Debris"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Debris"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.DebrisCount, b?.DebrisCount);
      if (result is Result.Modified or Result.Added) {ret["DebrisCount"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["DebrisCount"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IOwnerTargetGetter? a, IOwnerTargetGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScriptFragmentGetter? a, IScriptFragmentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptName, b?.ScriptName);
      if (result is Result.Modified or Result.Added) {ret["ScriptName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FragmentName, b?.FragmentName);
      if (result is Result.Modified or Result.Added) {ret["FragmentName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FragmentName"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScriptObjectPropertyGetter? a, IScriptObjectPropertyGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Object, b?.Object);
      if (result is Result.Modified or Result.Added) {ret["Object"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Object"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Alias, b?.Alias);
      if (result is Result.Modified or Result.Added) {ret["Alias"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Alias"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unused, b?.Unused);
      if (result is Result.Modified or Result.Added) {ret["Unused"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unused"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Name, b?.Name);
      if (result is Result.Modified or Result.Added) {ret["Name"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Name"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IScenePhaseFragmentGetter? a, IScenePhaseFragmentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.Flags, b?.Flags);
      if (result is Result.Modified or Result.Added) {ret["Flags"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Flags"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Index, b?.Index);
      if (result is Result.Modified or Result.Added) {ret["Index"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Index"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptName, b?.ScriptName);
      if (result is Result.Modified or Result.Added) {ret["ScriptName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FragmentName, b?.FragmentName);
      if (result is Result.Modified or Result.Added) {ret["FragmentName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FragmentName"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    public (Result, object?) Diff(IIndexedScriptFragmentGetter? a, IIndexedScriptFragmentGetter? b) {
      dynamic differ = this;
      Result result = Result.NoChange;
      var ret = new Dictionary<string, object?>();
      object? o = null;
      Result thisResult = Result.NoChange;
      (result, o) = ((Result, object?))differ.Diff(a?.FragmentIndex, b?.FragmentIndex);
      if (result is Result.Modified or Result.Added) {ret["FragmentIndex"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FragmentIndex"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown, b?.Unknown);
      if (result is Result.Modified or Result.Added) {ret["Unknown"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.Unknown2, b?.Unknown2);
      if (result is Result.Modified or Result.Added) {ret["Unknown2"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["Unknown2"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.ScriptName, b?.ScriptName);
      if (result is Result.Modified or Result.Added) {ret["ScriptName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["ScriptName"] = DELETED; thisResult = Result.Modified;}
      (result, o) = ((Result, object?))differ.Diff(a?.FragmentName, b?.FragmentName);
      if (result is Result.Modified or Result.Added) {ret["FragmentName"] = o; thisResult = Result.Modified;}
      if (result == Result.Deleted) {ret["FragmentName"] = DELETED; thisResult = Result.Modified;}
      return (thisResult, ret); 
      }
    }
  }
